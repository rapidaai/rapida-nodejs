/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: marketplace-api.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./google/protobuf/timestamp";
import * as dependency_2 from "./google/protobuf/struct";
import * as dependency_3 from "./common";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace marketplace_api {
    export class GetAllDeploymentRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            paginate?: dependency_3.Paginate;
            criterias?: dependency_3.Criteria[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("paginate" in data && data.paginate != undefined) {
                    this.paginate = data.paginate;
                }
                if ("criterias" in data && data.criterias != undefined) {
                    this.criterias = data.criterias;
                }
            }
        }
        get paginate() {
            return pb_1.Message.getWrapperField(this, dependency_3.Paginate, 1) as dependency_3.Paginate;
        }
        set paginate(value: dependency_3.Paginate) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_paginate() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get criterias() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.Criteria, 2) as dependency_3.Criteria[];
        }
        set criterias(value: dependency_3.Criteria[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        static fromObject(data: {
            paginate?: ReturnType<typeof dependency_3.Paginate.prototype.toObject>;
            criterias?: ReturnType<typeof dependency_3.Criteria.prototype.toObject>[];
        }): GetAllDeploymentRequest {
            const message = new GetAllDeploymentRequest({});
            if (data.paginate != null) {
                message.paginate = dependency_3.Paginate.fromObject(data.paginate);
            }
            if (data.criterias != null) {
                message.criterias = data.criterias.map(item => dependency_3.Criteria.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                paginate?: ReturnType<typeof dependency_3.Paginate.prototype.toObject>;
                criterias?: ReturnType<typeof dependency_3.Criteria.prototype.toObject>[];
            } = {};
            if (this.paginate != null) {
                data.paginate = this.paginate.toObject();
            }
            if (this.criterias != null) {
                data.criterias = this.criterias.map((item: dependency_3.Criteria) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_paginate)
                writer.writeMessage(1, this.paginate, () => this.paginate.serialize(writer));
            if (this.criterias.length)
                writer.writeRepeatedMessage(2, this.criterias, (item: dependency_3.Criteria) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllDeploymentRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllDeploymentRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.paginate, () => message.paginate = dependency_3.Paginate.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.criterias, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_3.Criteria.deserialize(reader), dependency_3.Criteria));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllDeploymentRequest {
            return GetAllDeploymentRequest.deserialize(bytes);
        }
    }
    export class SearchableDeployment extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            status?: string;
            visibility?: string;
            type?: string;
            projectId?: string;
            organizationId?: string;
            tag?: string[];
            language?: string;
            organization?: dependency_3.Organization;
            name?: string;
            description?: string;
            createdDate?: dependency_1.google.protobuf.Timestamp;
            updatedDate?: dependency_1.google.protobuf.Timestamp;
            appAppearance?: dependency_2.google.protobuf.Struct;
            webAppearance?: dependency_2.google.protobuf.Struct;
            modelProviderId?: string;
            modelProviderName?: string;
            modelOptions?: dependency_3.Metadata[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [14, 12], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("visibility" in data && data.visibility != undefined) {
                    this.visibility = data.visibility;
                }
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("projectId" in data && data.projectId != undefined) {
                    this.projectId = data.projectId;
                }
                if ("organizationId" in data && data.organizationId != undefined) {
                    this.organizationId = data.organizationId;
                }
                if ("tag" in data && data.tag != undefined) {
                    this.tag = data.tag;
                }
                if ("language" in data && data.language != undefined) {
                    this.language = data.language;
                }
                if ("organization" in data && data.organization != undefined) {
                    this.organization = data.organization;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("createdDate" in data && data.createdDate != undefined) {
                    this.createdDate = data.createdDate;
                }
                if ("updatedDate" in data && data.updatedDate != undefined) {
                    this.updatedDate = data.updatedDate;
                }
                if ("appAppearance" in data && data.appAppearance != undefined) {
                    this.appAppearance = data.appAppearance;
                }
                if ("webAppearance" in data && data.webAppearance != undefined) {
                    this.webAppearance = data.webAppearance;
                }
                if ("modelProviderId" in data && data.modelProviderId != undefined) {
                    this.modelProviderId = data.modelProviderId;
                }
                if ("modelProviderName" in data && data.modelProviderName != undefined) {
                    this.modelProviderName = data.modelProviderName;
                }
                if ("modelOptions" in data && data.modelOptions != undefined) {
                    this.modelOptions = data.modelOptions;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set status(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get visibility() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set visibility(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set type(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get projectId() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set projectId(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get organizationId() {
            return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
        }
        set organizationId(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        get tag() {
            return pb_1.Message.getFieldWithDefault(this, 14, []) as string[];
        }
        set tag(value: string[]) {
            pb_1.Message.setField(this, 14, value);
        }
        get language() {
            return pb_1.Message.getFieldWithDefault(this, 16, "") as string;
        }
        set language(value: string) {
            pb_1.Message.setField(this, 16, value);
        }
        get organization() {
            return pb_1.Message.getWrapperField(this, dependency_3.Organization, 17) as dependency_3.Organization;
        }
        set organization(value: dependency_3.Organization) {
            pb_1.Message.setWrapperField(this, 17, value);
        }
        get has_organization() {
            return pb_1.Message.getField(this, 17) != null;
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 18, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 18, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 19, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 19, value);
        }
        get createdDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 20) as dependency_1.google.protobuf.Timestamp;
        }
        set createdDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 20, value);
        }
        get has_createdDate() {
            return pb_1.Message.getField(this, 20) != null;
        }
        get updatedDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 21) as dependency_1.google.protobuf.Timestamp;
        }
        set updatedDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 21, value);
        }
        get has_updatedDate() {
            return pb_1.Message.getField(this, 21) != null;
        }
        get appAppearance() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Struct, 24) as dependency_2.google.protobuf.Struct;
        }
        set appAppearance(value: dependency_2.google.protobuf.Struct) {
            pb_1.Message.setWrapperField(this, 24, value);
        }
        get has_appAppearance() {
            return pb_1.Message.getField(this, 24) != null;
        }
        get webAppearance() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Struct, 25) as dependency_2.google.protobuf.Struct;
        }
        set webAppearance(value: dependency_2.google.protobuf.Struct) {
            pb_1.Message.setWrapperField(this, 25, value);
        }
        get has_webAppearance() {
            return pb_1.Message.getField(this, 25) != null;
        }
        get modelProviderId() {
            return pb_1.Message.getFieldWithDefault(this, 26, "0") as string;
        }
        set modelProviderId(value: string) {
            pb_1.Message.setField(this, 26, value);
        }
        get modelProviderName() {
            return pb_1.Message.getFieldWithDefault(this, 27, "") as string;
        }
        set modelProviderName(value: string) {
            pb_1.Message.setField(this, 27, value);
        }
        get modelOptions() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.Metadata, 12) as dependency_3.Metadata[];
        }
        set modelOptions(value: dependency_3.Metadata[]) {
            pb_1.Message.setRepeatedWrapperField(this, 12, value);
        }
        static fromObject(data: {
            id?: string;
            status?: string;
            visibility?: string;
            type?: string;
            projectId?: string;
            organizationId?: string;
            tag?: string[];
            language?: string;
            organization?: ReturnType<typeof dependency_3.Organization.prototype.toObject>;
            name?: string;
            description?: string;
            createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            appAppearance?: ReturnType<typeof dependency_2.google.protobuf.Struct.prototype.toObject>;
            webAppearance?: ReturnType<typeof dependency_2.google.protobuf.Struct.prototype.toObject>;
            modelProviderId?: string;
            modelProviderName?: string;
            modelOptions?: ReturnType<typeof dependency_3.Metadata.prototype.toObject>[];
        }): SearchableDeployment {
            const message = new SearchableDeployment({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.visibility != null) {
                message.visibility = data.visibility;
            }
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.projectId != null) {
                message.projectId = data.projectId;
            }
            if (data.organizationId != null) {
                message.organizationId = data.organizationId;
            }
            if (data.tag != null) {
                message.tag = data.tag;
            }
            if (data.language != null) {
                message.language = data.language;
            }
            if (data.organization != null) {
                message.organization = dependency_3.Organization.fromObject(data.organization);
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.createdDate != null) {
                message.createdDate = dependency_1.google.protobuf.Timestamp.fromObject(data.createdDate);
            }
            if (data.updatedDate != null) {
                message.updatedDate = dependency_1.google.protobuf.Timestamp.fromObject(data.updatedDate);
            }
            if (data.appAppearance != null) {
                message.appAppearance = dependency_2.google.protobuf.Struct.fromObject(data.appAppearance);
            }
            if (data.webAppearance != null) {
                message.webAppearance = dependency_2.google.protobuf.Struct.fromObject(data.webAppearance);
            }
            if (data.modelProviderId != null) {
                message.modelProviderId = data.modelProviderId;
            }
            if (data.modelProviderName != null) {
                message.modelProviderName = data.modelProviderName;
            }
            if (data.modelOptions != null) {
                message.modelOptions = data.modelOptions.map(item => dependency_3.Metadata.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                status?: string;
                visibility?: string;
                type?: string;
                projectId?: string;
                organizationId?: string;
                tag?: string[];
                language?: string;
                organization?: ReturnType<typeof dependency_3.Organization.prototype.toObject>;
                name?: string;
                description?: string;
                createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                appAppearance?: ReturnType<typeof dependency_2.google.protobuf.Struct.prototype.toObject>;
                webAppearance?: ReturnType<typeof dependency_2.google.protobuf.Struct.prototype.toObject>;
                modelProviderId?: string;
                modelProviderName?: string;
                modelOptions?: ReturnType<typeof dependency_3.Metadata.prototype.toObject>[];
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.visibility != null) {
                data.visibility = this.visibility;
            }
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.projectId != null) {
                data.projectId = this.projectId;
            }
            if (this.organizationId != null) {
                data.organizationId = this.organizationId;
            }
            if (this.tag != null) {
                data.tag = this.tag;
            }
            if (this.language != null) {
                data.language = this.language;
            }
            if (this.organization != null) {
                data.organization = this.organization.toObject();
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.createdDate != null) {
                data.createdDate = this.createdDate.toObject();
            }
            if (this.updatedDate != null) {
                data.updatedDate = this.updatedDate.toObject();
            }
            if (this.appAppearance != null) {
                data.appAppearance = this.appAppearance.toObject();
            }
            if (this.webAppearance != null) {
                data.webAppearance = this.webAppearance.toObject();
            }
            if (this.modelProviderId != null) {
                data.modelProviderId = this.modelProviderId;
            }
            if (this.modelProviderName != null) {
                data.modelProviderName = this.modelProviderName;
            }
            if (this.modelOptions != null) {
                data.modelOptions = this.modelOptions.map((item: dependency_3.Metadata) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.status.length)
                writer.writeString(2, this.status);
            if (this.visibility.length)
                writer.writeString(3, this.visibility);
            if (this.type.length)
                writer.writeString(4, this.type);
            if (this.projectId.length)
                writer.writeString(7, this.projectId);
            if (this.organizationId.length)
                writer.writeString(8, this.organizationId);
            if (this.tag.length)
                writer.writeRepeatedString(14, this.tag);
            if (this.language.length)
                writer.writeString(16, this.language);
            if (this.has_organization)
                writer.writeMessage(17, this.organization, () => this.organization.serialize(writer));
            if (this.name.length)
                writer.writeString(18, this.name);
            if (this.description.length)
                writer.writeString(19, this.description);
            if (this.has_createdDate)
                writer.writeMessage(20, this.createdDate, () => this.createdDate.serialize(writer));
            if (this.has_updatedDate)
                writer.writeMessage(21, this.updatedDate, () => this.updatedDate.serialize(writer));
            if (this.has_appAppearance)
                writer.writeMessage(24, this.appAppearance, () => this.appAppearance.serialize(writer));
            if (this.has_webAppearance)
                writer.writeMessage(25, this.webAppearance, () => this.webAppearance.serialize(writer));
            if (this.modelProviderId != "0")
                writer.writeUint64String(26, this.modelProviderId);
            if (this.modelProviderName.length)
                writer.writeString(27, this.modelProviderName);
            if (this.modelOptions.length)
                writer.writeRepeatedMessage(12, this.modelOptions, (item: dependency_3.Metadata) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SearchableDeployment {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SearchableDeployment();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.status = reader.readString();
                        break;
                    case 3:
                        message.visibility = reader.readString();
                        break;
                    case 4:
                        message.type = reader.readString();
                        break;
                    case 7:
                        message.projectId = reader.readString();
                        break;
                    case 8:
                        message.organizationId = reader.readString();
                        break;
                    case 14:
                        pb_1.Message.addToRepeatedField(message, 14, reader.readString());
                        break;
                    case 16:
                        message.language = reader.readString();
                        break;
                    case 17:
                        reader.readMessage(message.organization, () => message.organization = dependency_3.Organization.deserialize(reader));
                        break;
                    case 18:
                        message.name = reader.readString();
                        break;
                    case 19:
                        message.description = reader.readString();
                        break;
                    case 20:
                        reader.readMessage(message.createdDate, () => message.createdDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 21:
                        reader.readMessage(message.updatedDate, () => message.updatedDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 24:
                        reader.readMessage(message.appAppearance, () => message.appAppearance = dependency_2.google.protobuf.Struct.deserialize(reader));
                        break;
                    case 25:
                        reader.readMessage(message.webAppearance, () => message.webAppearance = dependency_2.google.protobuf.Struct.deserialize(reader));
                        break;
                    case 26:
                        message.modelProviderId = reader.readUint64String();
                        break;
                    case 27:
                        message.modelProviderName = reader.readString();
                        break;
                    case 12:
                        reader.readMessage(message.modelOptions, () => pb_1.Message.addToRepeatedWrapperField(message, 12, dependency_3.Metadata.deserialize(reader), dependency_3.Metadata));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): SearchableDeployment {
            return SearchableDeployment.deserialize(bytes);
        }
    }
    export class GetAllDeploymentResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: SearchableDeployment[];
            error?: dependency_3.Error;
            paginated?: dependency_3.Paginated;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
                if ("paginated" in data && data.paginated != undefined) {
                    this.paginated = data.paginated;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getRepeatedWrapperField(this, SearchableDeployment, 3) as SearchableDeployment[];
        }
        set data(value: SearchableDeployment[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_3.Error, 4) as dependency_3.Error;
        }
        set error(value: dependency_3.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get paginated() {
            return pb_1.Message.getWrapperField(this, dependency_3.Paginated, 5) as dependency_3.Paginated;
        }
        set paginated(value: dependency_3.Paginated) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_paginated() {
            return pb_1.Message.getField(this, 5) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof SearchableDeployment.prototype.toObject>[];
            error?: ReturnType<typeof dependency_3.Error.prototype.toObject>;
            paginated?: ReturnType<typeof dependency_3.Paginated.prototype.toObject>;
        }): GetAllDeploymentResponse {
            const message = new GetAllDeploymentResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = data.data.map(item => SearchableDeployment.fromObject(item));
            }
            if (data.error != null) {
                message.error = dependency_3.Error.fromObject(data.error);
            }
            if (data.paginated != null) {
                message.paginated = dependency_3.Paginated.fromObject(data.paginated);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof SearchableDeployment.prototype.toObject>[];
                error?: ReturnType<typeof dependency_3.Error.prototype.toObject>;
                paginated?: ReturnType<typeof dependency_3.Paginated.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.map((item: SearchableDeployment) => item.toObject());
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            if (this.paginated != null) {
                data.paginated = this.paginated.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.data.length)
                writer.writeRepeatedMessage(3, this.data, (item: SearchableDeployment) => item.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (this.has_paginated)
                writer.writeMessage(5, this.paginated, () => this.paginated.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllDeploymentResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllDeploymentResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => pb_1.Message.addToRepeatedWrapperField(message, 3, SearchableDeployment.deserialize(reader), SearchableDeployment));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_3.Error.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.paginated, () => message.paginated = dependency_3.Paginated.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllDeploymentResponse {
            return GetAllDeploymentResponse.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedMarketplaceServiceService {
        static definition = {
            GetAllDeployment: {
                path: "/marketplace_api.MarketplaceService/GetAllDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAllDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAllDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAllDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAllDeploymentResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract GetAllDeployment(call: grpc_1.ServerUnaryCall<GetAllDeploymentRequest, GetAllDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAllDeploymentResponse>): void;
    }
    export class MarketplaceServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedMarketplaceServiceService.definition, "MarketplaceService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        GetAllDeployment: GrpcUnaryServiceInterface<GetAllDeploymentRequest, GetAllDeploymentResponse> = (message: GetAllDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAllDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAllDeploymentResponse>, callback?: grpc_1.requestCallback<GetAllDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllDeployment(message, metadata, options, callback);
        };
    }
}
