// source: workflow-api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.workflow_api.Condition', null, global);
goog.exportSymbol('proto.workflow_api.ConditionalTask', null, global);
goog.exportSymbol('proto.workflow_api.CreateWorkflowRequest', null, global);
goog.exportSymbol('proto.workflow_api.CreateWorkflowTagRequest', null, global);
goog.exportSymbol('proto.workflow_api.Edge', null, global);
goog.exportSymbol('proto.workflow_api.EndpointTask', null, global);
goog.exportSymbol('proto.workflow_api.FlowNode', null, global);
goog.exportSymbol('proto.workflow_api.GetAllWorkflowRequest', null, global);
goog.exportSymbol('proto.workflow_api.GetAllWorkflowResponse', null, global);
goog.exportSymbol('proto.workflow_api.GetWorkflowRequest', null, global);
goog.exportSymbol('proto.workflow_api.GetWorkflowResponse', null, global);
goog.exportSymbol('proto.workflow_api.GetWorkflowRunOutputRequest', null, global);
goog.exportSymbol('proto.workflow_api.GetWorkflowRunOutputResponse', null, global);
goog.exportSymbol('proto.workflow_api.InputTask', null, global);
goog.exportSymbol('proto.workflow_api.NodeInputs', null, global);
goog.exportSymbol('proto.workflow_api.OutputTask', null, global);
goog.exportSymbol('proto.workflow_api.Outputs', null, global);
goog.exportSymbol('proto.workflow_api.PublishWorkflowVersionRequest', null, global);
goog.exportSymbol('proto.workflow_api.Rule', null, global);
goog.exportSymbol('proto.workflow_api.RuleGroup', null, global);
goog.exportSymbol('proto.workflow_api.RuleVariable', null, global);
goog.exportSymbol('proto.workflow_api.RunWorkflowRequest', null, global);
goog.exportSymbol('proto.workflow_api.RunWorkflowResponse', null, global);
goog.exportSymbol('proto.workflow_api.UpdateWorkflowDetailRequest', null, global);
goog.exportSymbol('proto.workflow_api.Workflow', null, global);
goog.exportSymbol('proto.workflow_api.WorkflowAttributes', null, global);
goog.exportSymbol('proto.workflow_api.WorkflowOutput', null, global);
goog.exportSymbol('proto.workflow_api.WorkflowRunResponse', null, global);
goog.exportSymbol('proto.workflow_api.WorkflowVariable', null, global);
goog.exportSymbol('proto.workflow_api.WorkflowVersion', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.Workflow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.Workflow.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.Workflow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.Workflow.displayName = 'proto.workflow_api.Workflow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.WorkflowVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.WorkflowVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.WorkflowVersion.displayName = 'proto.workflow_api.WorkflowVersion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.Edge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.Edge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.Edge.displayName = 'proto.workflow_api.Edge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.FlowNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.FlowNode.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.FlowNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.FlowNode.displayName = 'proto.workflow_api.FlowNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.NodeInputs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.NodeInputs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.NodeInputs.displayName = 'proto.workflow_api.NodeInputs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.WorkflowVariable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.WorkflowVariable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.WorkflowVariable.displayName = 'proto.workflow_api.WorkflowVariable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.RunWorkflowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.RunWorkflowRequest.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.RunWorkflowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.RunWorkflowRequest.displayName = 'proto.workflow_api.RunWorkflowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.GetWorkflowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.GetWorkflowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.GetWorkflowRequest.displayName = 'proto.workflow_api.GetWorkflowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.EndpointTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.EndpointTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.EndpointTask.displayName = 'proto.workflow_api.EndpointTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.OutputTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.OutputTask.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.OutputTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.OutputTask.displayName = 'proto.workflow_api.OutputTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.ConditionalTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.ConditionalTask.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.ConditionalTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.ConditionalTask.displayName = 'proto.workflow_api.ConditionalTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.Condition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.Condition.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.Condition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.Condition.displayName = 'proto.workflow_api.Condition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.RuleGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.RuleGroup.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.RuleGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.RuleGroup.displayName = 'proto.workflow_api.RuleGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.Rule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.Rule.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.Rule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.Rule.displayName = 'proto.workflow_api.Rule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.RuleVariable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.RuleVariable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.RuleVariable.displayName = 'proto.workflow_api.RuleVariable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.Outputs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.Outputs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.Outputs.displayName = 'proto.workflow_api.Outputs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.InputTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.InputTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.InputTask.displayName = 'proto.workflow_api.InputTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.RunWorkflowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.RunWorkflowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.RunWorkflowResponse.displayName = 'proto.workflow_api.RunWorkflowResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.GetWorkflowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.GetWorkflowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.GetWorkflowResponse.displayName = 'proto.workflow_api.GetWorkflowResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.GetAllWorkflowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.GetAllWorkflowRequest.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.GetAllWorkflowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.GetAllWorkflowRequest.displayName = 'proto.workflow_api.GetAllWorkflowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.GetAllWorkflowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.GetAllWorkflowResponse.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.GetAllWorkflowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.GetAllWorkflowResponse.displayName = 'proto.workflow_api.GetAllWorkflowResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.WorkflowAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.WorkflowAttributes.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.WorkflowAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.WorkflowAttributes.displayName = 'proto.workflow_api.WorkflowAttributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.CreateWorkflowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.CreateWorkflowRequest.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.CreateWorkflowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.CreateWorkflowRequest.displayName = 'proto.workflow_api.CreateWorkflowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.GetWorkflowRunOutputRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.GetWorkflowRunOutputRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.GetWorkflowRunOutputRequest.displayName = 'proto.workflow_api.GetWorkflowRunOutputRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.GetWorkflowRunOutputResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.GetWorkflowRunOutputResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.GetWorkflowRunOutputResponse.displayName = 'proto.workflow_api.GetWorkflowRunOutputResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.WorkflowRunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.WorkflowRunResponse.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.WorkflowRunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.WorkflowRunResponse.displayName = 'proto.workflow_api.WorkflowRunResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.WorkflowOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.WorkflowOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.WorkflowOutput.displayName = 'proto.workflow_api.WorkflowOutput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.CreateWorkflowTagRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow_api.CreateWorkflowTagRequest.repeatedFields_, null);
};
goog.inherits(proto.workflow_api.CreateWorkflowTagRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.CreateWorkflowTagRequest.displayName = 'proto.workflow_api.CreateWorkflowTagRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.PublishWorkflowVersionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.PublishWorkflowVersionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.PublishWorkflowVersionRequest.displayName = 'proto.workflow_api.PublishWorkflowVersionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow_api.UpdateWorkflowDetailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow_api.UpdateWorkflowDetailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow_api.UpdateWorkflowDetailRequest.displayName = 'proto.workflow_api.UpdateWorkflowDetailRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.Workflow.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.Workflow.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.Workflow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.Workflow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.Workflow.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.workflow_api.Edge.toObject, includeInstance),
    flownodesList: jspb.Message.toObjectList(msg.getFlownodesList(),
    proto.workflow_api.FlowNode.toObject, includeInstance),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    source: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sourceidentifier: jspb.Message.getFieldWithDefault(msg, 7, "0"),
    visibility: jspb.Message.getFieldWithDefault(msg, 8, ""),
    workflowtag: (f = msg.getWorkflowtag()) && common_pb.Tag.toObject(includeInstance, f),
    workflowversionid: jspb.Message.getFieldWithDefault(msg, 10, "0"),
    workflowversion: (f = msg.getWorkflowversion()) && proto.workflow_api.WorkflowVersion.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 21, ""),
    createdby: jspb.Message.getFieldWithDefault(msg, 22, "0"),
    createduser: (f = msg.getCreateduser()) && common_pb.User.toObject(includeInstance, f),
    updatedby: jspb.Message.getFieldWithDefault(msg, 24, "0"),
    updateduser: (f = msg.getUpdateduser()) && common_pb.User.toObject(includeInstance, f),
    createddate: (f = msg.getCreateddate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updateddate: (f = msg.getUpdateddate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.Workflow}
 */
proto.workflow_api.Workflow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.Workflow;
  return proto.workflow_api.Workflow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.Workflow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.Workflow}
 */
proto.workflow_api.Workflow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.workflow_api.Edge;
      reader.readMessage(value,proto.workflow_api.Edge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 3:
      var value = new proto.workflow_api.FlowNode;
      reader.readMessage(value,proto.workflow_api.FlowNode.deserializeBinaryFromReader);
      msg.addFlownodes(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setSourceidentifier(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setVisibility(value);
      break;
    case 9:
      var value = new common_pb.Tag;
      reader.readMessage(value,common_pb.Tag.deserializeBinaryFromReader);
      msg.setWorkflowtag(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowversionid(value);
      break;
    case 11:
      var value = new proto.workflow_api.WorkflowVersion;
      reader.readMessage(value,proto.workflow_api.WorkflowVersion.deserializeBinaryFromReader);
      msg.setWorkflowversion(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setCreatedby(value);
      break;
    case 23:
      var value = new common_pb.User;
      reader.readMessage(value,common_pb.User.deserializeBinaryFromReader);
      msg.setCreateduser(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setUpdatedby(value);
      break;
    case 25:
      var value = new common_pb.User;
      reader.readMessage(value,common_pb.User.deserializeBinaryFromReader);
      msg.setUpdateduser(value);
      break;
    case 26:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateddate(value);
      break;
    case 27:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdateddate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.Workflow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.Workflow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.Workflow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.Workflow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.workflow_api.Edge.serializeBinaryToWriter
    );
  }
  f = message.getFlownodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.workflow_api.FlowNode.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSourceidentifier();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      7,
      f
    );
  }
  f = message.getVisibility();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getWorkflowtag();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.Tag.serializeBinaryToWriter
    );
  }
  f = message.getWorkflowversionid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      10,
      f
    );
  }
  f = message.getWorkflowversion();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.workflow_api.WorkflowVersion.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCreatedby();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      22,
      f
    );
  }
  f = message.getCreateduser();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      common_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedby();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      24,
      f
    );
  }
  f = message.getUpdateduser();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      common_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getCreateddate();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateddate();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.Workflow.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * repeated Edge edges = 2;
 * @return {!Array<!proto.workflow_api.Edge>}
 */
proto.workflow_api.Workflow.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.workflow_api.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.Edge, 2));
};


/**
 * @param {!Array<!proto.workflow_api.Edge>} value
 * @return {!proto.workflow_api.Workflow} returns this
*/
proto.workflow_api.Workflow.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.workflow_api.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.Edge}
 */
proto.workflow_api.Workflow.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.workflow_api.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * repeated FlowNode flowNodes = 3;
 * @return {!Array<!proto.workflow_api.FlowNode>}
 */
proto.workflow_api.Workflow.prototype.getFlownodesList = function() {
  return /** @type{!Array<!proto.workflow_api.FlowNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.FlowNode, 3));
};


/**
 * @param {!Array<!proto.workflow_api.FlowNode>} value
 * @return {!proto.workflow_api.Workflow} returns this
*/
proto.workflow_api.Workflow.prototype.setFlownodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.workflow_api.FlowNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.FlowNode}
 */
proto.workflow_api.Workflow.prototype.addFlownodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.workflow_api.FlowNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.clearFlownodesList = function() {
  return this.setFlownodesList([]);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.workflow_api.Workflow.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.workflow_api.Workflow.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string source = 6;
 * @return {string}
 */
proto.workflow_api.Workflow.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 sourceIdentifier = 7;
 * @return {string}
 */
proto.workflow_api.Workflow.prototype.getSourceidentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.setSourceidentifier = function(value) {
  return jspb.Message.setProto3StringIntField(this, 7, value);
};


/**
 * optional string visibility = 8;
 * @return {string}
 */
proto.workflow_api.Workflow.prototype.getVisibility = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.setVisibility = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Tag workflowTag = 9;
 * @return {?proto.Tag}
 */
proto.workflow_api.Workflow.prototype.getWorkflowtag = function() {
  return /** @type{?proto.Tag} */ (
    jspb.Message.getWrapperField(this, common_pb.Tag, 9));
};


/**
 * @param {?proto.Tag|undefined} value
 * @return {!proto.workflow_api.Workflow} returns this
*/
proto.workflow_api.Workflow.prototype.setWorkflowtag = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.clearWorkflowtag = function() {
  return this.setWorkflowtag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.Workflow.prototype.hasWorkflowtag = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 workflowVersionId = 10;
 * @return {string}
 */
proto.workflow_api.Workflow.prototype.getWorkflowversionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.setWorkflowversionid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 10, value);
};


/**
 * optional WorkflowVersion workflowVersion = 11;
 * @return {?proto.workflow_api.WorkflowVersion}
 */
proto.workflow_api.Workflow.prototype.getWorkflowversion = function() {
  return /** @type{?proto.workflow_api.WorkflowVersion} */ (
    jspb.Message.getWrapperField(this, proto.workflow_api.WorkflowVersion, 11));
};


/**
 * @param {?proto.workflow_api.WorkflowVersion|undefined} value
 * @return {!proto.workflow_api.Workflow} returns this
*/
proto.workflow_api.Workflow.prototype.setWorkflowversion = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.clearWorkflowversion = function() {
  return this.setWorkflowversion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.Workflow.prototype.hasWorkflowversion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string status = 21;
 * @return {string}
 */
proto.workflow_api.Workflow.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional uint64 createdBy = 22;
 * @return {string}
 */
proto.workflow_api.Workflow.prototype.getCreatedby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.setCreatedby = function(value) {
  return jspb.Message.setProto3StringIntField(this, 22, value);
};


/**
 * optional User createdUser = 23;
 * @return {?proto.User}
 */
proto.workflow_api.Workflow.prototype.getCreateduser = function() {
  return /** @type{?proto.User} */ (
    jspb.Message.getWrapperField(this, common_pb.User, 23));
};


/**
 * @param {?proto.User|undefined} value
 * @return {!proto.workflow_api.Workflow} returns this
*/
proto.workflow_api.Workflow.prototype.setCreateduser = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.clearCreateduser = function() {
  return this.setCreateduser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.Workflow.prototype.hasCreateduser = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint64 updatedBy = 24;
 * @return {string}
 */
proto.workflow_api.Workflow.prototype.getUpdatedby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.setUpdatedby = function(value) {
  return jspb.Message.setProto3StringIntField(this, 24, value);
};


/**
 * optional User updatedUser = 25;
 * @return {?proto.User}
 */
proto.workflow_api.Workflow.prototype.getUpdateduser = function() {
  return /** @type{?proto.User} */ (
    jspb.Message.getWrapperField(this, common_pb.User, 25));
};


/**
 * @param {?proto.User|undefined} value
 * @return {!proto.workflow_api.Workflow} returns this
*/
proto.workflow_api.Workflow.prototype.setUpdateduser = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.clearUpdateduser = function() {
  return this.setUpdateduser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.Workflow.prototype.hasUpdateduser = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional google.protobuf.Timestamp createdDate = 26;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.workflow_api.Workflow.prototype.getCreateddate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 26));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.workflow_api.Workflow} returns this
*/
proto.workflow_api.Workflow.prototype.setCreateddate = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.clearCreateddate = function() {
  return this.setCreateddate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.Workflow.prototype.hasCreateddate = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional google.protobuf.Timestamp updatedDate = 27;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.workflow_api.Workflow.prototype.getUpdateddate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 27));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.workflow_api.Workflow} returns this
*/
proto.workflow_api.Workflow.prototype.setUpdateddate = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.Workflow} returns this
 */
proto.workflow_api.Workflow.prototype.clearUpdateddate = function() {
  return this.setUpdateddate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.Workflow.prototype.hasUpdateddate = function() {
  return jspb.Message.getField(this, 27) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.WorkflowVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.WorkflowVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.WorkflowVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.WorkflowVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    workflowjson: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.WorkflowVersion}
 */
proto.workflow_api.WorkflowVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.WorkflowVersion;
  return proto.workflow_api.WorkflowVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.WorkflowVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.WorkflowVersion}
 */
proto.workflow_api.WorkflowVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkflowjson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.WorkflowVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.WorkflowVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.WorkflowVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.WorkflowVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getWorkflowjson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.WorkflowVersion.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowVersion} returns this
 */
proto.workflow_api.WorkflowVersion.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string workflowJson = 2;
 * @return {string}
 */
proto.workflow_api.WorkflowVersion.prototype.getWorkflowjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowVersion} returns this
 */
proto.workflow_api.WorkflowVersion.prototype.setWorkflowjson = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.Edge.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.Edge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.Edge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.Edge.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    pb_in: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    out: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    condition: jspb.Message.getFieldWithDefault(msg, 4, ""),
    conditionaltaskid: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.Edge}
 */
proto.workflow_api.Edge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.Edge;
  return proto.workflow_api.Edge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.Edge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.Edge}
 */
proto.workflow_api.Edge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setIn(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setOut(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondition(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setConditionaltaskid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.Edge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.Edge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.Edge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.Edge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getIn();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getOut();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.Edge.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Edge} returns this
 */
proto.workflow_api.Edge.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 in = 2;
 * @return {string}
 */
proto.workflow_api.Edge.prototype.getIn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Edge} returns this
 */
proto.workflow_api.Edge.prototype.setIn = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 out = 3;
 * @return {string}
 */
proto.workflow_api.Edge.prototype.getOut = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Edge} returns this
 */
proto.workflow_api.Edge.prototype.setOut = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string condition = 4;
 * @return {string}
 */
proto.workflow_api.Edge.prototype.getCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Edge} returns this
 */
proto.workflow_api.Edge.prototype.setCondition = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workflow_api.Edge} returns this
 */
proto.workflow_api.Edge.prototype.clearCondition = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.Edge.prototype.hasCondition = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 conditionalTaskId = 5;
 * @return {number}
 */
proto.workflow_api.Edge.prototype.getConditionaltaskid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow_api.Edge} returns this
 */
proto.workflow_api.Edge.prototype.setConditionaltaskid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workflow_api.Edge} returns this
 */
proto.workflow_api.Edge.prototype.clearConditionaltaskid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.Edge.prototype.hasConditionaltaskid = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.FlowNode.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.FlowNode.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.FlowNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.FlowNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.FlowNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nodeinputsList: jspb.Message.toObjectList(msg.getNodeinputsList(),
    proto.workflow_api.NodeInputs.toObject, includeInstance),
    inputtask: (f = msg.getInputtask()) && proto.workflow_api.InputTask.toObject(includeInstance, f),
    endpointtask: (f = msg.getEndpointtask()) && proto.workflow_api.EndpointTask.toObject(includeInstance, f),
    outputtask: (f = msg.getOutputtask()) && proto.workflow_api.OutputTask.toObject(includeInstance, f),
    conditionaltask: (f = msg.getConditionaltask()) && proto.workflow_api.ConditionalTask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.FlowNode}
 */
proto.workflow_api.FlowNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.FlowNode;
  return proto.workflow_api.FlowNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.FlowNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.FlowNode}
 */
proto.workflow_api.FlowNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.workflow_api.NodeInputs;
      reader.readMessage(value,proto.workflow_api.NodeInputs.deserializeBinaryFromReader);
      msg.addNodeinputs(value);
      break;
    case 4:
      var value = new proto.workflow_api.InputTask;
      reader.readMessage(value,proto.workflow_api.InputTask.deserializeBinaryFromReader);
      msg.setInputtask(value);
      break;
    case 5:
      var value = new proto.workflow_api.EndpointTask;
      reader.readMessage(value,proto.workflow_api.EndpointTask.deserializeBinaryFromReader);
      msg.setEndpointtask(value);
      break;
    case 6:
      var value = new proto.workflow_api.OutputTask;
      reader.readMessage(value,proto.workflow_api.OutputTask.deserializeBinaryFromReader);
      msg.setOutputtask(value);
      break;
    case 7:
      var value = new proto.workflow_api.ConditionalTask;
      reader.readMessage(value,proto.workflow_api.ConditionalTask.deserializeBinaryFromReader);
      msg.setConditionaltask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.FlowNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.FlowNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.FlowNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.FlowNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNodeinputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.workflow_api.NodeInputs.serializeBinaryToWriter
    );
  }
  f = message.getInputtask();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.workflow_api.InputTask.serializeBinaryToWriter
    );
  }
  f = message.getEndpointtask();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.workflow_api.EndpointTask.serializeBinaryToWriter
    );
  }
  f = message.getOutputtask();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.workflow_api.OutputTask.serializeBinaryToWriter
    );
  }
  f = message.getConditionaltask();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.workflow_api.ConditionalTask.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.FlowNode.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.FlowNode} returns this
 */
proto.workflow_api.FlowNode.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.workflow_api.FlowNode.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.FlowNode} returns this
 */
proto.workflow_api.FlowNode.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated NodeInputs nodeInputs = 3;
 * @return {!Array<!proto.workflow_api.NodeInputs>}
 */
proto.workflow_api.FlowNode.prototype.getNodeinputsList = function() {
  return /** @type{!Array<!proto.workflow_api.NodeInputs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.NodeInputs, 3));
};


/**
 * @param {!Array<!proto.workflow_api.NodeInputs>} value
 * @return {!proto.workflow_api.FlowNode} returns this
*/
proto.workflow_api.FlowNode.prototype.setNodeinputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.workflow_api.NodeInputs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.NodeInputs}
 */
proto.workflow_api.FlowNode.prototype.addNodeinputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.workflow_api.NodeInputs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.FlowNode} returns this
 */
proto.workflow_api.FlowNode.prototype.clearNodeinputsList = function() {
  return this.setNodeinputsList([]);
};


/**
 * optional InputTask inputTask = 4;
 * @return {?proto.workflow_api.InputTask}
 */
proto.workflow_api.FlowNode.prototype.getInputtask = function() {
  return /** @type{?proto.workflow_api.InputTask} */ (
    jspb.Message.getWrapperField(this, proto.workflow_api.InputTask, 4));
};


/**
 * @param {?proto.workflow_api.InputTask|undefined} value
 * @return {!proto.workflow_api.FlowNode} returns this
*/
proto.workflow_api.FlowNode.prototype.setInputtask = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.FlowNode} returns this
 */
proto.workflow_api.FlowNode.prototype.clearInputtask = function() {
  return this.setInputtask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.FlowNode.prototype.hasInputtask = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EndpointTask endpointTask = 5;
 * @return {?proto.workflow_api.EndpointTask}
 */
proto.workflow_api.FlowNode.prototype.getEndpointtask = function() {
  return /** @type{?proto.workflow_api.EndpointTask} */ (
    jspb.Message.getWrapperField(this, proto.workflow_api.EndpointTask, 5));
};


/**
 * @param {?proto.workflow_api.EndpointTask|undefined} value
 * @return {!proto.workflow_api.FlowNode} returns this
*/
proto.workflow_api.FlowNode.prototype.setEndpointtask = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.FlowNode} returns this
 */
proto.workflow_api.FlowNode.prototype.clearEndpointtask = function() {
  return this.setEndpointtask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.FlowNode.prototype.hasEndpointtask = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional OutputTask outputTask = 6;
 * @return {?proto.workflow_api.OutputTask}
 */
proto.workflow_api.FlowNode.prototype.getOutputtask = function() {
  return /** @type{?proto.workflow_api.OutputTask} */ (
    jspb.Message.getWrapperField(this, proto.workflow_api.OutputTask, 6));
};


/**
 * @param {?proto.workflow_api.OutputTask|undefined} value
 * @return {!proto.workflow_api.FlowNode} returns this
*/
proto.workflow_api.FlowNode.prototype.setOutputtask = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.FlowNode} returns this
 */
proto.workflow_api.FlowNode.prototype.clearOutputtask = function() {
  return this.setOutputtask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.FlowNode.prototype.hasOutputtask = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ConditionalTask conditionalTask = 7;
 * @return {?proto.workflow_api.ConditionalTask}
 */
proto.workflow_api.FlowNode.prototype.getConditionaltask = function() {
  return /** @type{?proto.workflow_api.ConditionalTask} */ (
    jspb.Message.getWrapperField(this, proto.workflow_api.ConditionalTask, 7));
};


/**
 * @param {?proto.workflow_api.ConditionalTask|undefined} value
 * @return {!proto.workflow_api.FlowNode} returns this
*/
proto.workflow_api.FlowNode.prototype.setConditionaltask = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.FlowNode} returns this
 */
proto.workflow_api.FlowNode.prototype.clearConditionaltask = function() {
  return this.setConditionaltask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.FlowNode.prototype.hasConditionaltask = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.NodeInputs.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.NodeInputs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.NodeInputs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.NodeInputs.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    flownodeid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    inputid: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    variable: (f = msg.getVariable()) && proto.workflow_api.WorkflowVariable.toObject(includeInstance, f),
    identifier: jspb.Message.getFieldWithDefault(msg, 5, ""),
    inputtype: jspb.Message.getFieldWithDefault(msg, 6, ""),
    name: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.NodeInputs}
 */
proto.workflow_api.NodeInputs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.NodeInputs;
  return proto.workflow_api.NodeInputs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.NodeInputs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.NodeInputs}
 */
proto.workflow_api.NodeInputs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setFlownodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setInputid(value);
      break;
    case 4:
      var value = new proto.workflow_api.WorkflowVariable;
      reader.readMessage(value,proto.workflow_api.WorkflowVariable.deserializeBinaryFromReader);
      msg.setVariable(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputtype(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.NodeInputs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.NodeInputs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.NodeInputs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.NodeInputs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getFlownodeid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getInputid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getVariable();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.workflow_api.WorkflowVariable.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getInputtype();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.NodeInputs.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.NodeInputs} returns this
 */
proto.workflow_api.NodeInputs.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 flowNodeId = 2;
 * @return {string}
 */
proto.workflow_api.NodeInputs.prototype.getFlownodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.NodeInputs} returns this
 */
proto.workflow_api.NodeInputs.prototype.setFlownodeid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 inputId = 3;
 * @return {string}
 */
proto.workflow_api.NodeInputs.prototype.getInputid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.NodeInputs} returns this
 */
proto.workflow_api.NodeInputs.prototype.setInputid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional WorkflowVariable variable = 4;
 * @return {?proto.workflow_api.WorkflowVariable}
 */
proto.workflow_api.NodeInputs.prototype.getVariable = function() {
  return /** @type{?proto.workflow_api.WorkflowVariable} */ (
    jspb.Message.getWrapperField(this, proto.workflow_api.WorkflowVariable, 4));
};


/**
 * @param {?proto.workflow_api.WorkflowVariable|undefined} value
 * @return {!proto.workflow_api.NodeInputs} returns this
*/
proto.workflow_api.NodeInputs.prototype.setVariable = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.NodeInputs} returns this
 */
proto.workflow_api.NodeInputs.prototype.clearVariable = function() {
  return this.setVariable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.NodeInputs.prototype.hasVariable = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string identifier = 5;
 * @return {string}
 */
proto.workflow_api.NodeInputs.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.NodeInputs} returns this
 */
proto.workflow_api.NodeInputs.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workflow_api.NodeInputs} returns this
 */
proto.workflow_api.NodeInputs.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.NodeInputs.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string inputType = 6;
 * @return {string}
 */
proto.workflow_api.NodeInputs.prototype.getInputtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.NodeInputs} returns this
 */
proto.workflow_api.NodeInputs.prototype.setInputtype = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string name = 7;
 * @return {string}
 */
proto.workflow_api.NodeInputs.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.NodeInputs} returns this
 */
proto.workflow_api.NodeInputs.prototype.setName = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workflow_api.NodeInputs} returns this
 */
proto.workflow_api.NodeInputs.prototype.clearName = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.NodeInputs.prototype.hasName = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.WorkflowVariable.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.WorkflowVariable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.WorkflowVariable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.WorkflowVariable.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    variabletype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    valuetype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    defaultvalue: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    identifier: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.WorkflowVariable}
 */
proto.workflow_api.WorkflowVariable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.WorkflowVariable;
  return proto.workflow_api.WorkflowVariable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.WorkflowVariable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.WorkflowVariable}
 */
proto.workflow_api.WorkflowVariable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariabletype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuetype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultvalue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.WorkflowVariable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.WorkflowVariable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.WorkflowVariable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.WorkflowVariable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getVariabletype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValuetype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDefaultvalue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.WorkflowVariable.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowVariable} returns this
 */
proto.workflow_api.WorkflowVariable.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string variableType = 2;
 * @return {string}
 */
proto.workflow_api.WorkflowVariable.prototype.getVariabletype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowVariable} returns this
 */
proto.workflow_api.WorkflowVariable.prototype.setVariabletype = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string valueType = 3;
 * @return {string}
 */
proto.workflow_api.WorkflowVariable.prototype.getValuetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowVariable} returns this
 */
proto.workflow_api.WorkflowVariable.prototype.setValuetype = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string defaultValue = 4;
 * @return {string}
 */
proto.workflow_api.WorkflowVariable.prototype.getDefaultvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowVariable} returns this
 */
proto.workflow_api.WorkflowVariable.prototype.setDefaultvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.workflow_api.WorkflowVariable.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowVariable} returns this
 */
proto.workflow_api.WorkflowVariable.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string identifier = 6;
 * @return {string}
 */
proto.workflow_api.WorkflowVariable.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowVariable} returns this
 */
proto.workflow_api.WorkflowVariable.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workflow_api.WorkflowVariable} returns this
 */
proto.workflow_api.WorkflowVariable.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.WorkflowVariable.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.RunWorkflowRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.RunWorkflowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.RunWorkflowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.RunWorkflowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.RunWorkflowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    variablesList: jspb.Message.toObjectList(msg.getVariablesList(),
    proto.workflow_api.WorkflowVariable.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.RunWorkflowRequest}
 */
proto.workflow_api.RunWorkflowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.RunWorkflowRequest;
  return proto.workflow_api.RunWorkflowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.RunWorkflowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.RunWorkflowRequest}
 */
proto.workflow_api.RunWorkflowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowid(value);
      break;
    case 2:
      var value = new proto.workflow_api.WorkflowVariable;
      reader.readMessage(value,proto.workflow_api.WorkflowVariable.deserializeBinaryFromReader);
      msg.addVariables(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.RunWorkflowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.RunWorkflowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.RunWorkflowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.RunWorkflowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getVariablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.workflow_api.WorkflowVariable.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 workflowId = 1;
 * @return {string}
 */
proto.workflow_api.RunWorkflowRequest.prototype.getWorkflowid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.RunWorkflowRequest} returns this
 */
proto.workflow_api.RunWorkflowRequest.prototype.setWorkflowid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * repeated WorkflowVariable variables = 2;
 * @return {!Array<!proto.workflow_api.WorkflowVariable>}
 */
proto.workflow_api.RunWorkflowRequest.prototype.getVariablesList = function() {
  return /** @type{!Array<!proto.workflow_api.WorkflowVariable>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.WorkflowVariable, 2));
};


/**
 * @param {!Array<!proto.workflow_api.WorkflowVariable>} value
 * @return {!proto.workflow_api.RunWorkflowRequest} returns this
*/
proto.workflow_api.RunWorkflowRequest.prototype.setVariablesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.workflow_api.WorkflowVariable=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.WorkflowVariable}
 */
proto.workflow_api.RunWorkflowRequest.prototype.addVariables = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.workflow_api.WorkflowVariable, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.RunWorkflowRequest} returns this
 */
proto.workflow_api.RunWorkflowRequest.prototype.clearVariablesList = function() {
  return this.setVariablesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.GetWorkflowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.GetWorkflowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.GetWorkflowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetWorkflowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowid: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.GetWorkflowRequest}
 */
proto.workflow_api.GetWorkflowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.GetWorkflowRequest;
  return proto.workflow_api.GetWorkflowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.GetWorkflowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.GetWorkflowRequest}
 */
proto.workflow_api.GetWorkflowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.GetWorkflowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.GetWorkflowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.GetWorkflowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetWorkflowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
};


/**
 * optional uint64 workflowId = 1;
 * @return {string}
 */
proto.workflow_api.GetWorkflowRequest.prototype.getWorkflowid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.GetWorkflowRequest} returns this
 */
proto.workflow_api.GetWorkflowRequest.prototype.setWorkflowid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.EndpointTask.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.EndpointTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.EndpointTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.EndpointTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    endpointid: jspb.Message.getFieldWithDefault(msg, 2, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.EndpointTask}
 */
proto.workflow_api.EndpointTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.EndpointTask;
  return proto.workflow_api.EndpointTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.EndpointTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.EndpointTask}
 */
proto.workflow_api.EndpointTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setEndpointid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.EndpointTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.EndpointTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.EndpointTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.EndpointTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getEndpointid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.EndpointTask.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.EndpointTask} returns this
 */
proto.workflow_api.EndpointTask.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 endpointId = 2;
 * @return {string}
 */
proto.workflow_api.EndpointTask.prototype.getEndpointid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.EndpointTask} returns this
 */
proto.workflow_api.EndpointTask.prototype.setEndpointid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.OutputTask.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.OutputTask.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.OutputTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.OutputTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.OutputTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.workflow_api.Outputs.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.OutputTask}
 */
proto.workflow_api.OutputTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.OutputTask;
  return proto.workflow_api.OutputTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.OutputTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.OutputTask}
 */
proto.workflow_api.OutputTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 4:
      var value = new proto.workflow_api.Outputs;
      reader.readMessage(value,proto.workflow_api.Outputs.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.OutputTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.OutputTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.OutputTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.OutputTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.workflow_api.Outputs.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.OutputTask.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.OutputTask} returns this
 */
proto.workflow_api.OutputTask.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * repeated Outputs outputs = 4;
 * @return {!Array<!proto.workflow_api.Outputs>}
 */
proto.workflow_api.OutputTask.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.workflow_api.Outputs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.Outputs, 4));
};


/**
 * @param {!Array<!proto.workflow_api.Outputs>} value
 * @return {!proto.workflow_api.OutputTask} returns this
*/
proto.workflow_api.OutputTask.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.workflow_api.Outputs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.Outputs}
 */
proto.workflow_api.OutputTask.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.workflow_api.Outputs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.OutputTask} returns this
 */
proto.workflow_api.OutputTask.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.ConditionalTask.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.ConditionalTask.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.ConditionalTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.ConditionalTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.ConditionalTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    proto.workflow_api.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.ConditionalTask}
 */
proto.workflow_api.ConditionalTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.ConditionalTask;
  return proto.workflow_api.ConditionalTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.ConditionalTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.ConditionalTask}
 */
proto.workflow_api.ConditionalTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.workflow_api.Condition;
      reader.readMessage(value,proto.workflow_api.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.ConditionalTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.ConditionalTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.ConditionalTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.ConditionalTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.workflow_api.Condition.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.ConditionalTask.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.ConditionalTask} returns this
 */
proto.workflow_api.ConditionalTask.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * repeated Condition conditions = 2;
 * @return {!Array<!proto.workflow_api.Condition>}
 */
proto.workflow_api.ConditionalTask.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.workflow_api.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.Condition, 2));
};


/**
 * @param {!Array<!proto.workflow_api.Condition>} value
 * @return {!proto.workflow_api.ConditionalTask} returns this
*/
proto.workflow_api.ConditionalTask.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.workflow_api.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.Condition}
 */
proto.workflow_api.ConditionalTask.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.workflow_api.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.ConditionalTask} returns this
 */
proto.workflow_api.ConditionalTask.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.Condition.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.Condition.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.Condition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.Condition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.Condition.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    conditionaltaskid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    precedence: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rulegroupsList: jspb.Message.toObjectList(msg.getRulegroupsList(),
    proto.workflow_api.RuleGroup.toObject, includeInstance),
    rulegroupedgesList: jspb.Message.toObjectList(msg.getRulegroupedgesList(),
    proto.workflow_api.Edge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.Condition}
 */
proto.workflow_api.Condition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.Condition;
  return proto.workflow_api.Condition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.Condition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.Condition}
 */
proto.workflow_api.Condition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setConditionaltaskid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrecedence(value);
      break;
    case 5:
      var value = new proto.workflow_api.RuleGroup;
      reader.readMessage(value,proto.workflow_api.RuleGroup.deserializeBinaryFromReader);
      msg.addRulegroups(value);
      break;
    case 6:
      var value = new proto.workflow_api.Edge;
      reader.readMessage(value,proto.workflow_api.Edge.deserializeBinaryFromReader);
      msg.addRulegroupedges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.Condition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.Condition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.Condition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.Condition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getConditionaltaskid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrecedence();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRulegroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.workflow_api.RuleGroup.serializeBinaryToWriter
    );
  }
  f = message.getRulegroupedgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.workflow_api.Edge.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.Condition.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Condition} returns this
 */
proto.workflow_api.Condition.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 conditionalTaskId = 2;
 * @return {string}
 */
proto.workflow_api.Condition.prototype.getConditionaltaskid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Condition} returns this
 */
proto.workflow_api.Condition.prototype.setConditionaltaskid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.workflow_api.Condition.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Condition} returns this
 */
proto.workflow_api.Condition.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 precedence = 4;
 * @return {number}
 */
proto.workflow_api.Condition.prototype.getPrecedence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow_api.Condition} returns this
 */
proto.workflow_api.Condition.prototype.setPrecedence = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated RuleGroup ruleGroups = 5;
 * @return {!Array<!proto.workflow_api.RuleGroup>}
 */
proto.workflow_api.Condition.prototype.getRulegroupsList = function() {
  return /** @type{!Array<!proto.workflow_api.RuleGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.RuleGroup, 5));
};


/**
 * @param {!Array<!proto.workflow_api.RuleGroup>} value
 * @return {!proto.workflow_api.Condition} returns this
*/
proto.workflow_api.Condition.prototype.setRulegroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.workflow_api.RuleGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.RuleGroup}
 */
proto.workflow_api.Condition.prototype.addRulegroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.workflow_api.RuleGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.Condition} returns this
 */
proto.workflow_api.Condition.prototype.clearRulegroupsList = function() {
  return this.setRulegroupsList([]);
};


/**
 * repeated Edge ruleGroupEdges = 6;
 * @return {!Array<!proto.workflow_api.Edge>}
 */
proto.workflow_api.Condition.prototype.getRulegroupedgesList = function() {
  return /** @type{!Array<!proto.workflow_api.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.Edge, 6));
};


/**
 * @param {!Array<!proto.workflow_api.Edge>} value
 * @return {!proto.workflow_api.Condition} returns this
*/
proto.workflow_api.Condition.prototype.setRulegroupedgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.workflow_api.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.Edge}
 */
proto.workflow_api.Condition.prototype.addRulegroupedges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.workflow_api.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.Condition} returns this
 */
proto.workflow_api.Condition.prototype.clearRulegroupedgesList = function() {
  return this.setRulegroupedgesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.RuleGroup.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.RuleGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.RuleGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.RuleGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.RuleGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    conditionid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    precedence: jspb.Message.getFieldWithDefault(msg, 3, 0),
    connectingoperator: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.workflow_api.Rule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.RuleGroup}
 */
proto.workflow_api.RuleGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.RuleGroup;
  return proto.workflow_api.RuleGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.RuleGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.RuleGroup}
 */
proto.workflow_api.RuleGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setConditionid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrecedence(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectingoperator(value);
      break;
    case 5:
      var value = new proto.workflow_api.Rule;
      reader.readMessage(value,proto.workflow_api.Rule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.RuleGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.RuleGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.RuleGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.RuleGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getConditionid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getPrecedence();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.workflow_api.Rule.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.RuleGroup.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.RuleGroup} returns this
 */
proto.workflow_api.RuleGroup.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 conditionId = 2;
 * @return {string}
 */
proto.workflow_api.RuleGroup.prototype.getConditionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.RuleGroup} returns this
 */
proto.workflow_api.RuleGroup.prototype.setConditionid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional int32 precedence = 3;
 * @return {number}
 */
proto.workflow_api.RuleGroup.prototype.getPrecedence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow_api.RuleGroup} returns this
 */
proto.workflow_api.RuleGroup.prototype.setPrecedence = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string connectingOperator = 4;
 * @return {string}
 */
proto.workflow_api.RuleGroup.prototype.getConnectingoperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.RuleGroup} returns this
 */
proto.workflow_api.RuleGroup.prototype.setConnectingoperator = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workflow_api.RuleGroup} returns this
 */
proto.workflow_api.RuleGroup.prototype.clearConnectingoperator = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.RuleGroup.prototype.hasConnectingoperator = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Rule rules = 5;
 * @return {!Array<!proto.workflow_api.Rule>}
 */
proto.workflow_api.RuleGroup.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.workflow_api.Rule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.Rule, 5));
};


/**
 * @param {!Array<!proto.workflow_api.Rule>} value
 * @return {!proto.workflow_api.RuleGroup} returns this
*/
proto.workflow_api.RuleGroup.prototype.setRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.workflow_api.Rule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.Rule}
 */
proto.workflow_api.RuleGroup.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.workflow_api.Rule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.RuleGroup} returns this
 */
proto.workflow_api.RuleGroup.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.Rule.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.Rule.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.Rule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.Rule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.Rule.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    rulegroupid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    operatorname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    precedence: jspb.Message.getFieldWithDefault(msg, 4, 0),
    connectingoperator: jspb.Message.getFieldWithDefault(msg, 5, ""),
    rulevariablesList: jspb.Message.toObjectList(msg.getRulevariablesList(),
    proto.workflow_api.RuleVariable.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.Rule}
 */
proto.workflow_api.Rule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.Rule;
  return proto.workflow_api.Rule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.Rule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.Rule}
 */
proto.workflow_api.Rule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setRulegroupid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatorname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrecedence(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectingoperator(value);
      break;
    case 6:
      var value = new proto.workflow_api.RuleVariable;
      reader.readMessage(value,proto.workflow_api.RuleVariable.deserializeBinaryFromReader);
      msg.addRulevariables(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.Rule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.Rule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.Rule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.Rule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getRulegroupid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getOperatorname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrecedence();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRulevariablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.workflow_api.RuleVariable.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.Rule.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Rule} returns this
 */
proto.workflow_api.Rule.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 ruleGroupId = 2;
 * @return {string}
 */
proto.workflow_api.Rule.prototype.getRulegroupid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Rule} returns this
 */
proto.workflow_api.Rule.prototype.setRulegroupid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string operatorName = 3;
 * @return {string}
 */
proto.workflow_api.Rule.prototype.getOperatorname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Rule} returns this
 */
proto.workflow_api.Rule.prototype.setOperatorname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 precedence = 4;
 * @return {number}
 */
proto.workflow_api.Rule.prototype.getPrecedence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow_api.Rule} returns this
 */
proto.workflow_api.Rule.prototype.setPrecedence = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string connectingOperator = 5;
 * @return {string}
 */
proto.workflow_api.Rule.prototype.getConnectingoperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Rule} returns this
 */
proto.workflow_api.Rule.prototype.setConnectingoperator = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workflow_api.Rule} returns this
 */
proto.workflow_api.Rule.prototype.clearConnectingoperator = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.Rule.prototype.hasConnectingoperator = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated RuleVariable ruleVariables = 6;
 * @return {!Array<!proto.workflow_api.RuleVariable>}
 */
proto.workflow_api.Rule.prototype.getRulevariablesList = function() {
  return /** @type{!Array<!proto.workflow_api.RuleVariable>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.RuleVariable, 6));
};


/**
 * @param {!Array<!proto.workflow_api.RuleVariable>} value
 * @return {!proto.workflow_api.Rule} returns this
*/
proto.workflow_api.Rule.prototype.setRulevariablesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.workflow_api.RuleVariable=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.RuleVariable}
 */
proto.workflow_api.Rule.prototype.addRulevariables = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.workflow_api.RuleVariable, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.Rule} returns this
 */
proto.workflow_api.Rule.prototype.clearRulevariablesList = function() {
  return this.setRulevariablesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.RuleVariable.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.RuleVariable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.RuleVariable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.RuleVariable.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    position: jspb.Message.getFieldWithDefault(msg, 2, ""),
    variabletype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    value: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.RuleVariable}
 */
proto.workflow_api.RuleVariable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.RuleVariable;
  return proto.workflow_api.RuleVariable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.RuleVariable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.RuleVariable}
 */
proto.workflow_api.RuleVariable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosition(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariabletype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.RuleVariable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.RuleVariable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.RuleVariable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.RuleVariable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getPosition();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVariabletype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.RuleVariable.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.RuleVariable} returns this
 */
proto.workflow_api.RuleVariable.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string position = 2;
 * @return {string}
 */
proto.workflow_api.RuleVariable.prototype.getPosition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.RuleVariable} returns this
 */
proto.workflow_api.RuleVariable.prototype.setPosition = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string variableType = 3;
 * @return {string}
 */
proto.workflow_api.RuleVariable.prototype.getVariabletype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.RuleVariable} returns this
 */
proto.workflow_api.RuleVariable.prototype.setVariabletype = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string value = 4;
 * @return {string}
 */
proto.workflow_api.RuleVariable.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.RuleVariable} returns this
 */
proto.workflow_api.RuleVariable.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.Outputs.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.Outputs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.Outputs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.Outputs.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    outputtaskid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    outputid: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    outputtype: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.Outputs}
 */
proto.workflow_api.Outputs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.Outputs;
  return proto.workflow_api.Outputs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.Outputs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.Outputs}
 */
proto.workflow_api.Outputs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setOutputtaskid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setOutputid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.Outputs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.Outputs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.Outputs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.Outputs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getOutputtaskid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getOutputid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getOutputtype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.Outputs.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Outputs} returns this
 */
proto.workflow_api.Outputs.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 outputTaskId = 2;
 * @return {string}
 */
proto.workflow_api.Outputs.prototype.getOutputtaskid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Outputs} returns this
 */
proto.workflow_api.Outputs.prototype.setOutputtaskid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 outputId = 3;
 * @return {string}
 */
proto.workflow_api.Outputs.prototype.getOutputid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Outputs} returns this
 */
proto.workflow_api.Outputs.prototype.setOutputid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string outputType = 4;
 * @return {string}
 */
proto.workflow_api.Outputs.prototype.getOutputtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.Outputs} returns this
 */
proto.workflow_api.Outputs.prototype.setOutputtype = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.InputTask.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.InputTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.InputTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.InputTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.InputTask}
 */
proto.workflow_api.InputTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.InputTask;
  return proto.workflow_api.InputTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.InputTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.InputTask}
 */
proto.workflow_api.InputTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.InputTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.InputTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.InputTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.InputTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.InputTask.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.InputTask} returns this
 */
proto.workflow_api.InputTask.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.RunWorkflowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.RunWorkflowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.RunWorkflowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.RunWorkflowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    workflowid: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    workflowrunid: jspb.Message.getFieldWithDefault(msg, 4, "0"),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.RunWorkflowResponse}
 */
proto.workflow_api.RunWorkflowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.RunWorkflowResponse;
  return proto.workflow_api.RunWorkflowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.RunWorkflowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.RunWorkflowResponse}
 */
proto.workflow_api.RunWorkflowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowrunid(value);
      break;
    case 5:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.RunWorkflowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.RunWorkflowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.RunWorkflowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.RunWorkflowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getWorkflowid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getWorkflowrunid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      4,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.workflow_api.RunWorkflowResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow_api.RunWorkflowResponse} returns this
 */
proto.workflow_api.RunWorkflowResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.workflow_api.RunWorkflowResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow_api.RunWorkflowResponse} returns this
 */
proto.workflow_api.RunWorkflowResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint64 workflowId = 3;
 * @return {string}
 */
proto.workflow_api.RunWorkflowResponse.prototype.getWorkflowid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.RunWorkflowResponse} returns this
 */
proto.workflow_api.RunWorkflowResponse.prototype.setWorkflowid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional uint64 workflowRunId = 4;
 * @return {string}
 */
proto.workflow_api.RunWorkflowResponse.prototype.getWorkflowrunid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.RunWorkflowResponse} returns this
 */
proto.workflow_api.RunWorkflowResponse.prototype.setWorkflowrunid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 4, value);
};


/**
 * optional Error error = 5;
 * @return {?proto.Error}
 */
proto.workflow_api.RunWorkflowResponse.prototype.getError = function() {
  return /** @type{?proto.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 5));
};


/**
 * @param {?proto.Error|undefined} value
 * @return {!proto.workflow_api.RunWorkflowResponse} returns this
*/
proto.workflow_api.RunWorkflowResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.RunWorkflowResponse} returns this
 */
proto.workflow_api.RunWorkflowResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.RunWorkflowResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.GetWorkflowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.GetWorkflowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.GetWorkflowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetWorkflowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    data: (f = msg.getData()) && proto.workflow_api.Workflow.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.GetWorkflowResponse}
 */
proto.workflow_api.GetWorkflowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.GetWorkflowResponse;
  return proto.workflow_api.GetWorkflowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.GetWorkflowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.GetWorkflowResponse}
 */
proto.workflow_api.GetWorkflowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = new proto.workflow_api.Workflow;
      reader.readMessage(value,proto.workflow_api.Workflow.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.GetWorkflowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.GetWorkflowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.GetWorkflowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetWorkflowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.workflow_api.Workflow.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.workflow_api.GetWorkflowResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow_api.GetWorkflowResponse} returns this
 */
proto.workflow_api.GetWorkflowResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.workflow_api.GetWorkflowResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow_api.GetWorkflowResponse} returns this
 */
proto.workflow_api.GetWorkflowResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional Workflow Data = 3;
 * @return {?proto.workflow_api.Workflow}
 */
proto.workflow_api.GetWorkflowResponse.prototype.getData = function() {
  return /** @type{?proto.workflow_api.Workflow} */ (
    jspb.Message.getWrapperField(this, proto.workflow_api.Workflow, 3));
};


/**
 * @param {?proto.workflow_api.Workflow|undefined} value
 * @return {!proto.workflow_api.GetWorkflowResponse} returns this
*/
proto.workflow_api.GetWorkflowResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.GetWorkflowResponse} returns this
 */
proto.workflow_api.GetWorkflowResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.GetWorkflowResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Error error = 4;
 * @return {?proto.Error}
 */
proto.workflow_api.GetWorkflowResponse.prototype.getError = function() {
  return /** @type{?proto.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 4));
};


/**
 * @param {?proto.Error|undefined} value
 * @return {!proto.workflow_api.GetWorkflowResponse} returns this
*/
proto.workflow_api.GetWorkflowResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.GetWorkflowResponse} returns this
 */
proto.workflow_api.GetWorkflowResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.GetWorkflowResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.GetAllWorkflowRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.GetAllWorkflowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.GetAllWorkflowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.GetAllWorkflowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetAllWorkflowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paginate: (f = msg.getPaginate()) && common_pb.Paginate.toObject(includeInstance, f),
    criteriasList: jspb.Message.toObjectList(msg.getCriteriasList(),
    common_pb.Criteria.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.GetAllWorkflowRequest}
 */
proto.workflow_api.GetAllWorkflowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.GetAllWorkflowRequest;
  return proto.workflow_api.GetAllWorkflowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.GetAllWorkflowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.GetAllWorkflowRequest}
 */
proto.workflow_api.GetAllWorkflowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Paginate;
      reader.readMessage(value,common_pb.Paginate.deserializeBinaryFromReader);
      msg.setPaginate(value);
      break;
    case 2:
      var value = new common_pb.Criteria;
      reader.readMessage(value,common_pb.Criteria.deserializeBinaryFromReader);
      msg.addCriterias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.GetAllWorkflowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.GetAllWorkflowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.GetAllWorkflowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetAllWorkflowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaginate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Paginate.serializeBinaryToWriter
    );
  }
  f = message.getCriteriasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_pb.Criteria.serializeBinaryToWriter
    );
  }
};


/**
 * optional Paginate paginate = 1;
 * @return {?proto.Paginate}
 */
proto.workflow_api.GetAllWorkflowRequest.prototype.getPaginate = function() {
  return /** @type{?proto.Paginate} */ (
    jspb.Message.getWrapperField(this, common_pb.Paginate, 1));
};


/**
 * @param {?proto.Paginate|undefined} value
 * @return {!proto.workflow_api.GetAllWorkflowRequest} returns this
*/
proto.workflow_api.GetAllWorkflowRequest.prototype.setPaginate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.GetAllWorkflowRequest} returns this
 */
proto.workflow_api.GetAllWorkflowRequest.prototype.clearPaginate = function() {
  return this.setPaginate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.GetAllWorkflowRequest.prototype.hasPaginate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Criteria criterias = 2;
 * @return {!Array<!proto.Criteria>}
 */
proto.workflow_api.GetAllWorkflowRequest.prototype.getCriteriasList = function() {
  return /** @type{!Array<!proto.Criteria>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Criteria, 2));
};


/**
 * @param {!Array<!proto.Criteria>} value
 * @return {!proto.workflow_api.GetAllWorkflowRequest} returns this
*/
proto.workflow_api.GetAllWorkflowRequest.prototype.setCriteriasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Criteria=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Criteria}
 */
proto.workflow_api.GetAllWorkflowRequest.prototype.addCriterias = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Criteria, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.GetAllWorkflowRequest} returns this
 */
proto.workflow_api.GetAllWorkflowRequest.prototype.clearCriteriasList = function() {
  return this.setCriteriasList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.GetAllWorkflowResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.GetAllWorkflowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.GetAllWorkflowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetAllWorkflowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.workflow_api.Workflow.toObject, includeInstance),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    paginated: (f = msg.getPaginated()) && common_pb.Paginated.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.GetAllWorkflowResponse}
 */
proto.workflow_api.GetAllWorkflowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.GetAllWorkflowResponse;
  return proto.workflow_api.GetAllWorkflowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.GetAllWorkflowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.GetAllWorkflowResponse}
 */
proto.workflow_api.GetAllWorkflowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = new proto.workflow_api.Workflow;
      reader.readMessage(value,proto.workflow_api.Workflow.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 4:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 5:
      var value = new common_pb.Paginated;
      reader.readMessage(value,common_pb.Paginated.deserializeBinaryFromReader);
      msg.setPaginated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.GetAllWorkflowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.GetAllWorkflowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetAllWorkflowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.workflow_api.Workflow.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getPaginated();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.Paginated.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow_api.GetAllWorkflowResponse} returns this
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow_api.GetAllWorkflowResponse} returns this
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated Workflow Data = 3;
 * @return {!Array<!proto.workflow_api.Workflow>}
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.workflow_api.Workflow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.Workflow, 3));
};


/**
 * @param {!Array<!proto.workflow_api.Workflow>} value
 * @return {!proto.workflow_api.GetAllWorkflowResponse} returns this
*/
proto.workflow_api.GetAllWorkflowResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.workflow_api.Workflow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.Workflow}
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.workflow_api.Workflow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.GetAllWorkflowResponse} returns this
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional Error error = 4;
 * @return {?proto.Error}
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.getError = function() {
  return /** @type{?proto.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 4));
};


/**
 * @param {?proto.Error|undefined} value
 * @return {!proto.workflow_api.GetAllWorkflowResponse} returns this
*/
proto.workflow_api.GetAllWorkflowResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.GetAllWorkflowResponse} returns this
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Paginated paginated = 5;
 * @return {?proto.Paginated}
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.getPaginated = function() {
  return /** @type{?proto.Paginated} */ (
    jspb.Message.getWrapperField(this, common_pb.Paginated, 5));
};


/**
 * @param {?proto.Paginated|undefined} value
 * @return {!proto.workflow_api.GetAllWorkflowResponse} returns this
*/
proto.workflow_api.GetAllWorkflowResponse.prototype.setPaginated = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.GetAllWorkflowResponse} returns this
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.clearPaginated = function() {
  return this.setPaginated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.GetAllWorkflowResponse.prototype.hasPaginated = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.WorkflowAttributes.repeatedFields_ = [6,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.WorkflowAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.WorkflowAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.WorkflowAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.WorkflowAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    source: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sourceidentifier: jspb.Message.getFieldWithDefault(msg, 4, "0"),
    visibility: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.workflow_api.Edge.toObject, includeInstance),
    flownodesList: jspb.Message.toObjectList(msg.getFlownodesList(),
    proto.workflow_api.FlowNode.toObject, includeInstance),
    workflow: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.WorkflowAttributes}
 */
proto.workflow_api.WorkflowAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.WorkflowAttributes;
  return proto.workflow_api.WorkflowAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.WorkflowAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.WorkflowAttributes}
 */
proto.workflow_api.WorkflowAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setSourceidentifier(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVisibility(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 7:
      var value = new proto.workflow_api.Edge;
      reader.readMessage(value,proto.workflow_api.Edge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 8:
      var value = new proto.workflow_api.FlowNode;
      reader.readMessage(value,proto.workflow_api.FlowNode.deserializeBinaryFromReader);
      msg.addFlownodes(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkflow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.WorkflowAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.WorkflowAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.WorkflowAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.WorkflowAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSourceidentifier();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      4,
      f
    );
  }
  f = message.getVisibility();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.workflow_api.Edge.serializeBinaryToWriter
    );
  }
  f = message.getFlownodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.workflow_api.FlowNode.serializeBinaryToWriter
    );
  }
  f = message.getWorkflow();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.workflow_api.WorkflowAttributes.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.workflow_api.WorkflowAttributes.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string source = 3;
 * @return {string}
 */
proto.workflow_api.WorkflowAttributes.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 sourceIdentifier = 4;
 * @return {string}
 */
proto.workflow_api.WorkflowAttributes.prototype.getSourceidentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.setSourceidentifier = function(value) {
  return jspb.Message.setProto3StringIntField(this, 4, value);
};


/**
 * optional string visibility = 5;
 * @return {string}
 */
proto.workflow_api.WorkflowAttributes.prototype.getVisibility = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.setVisibility = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string tags = 6;
 * @return {!Array<string>}
 */
proto.workflow_api.WorkflowAttributes.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * repeated Edge edges = 7;
 * @return {!Array<!proto.workflow_api.Edge>}
 */
proto.workflow_api.WorkflowAttributes.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.workflow_api.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.Edge, 7));
};


/**
 * @param {!Array<!proto.workflow_api.Edge>} value
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
*/
proto.workflow_api.WorkflowAttributes.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.workflow_api.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.Edge}
 */
proto.workflow_api.WorkflowAttributes.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.workflow_api.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * repeated FlowNode flowNodes = 8;
 * @return {!Array<!proto.workflow_api.FlowNode>}
 */
proto.workflow_api.WorkflowAttributes.prototype.getFlownodesList = function() {
  return /** @type{!Array<!proto.workflow_api.FlowNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.FlowNode, 8));
};


/**
 * @param {!Array<!proto.workflow_api.FlowNode>} value
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
*/
proto.workflow_api.WorkflowAttributes.prototype.setFlownodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.workflow_api.FlowNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.FlowNode}
 */
proto.workflow_api.WorkflowAttributes.prototype.addFlownodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.workflow_api.FlowNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.clearFlownodesList = function() {
  return this.setFlownodesList([]);
};


/**
 * optional string Workflow = 9;
 * @return {string}
 */
proto.workflow_api.WorkflowAttributes.prototype.getWorkflow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowAttributes} returns this
 */
proto.workflow_api.WorkflowAttributes.prototype.setWorkflow = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.CreateWorkflowRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.CreateWorkflowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.CreateWorkflowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.CreateWorkflowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.CreateWorkflowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowattributes: (f = msg.getWorkflowattributes()) && proto.workflow_api.WorkflowAttributes.toObject(includeInstance, f),
    variablesList: jspb.Message.toObjectList(msg.getVariablesList(),
    proto.workflow_api.WorkflowVariable.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.CreateWorkflowRequest}
 */
proto.workflow_api.CreateWorkflowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.CreateWorkflowRequest;
  return proto.workflow_api.CreateWorkflowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.CreateWorkflowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.CreateWorkflowRequest}
 */
proto.workflow_api.CreateWorkflowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.workflow_api.WorkflowAttributes;
      reader.readMessage(value,proto.workflow_api.WorkflowAttributes.deserializeBinaryFromReader);
      msg.setWorkflowattributes(value);
      break;
    case 2:
      var value = new proto.workflow_api.WorkflowVariable;
      reader.readMessage(value,proto.workflow_api.WorkflowVariable.deserializeBinaryFromReader);
      msg.addVariables(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.CreateWorkflowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.CreateWorkflowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.CreateWorkflowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.CreateWorkflowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowattributes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.workflow_api.WorkflowAttributes.serializeBinaryToWriter
    );
  }
  f = message.getVariablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.workflow_api.WorkflowVariable.serializeBinaryToWriter
    );
  }
};


/**
 * optional WorkflowAttributes workflowAttributes = 1;
 * @return {?proto.workflow_api.WorkflowAttributes}
 */
proto.workflow_api.CreateWorkflowRequest.prototype.getWorkflowattributes = function() {
  return /** @type{?proto.workflow_api.WorkflowAttributes} */ (
    jspb.Message.getWrapperField(this, proto.workflow_api.WorkflowAttributes, 1));
};


/**
 * @param {?proto.workflow_api.WorkflowAttributes|undefined} value
 * @return {!proto.workflow_api.CreateWorkflowRequest} returns this
*/
proto.workflow_api.CreateWorkflowRequest.prototype.setWorkflowattributes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.CreateWorkflowRequest} returns this
 */
proto.workflow_api.CreateWorkflowRequest.prototype.clearWorkflowattributes = function() {
  return this.setWorkflowattributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.CreateWorkflowRequest.prototype.hasWorkflowattributes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated WorkflowVariable variables = 2;
 * @return {!Array<!proto.workflow_api.WorkflowVariable>}
 */
proto.workflow_api.CreateWorkflowRequest.prototype.getVariablesList = function() {
  return /** @type{!Array<!proto.workflow_api.WorkflowVariable>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.WorkflowVariable, 2));
};


/**
 * @param {!Array<!proto.workflow_api.WorkflowVariable>} value
 * @return {!proto.workflow_api.CreateWorkflowRequest} returns this
*/
proto.workflow_api.CreateWorkflowRequest.prototype.setVariablesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.workflow_api.WorkflowVariable=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.WorkflowVariable}
 */
proto.workflow_api.CreateWorkflowRequest.prototype.addVariables = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.workflow_api.WorkflowVariable, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.CreateWorkflowRequest} returns this
 */
proto.workflow_api.CreateWorkflowRequest.prototype.clearVariablesList = function() {
  return this.setVariablesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.GetWorkflowRunOutputRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.GetWorkflowRunOutputRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.GetWorkflowRunOutputRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetWorkflowRunOutputRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    workflowrunid: jspb.Message.getFieldWithDefault(msg, 2, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.GetWorkflowRunOutputRequest}
 */
proto.workflow_api.GetWorkflowRunOutputRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.GetWorkflowRunOutputRequest;
  return proto.workflow_api.GetWorkflowRunOutputRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.GetWorkflowRunOutputRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.GetWorkflowRunOutputRequest}
 */
proto.workflow_api.GetWorkflowRunOutputRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowrunid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.GetWorkflowRunOutputRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.GetWorkflowRunOutputRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.GetWorkflowRunOutputRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetWorkflowRunOutputRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getWorkflowrunid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
};


/**
 * optional uint64 workflowId = 1;
 * @return {string}
 */
proto.workflow_api.GetWorkflowRunOutputRequest.prototype.getWorkflowid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.GetWorkflowRunOutputRequest} returns this
 */
proto.workflow_api.GetWorkflowRunOutputRequest.prototype.setWorkflowid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 workflowRunId = 2;
 * @return {string}
 */
proto.workflow_api.GetWorkflowRunOutputRequest.prototype.getWorkflowrunid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.GetWorkflowRunOutputRequest} returns this
 */
proto.workflow_api.GetWorkflowRunOutputRequest.prototype.setWorkflowrunid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.GetWorkflowRunOutputResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.GetWorkflowRunOutputResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetWorkflowRunOutputResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    data: (f = msg.getData()) && proto.workflow_api.WorkflowRunResponse.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.GetWorkflowRunOutputResponse}
 */
proto.workflow_api.GetWorkflowRunOutputResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.GetWorkflowRunOutputResponse;
  return proto.workflow_api.GetWorkflowRunOutputResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.GetWorkflowRunOutputResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.GetWorkflowRunOutputResponse}
 */
proto.workflow_api.GetWorkflowRunOutputResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = new proto.workflow_api.WorkflowRunResponse;
      reader.readMessage(value,proto.workflow_api.WorkflowRunResponse.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.GetWorkflowRunOutputResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.GetWorkflowRunOutputResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.GetWorkflowRunOutputResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.workflow_api.WorkflowRunResponse.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow_api.GetWorkflowRunOutputResponse} returns this
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow_api.GetWorkflowRunOutputResponse} returns this
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional WorkflowRunResponse Data = 3;
 * @return {?proto.workflow_api.WorkflowRunResponse}
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.getData = function() {
  return /** @type{?proto.workflow_api.WorkflowRunResponse} */ (
    jspb.Message.getWrapperField(this, proto.workflow_api.WorkflowRunResponse, 3));
};


/**
 * @param {?proto.workflow_api.WorkflowRunResponse|undefined} value
 * @return {!proto.workflow_api.GetWorkflowRunOutputResponse} returns this
*/
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.GetWorkflowRunOutputResponse} returns this
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Error error = 4;
 * @return {?proto.Error}
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.getError = function() {
  return /** @type{?proto.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 4));
};


/**
 * @param {?proto.Error|undefined} value
 * @return {!proto.workflow_api.GetWorkflowRunOutputResponse} returns this
*/
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.GetWorkflowRunOutputResponse} returns this
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.GetWorkflowRunOutputResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.WorkflowRunResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.WorkflowRunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.WorkflowRunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.WorkflowRunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.WorkflowRunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowrunid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.workflow_api.WorkflowOutput.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.WorkflowRunResponse}
 */
proto.workflow_api.WorkflowRunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.WorkflowRunResponse;
  return proto.workflow_api.WorkflowRunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.WorkflowRunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.WorkflowRunResponse}
 */
proto.workflow_api.WorkflowRunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowrunid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.workflow_api.WorkflowOutput;
      reader.readMessage(value,proto.workflow_api.WorkflowOutput.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.WorkflowRunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.WorkflowRunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.WorkflowRunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.WorkflowRunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowrunid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.workflow_api.WorkflowOutput.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 workflowRunId = 1;
 * @return {string}
 */
proto.workflow_api.WorkflowRunResponse.prototype.getWorkflowrunid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowRunResponse} returns this
 */
proto.workflow_api.WorkflowRunResponse.prototype.setWorkflowrunid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.workflow_api.WorkflowRunResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowRunResponse} returns this
 */
proto.workflow_api.WorkflowRunResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated WorkflowOutput outputs = 3;
 * @return {!Array<!proto.workflow_api.WorkflowOutput>}
 */
proto.workflow_api.WorkflowRunResponse.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.workflow_api.WorkflowOutput>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow_api.WorkflowOutput, 3));
};


/**
 * @param {!Array<!proto.workflow_api.WorkflowOutput>} value
 * @return {!proto.workflow_api.WorkflowRunResponse} returns this
*/
proto.workflow_api.WorkflowRunResponse.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.workflow_api.WorkflowOutput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.WorkflowOutput}
 */
proto.workflow_api.WorkflowRunResponse.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.workflow_api.WorkflowOutput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.WorkflowRunResponse} returns this
 */
proto.workflow_api.WorkflowRunResponse.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.WorkflowOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.WorkflowOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.WorkflowOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.WorkflowOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    workflowrunid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    flownodeid: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    output: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    outputtype: jspb.Message.getFieldWithDefault(msg, 6, ""),
    responsecode: jspb.Message.getFieldWithDefault(msg, 7, 0),
    flownode: (f = msg.getFlownode()) && proto.workflow_api.FlowNode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.WorkflowOutput}
 */
proto.workflow_api.WorkflowOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.WorkflowOutput;
  return proto.workflow_api.WorkflowOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.WorkflowOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.WorkflowOutput}
 */
proto.workflow_api.WorkflowOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowrunid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setFlownodeid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutput(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputtype(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponsecode(value);
      break;
    case 8:
      var value = new proto.workflow_api.FlowNode;
      reader.readMessage(value,proto.workflow_api.FlowNode.deserializeBinaryFromReader);
      msg.setFlownode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.WorkflowOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.WorkflowOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.WorkflowOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.WorkflowOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getWorkflowrunid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getFlownodeid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getOutput();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOutputtype();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getFlownode();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.workflow_api.FlowNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.workflow_api.WorkflowOutput.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowOutput} returns this
 */
proto.workflow_api.WorkflowOutput.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional uint64 workflowRunId = 2;
 * @return {string}
 */
proto.workflow_api.WorkflowOutput.prototype.getWorkflowrunid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowOutput} returns this
 */
proto.workflow_api.WorkflowOutput.prototype.setWorkflowrunid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint64 flowNodeId = 3;
 * @return {string}
 */
proto.workflow_api.WorkflowOutput.prototype.getFlownodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowOutput} returns this
 */
proto.workflow_api.WorkflowOutput.prototype.setFlownodeid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string output = 4;
 * @return {string}
 */
proto.workflow_api.WorkflowOutput.prototype.getOutput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowOutput} returns this
 */
proto.workflow_api.WorkflowOutput.prototype.setOutput = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.workflow_api.WorkflowOutput.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowOutput} returns this
 */
proto.workflow_api.WorkflowOutput.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string outputType = 6;
 * @return {string}
 */
proto.workflow_api.WorkflowOutput.prototype.getOutputtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.WorkflowOutput} returns this
 */
proto.workflow_api.WorkflowOutput.prototype.setOutputtype = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 responseCode = 7;
 * @return {number}
 */
proto.workflow_api.WorkflowOutput.prototype.getResponsecode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow_api.WorkflowOutput} returns this
 */
proto.workflow_api.WorkflowOutput.prototype.setResponsecode = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workflow_api.WorkflowOutput} returns this
 */
proto.workflow_api.WorkflowOutput.prototype.clearResponsecode = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.WorkflowOutput.prototype.hasResponsecode = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional FlowNode flowNode = 8;
 * @return {?proto.workflow_api.FlowNode}
 */
proto.workflow_api.WorkflowOutput.prototype.getFlownode = function() {
  return /** @type{?proto.workflow_api.FlowNode} */ (
    jspb.Message.getWrapperField(this, proto.workflow_api.FlowNode, 8));
};


/**
 * @param {?proto.workflow_api.FlowNode|undefined} value
 * @return {!proto.workflow_api.WorkflowOutput} returns this
*/
proto.workflow_api.WorkflowOutput.prototype.setFlownode = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow_api.WorkflowOutput} returns this
 */
proto.workflow_api.WorkflowOutput.prototype.clearFlownode = function() {
  return this.setFlownode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow_api.WorkflowOutput.prototype.hasFlownode = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow_api.CreateWorkflowTagRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.CreateWorkflowTagRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.CreateWorkflowTagRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.CreateWorkflowTagRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.CreateWorkflowTagRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.CreateWorkflowTagRequest}
 */
proto.workflow_api.CreateWorkflowTagRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.CreateWorkflowTagRequest;
  return proto.workflow_api.CreateWorkflowTagRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.CreateWorkflowTagRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.CreateWorkflowTagRequest}
 */
proto.workflow_api.CreateWorkflowTagRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.CreateWorkflowTagRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.CreateWorkflowTagRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.CreateWorkflowTagRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.CreateWorkflowTagRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional uint64 workflowId = 1;
 * @return {string}
 */
proto.workflow_api.CreateWorkflowTagRequest.prototype.getWorkflowid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.CreateWorkflowTagRequest} returns this
 */
proto.workflow_api.CreateWorkflowTagRequest.prototype.setWorkflowid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.workflow_api.CreateWorkflowTagRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.workflow_api.CreateWorkflowTagRequest} returns this
 */
proto.workflow_api.CreateWorkflowTagRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.workflow_api.CreateWorkflowTagRequest} returns this
 */
proto.workflow_api.CreateWorkflowTagRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow_api.CreateWorkflowTagRequest} returns this
 */
proto.workflow_api.CreateWorkflowTagRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.PublishWorkflowVersionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.PublishWorkflowVersionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.PublishWorkflowVersionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.PublishWorkflowVersionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    workflowjson: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.PublishWorkflowVersionRequest}
 */
proto.workflow_api.PublishWorkflowVersionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.PublishWorkflowVersionRequest;
  return proto.workflow_api.PublishWorkflowVersionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.PublishWorkflowVersionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.PublishWorkflowVersionRequest}
 */
proto.workflow_api.PublishWorkflowVersionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkflowjson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.PublishWorkflowVersionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.PublishWorkflowVersionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.PublishWorkflowVersionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.PublishWorkflowVersionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getWorkflowjson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 workflowId = 1;
 * @return {string}
 */
proto.workflow_api.PublishWorkflowVersionRequest.prototype.getWorkflowid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.PublishWorkflowVersionRequest} returns this
 */
proto.workflow_api.PublishWorkflowVersionRequest.prototype.setWorkflowid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string workflowJson = 2;
 * @return {string}
 */
proto.workflow_api.PublishWorkflowVersionRequest.prototype.getWorkflowjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.PublishWorkflowVersionRequest} returns this
 */
proto.workflow_api.PublishWorkflowVersionRequest.prototype.setWorkflowjson = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow_api.UpdateWorkflowDetailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow_api.UpdateWorkflowDetailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow_api.UpdateWorkflowDetailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.UpdateWorkflowDetailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workflowid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow_api.UpdateWorkflowDetailRequest}
 */
proto.workflow_api.UpdateWorkflowDetailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow_api.UpdateWorkflowDetailRequest;
  return proto.workflow_api.UpdateWorkflowDetailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow_api.UpdateWorkflowDetailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow_api.UpdateWorkflowDetailRequest}
 */
proto.workflow_api.UpdateWorkflowDetailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setWorkflowid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow_api.UpdateWorkflowDetailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow_api.UpdateWorkflowDetailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow_api.UpdateWorkflowDetailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow_api.UpdateWorkflowDetailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkflowid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 workflowId = 1;
 * @return {string}
 */
proto.workflow_api.UpdateWorkflowDetailRequest.prototype.getWorkflowid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.UpdateWorkflowDetailRequest} returns this
 */
proto.workflow_api.UpdateWorkflowDetailRequest.prototype.setWorkflowid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.workflow_api.UpdateWorkflowDetailRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.UpdateWorkflowDetailRequest} returns this
 */
proto.workflow_api.UpdateWorkflowDetailRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.workflow_api.UpdateWorkflowDetailRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow_api.UpdateWorkflowDetailRequest} returns this
 */
proto.workflow_api.UpdateWorkflowDetailRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.workflow_api);
