/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: assistant-api.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./google/protobuf/timestamp";
import * as dependency_2 from "./common";
import * as dependency_3 from "./assistant-deployment";
import * as dependency_4 from "./assistant-tool";
import * as dependency_5 from "./assistant-analysis";
import * as dependency_6 from "./assistant-webhook";
import * as dependency_7 from "./assistant-knowledge";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace assistant_api {
    export class Assistant extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            status?: string;
            visibility?: string;
            source?: string;
            sourceIdentifier?: string;
            assistantTools?: dependency_4.assistant_api.AssistantTool[];
            projectId?: string;
            organizationId?: string;
            assistantProviderModelId?: string;
            assistantProviderModel?: AssistantProviderModel;
            name?: string;
            description?: string;
            assistantTag?: dependency_2.Tag;
            language?: string;
            organization?: dependency_2.Organization;
            createdBy?: string;
            createdUser?: dependency_2.User;
            updatedBy?: string;
            updatedUser?: dependency_2.User;
            createdDate?: dependency_1.google.protobuf.Timestamp;
            updatedDate?: dependency_1.google.protobuf.Timestamp;
            debuggerDeployment?: dependency_3.assistant_api.AssistantDebuggerDeployment;
            phoneDeployment?: dependency_3.assistant_api.AssistantPhoneDeployment;
            whatsappDeployment?: dependency_3.assistant_api.AssistantWhatsappDeployment;
            webPluginDeployment?: dependency_3.assistant_api.AssistantWebpluginDeployment;
            apiDeployment?: dependency_3.assistant_api.AssistantApiDeployment;
            assistantConversations?: dependency_2.AssistantConversation[];
            assistantWebhooks?: dependency_6.assistant_api.AssistantWebhook[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [6, 35, 36], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("visibility" in data && data.visibility != undefined) {
                    this.visibility = data.visibility;
                }
                if ("source" in data && data.source != undefined) {
                    this.source = data.source;
                }
                if ("sourceIdentifier" in data && data.sourceIdentifier != undefined) {
                    this.sourceIdentifier = data.sourceIdentifier;
                }
                if ("assistantTools" in data && data.assistantTools != undefined) {
                    this.assistantTools = data.assistantTools;
                }
                if ("projectId" in data && data.projectId != undefined) {
                    this.projectId = data.projectId;
                }
                if ("organizationId" in data && data.organizationId != undefined) {
                    this.organizationId = data.organizationId;
                }
                if ("assistantProviderModelId" in data && data.assistantProviderModelId != undefined) {
                    this.assistantProviderModelId = data.assistantProviderModelId;
                }
                if ("assistantProviderModel" in data && data.assistantProviderModel != undefined) {
                    this.assistantProviderModel = data.assistantProviderModel;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("assistantTag" in data && data.assistantTag != undefined) {
                    this.assistantTag = data.assistantTag;
                }
                if ("language" in data && data.language != undefined) {
                    this.language = data.language;
                }
                if ("organization" in data && data.organization != undefined) {
                    this.organization = data.organization;
                }
                if ("createdBy" in data && data.createdBy != undefined) {
                    this.createdBy = data.createdBy;
                }
                if ("createdUser" in data && data.createdUser != undefined) {
                    this.createdUser = data.createdUser;
                }
                if ("updatedBy" in data && data.updatedBy != undefined) {
                    this.updatedBy = data.updatedBy;
                }
                if ("updatedUser" in data && data.updatedUser != undefined) {
                    this.updatedUser = data.updatedUser;
                }
                if ("createdDate" in data && data.createdDate != undefined) {
                    this.createdDate = data.createdDate;
                }
                if ("updatedDate" in data && data.updatedDate != undefined) {
                    this.updatedDate = data.updatedDate;
                }
                if ("debuggerDeployment" in data && data.debuggerDeployment != undefined) {
                    this.debuggerDeployment = data.debuggerDeployment;
                }
                if ("phoneDeployment" in data && data.phoneDeployment != undefined) {
                    this.phoneDeployment = data.phoneDeployment;
                }
                if ("whatsappDeployment" in data && data.whatsappDeployment != undefined) {
                    this.whatsappDeployment = data.whatsappDeployment;
                }
                if ("webPluginDeployment" in data && data.webPluginDeployment != undefined) {
                    this.webPluginDeployment = data.webPluginDeployment;
                }
                if ("apiDeployment" in data && data.apiDeployment != undefined) {
                    this.apiDeployment = data.apiDeployment;
                }
                if ("assistantConversations" in data && data.assistantConversations != undefined) {
                    this.assistantConversations = data.assistantConversations;
                }
                if ("assistantWebhooks" in data && data.assistantWebhooks != undefined) {
                    this.assistantWebhooks = data.assistantWebhooks;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set status(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get visibility() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set visibility(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get source() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set source(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get sourceIdentifier() {
            return pb_1.Message.getFieldWithDefault(this, 5, "0") as string;
        }
        set sourceIdentifier(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get assistantTools() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.assistant_api.AssistantTool, 6) as dependency_4.assistant_api.AssistantTool[];
        }
        set assistantTools(value: dependency_4.assistant_api.AssistantTool[]) {
            pb_1.Message.setRepeatedWrapperField(this, 6, value);
        }
        get projectId() {
            return pb_1.Message.getFieldWithDefault(this, 7, "0") as string;
        }
        set projectId(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get organizationId() {
            return pb_1.Message.getFieldWithDefault(this, 8, "0") as string;
        }
        set organizationId(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        get assistantProviderModelId() {
            return pb_1.Message.getFieldWithDefault(this, 9, "0") as string;
        }
        set assistantProviderModelId(value: string) {
            pb_1.Message.setField(this, 9, value);
        }
        get assistantProviderModel() {
            return pb_1.Message.getWrapperField(this, AssistantProviderModel, 10) as AssistantProviderModel;
        }
        set assistantProviderModel(value: AssistantProviderModel) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get has_assistantProviderModel() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 12, value);
        }
        get assistantTag() {
            return pb_1.Message.getWrapperField(this, dependency_2.Tag, 14) as dependency_2.Tag;
        }
        set assistantTag(value: dependency_2.Tag) {
            pb_1.Message.setWrapperField(this, 14, value);
        }
        get has_assistantTag() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get language() {
            return pb_1.Message.getFieldWithDefault(this, 16, "") as string;
        }
        set language(value: string) {
            pb_1.Message.setField(this, 16, value);
        }
        get organization() {
            return pb_1.Message.getWrapperField(this, dependency_2.Organization, 17) as dependency_2.Organization;
        }
        set organization(value: dependency_2.Organization) {
            pb_1.Message.setWrapperField(this, 17, value);
        }
        get has_organization() {
            return pb_1.Message.getField(this, 17) != null;
        }
        get createdBy() {
            return pb_1.Message.getFieldWithDefault(this, 22, "0") as string;
        }
        set createdBy(value: string) {
            pb_1.Message.setField(this, 22, value);
        }
        get createdUser() {
            return pb_1.Message.getWrapperField(this, dependency_2.User, 23) as dependency_2.User;
        }
        set createdUser(value: dependency_2.User) {
            pb_1.Message.setWrapperField(this, 23, value);
        }
        get has_createdUser() {
            return pb_1.Message.getField(this, 23) != null;
        }
        get updatedBy() {
            return pb_1.Message.getFieldWithDefault(this, 24, "0") as string;
        }
        set updatedBy(value: string) {
            pb_1.Message.setField(this, 24, value);
        }
        get updatedUser() {
            return pb_1.Message.getWrapperField(this, dependency_2.User, 25) as dependency_2.User;
        }
        set updatedUser(value: dependency_2.User) {
            pb_1.Message.setWrapperField(this, 25, value);
        }
        get has_updatedUser() {
            return pb_1.Message.getField(this, 25) != null;
        }
        get createdDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 26) as dependency_1.google.protobuf.Timestamp;
        }
        set createdDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 26, value);
        }
        get has_createdDate() {
            return pb_1.Message.getField(this, 26) != null;
        }
        get updatedDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 27) as dependency_1.google.protobuf.Timestamp;
        }
        set updatedDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 27, value);
        }
        get has_updatedDate() {
            return pb_1.Message.getField(this, 27) != null;
        }
        get debuggerDeployment() {
            return pb_1.Message.getWrapperField(this, dependency_3.assistant_api.AssistantDebuggerDeployment, 30) as dependency_3.assistant_api.AssistantDebuggerDeployment;
        }
        set debuggerDeployment(value: dependency_3.assistant_api.AssistantDebuggerDeployment) {
            pb_1.Message.setWrapperField(this, 30, value);
        }
        get has_debuggerDeployment() {
            return pb_1.Message.getField(this, 30) != null;
        }
        get phoneDeployment() {
            return pb_1.Message.getWrapperField(this, dependency_3.assistant_api.AssistantPhoneDeployment, 31) as dependency_3.assistant_api.AssistantPhoneDeployment;
        }
        set phoneDeployment(value: dependency_3.assistant_api.AssistantPhoneDeployment) {
            pb_1.Message.setWrapperField(this, 31, value);
        }
        get has_phoneDeployment() {
            return pb_1.Message.getField(this, 31) != null;
        }
        get whatsappDeployment() {
            return pb_1.Message.getWrapperField(this, dependency_3.assistant_api.AssistantWhatsappDeployment, 32) as dependency_3.assistant_api.AssistantWhatsappDeployment;
        }
        set whatsappDeployment(value: dependency_3.assistant_api.AssistantWhatsappDeployment) {
            pb_1.Message.setWrapperField(this, 32, value);
        }
        get has_whatsappDeployment() {
            return pb_1.Message.getField(this, 32) != null;
        }
        get webPluginDeployment() {
            return pb_1.Message.getWrapperField(this, dependency_3.assistant_api.AssistantWebpluginDeployment, 33) as dependency_3.assistant_api.AssistantWebpluginDeployment;
        }
        set webPluginDeployment(value: dependency_3.assistant_api.AssistantWebpluginDeployment) {
            pb_1.Message.setWrapperField(this, 33, value);
        }
        get has_webPluginDeployment() {
            return pb_1.Message.getField(this, 33) != null;
        }
        get apiDeployment() {
            return pb_1.Message.getWrapperField(this, dependency_3.assistant_api.AssistantApiDeployment, 34) as dependency_3.assistant_api.AssistantApiDeployment;
        }
        set apiDeployment(value: dependency_3.assistant_api.AssistantApiDeployment) {
            pb_1.Message.setWrapperField(this, 34, value);
        }
        get has_apiDeployment() {
            return pb_1.Message.getField(this, 34) != null;
        }
        get assistantConversations() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.AssistantConversation, 35) as dependency_2.AssistantConversation[];
        }
        set assistantConversations(value: dependency_2.AssistantConversation[]) {
            pb_1.Message.setRepeatedWrapperField(this, 35, value);
        }
        get assistantWebhooks() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_6.assistant_api.AssistantWebhook, 36) as dependency_6.assistant_api.AssistantWebhook[];
        }
        set assistantWebhooks(value: dependency_6.assistant_api.AssistantWebhook[]) {
            pb_1.Message.setRepeatedWrapperField(this, 36, value);
        }
        static fromObject(data: {
            id?: string;
            status?: string;
            visibility?: string;
            source?: string;
            sourceIdentifier?: string;
            assistantTools?: ReturnType<typeof dependency_4.assistant_api.AssistantTool.prototype.toObject>[];
            projectId?: string;
            organizationId?: string;
            assistantProviderModelId?: string;
            assistantProviderModel?: ReturnType<typeof AssistantProviderModel.prototype.toObject>;
            name?: string;
            description?: string;
            assistantTag?: ReturnType<typeof dependency_2.Tag.prototype.toObject>;
            language?: string;
            organization?: ReturnType<typeof dependency_2.Organization.prototype.toObject>;
            createdBy?: string;
            createdUser?: ReturnType<typeof dependency_2.User.prototype.toObject>;
            updatedBy?: string;
            updatedUser?: ReturnType<typeof dependency_2.User.prototype.toObject>;
            createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            debuggerDeployment?: ReturnType<typeof dependency_3.assistant_api.AssistantDebuggerDeployment.prototype.toObject>;
            phoneDeployment?: ReturnType<typeof dependency_3.assistant_api.AssistantPhoneDeployment.prototype.toObject>;
            whatsappDeployment?: ReturnType<typeof dependency_3.assistant_api.AssistantWhatsappDeployment.prototype.toObject>;
            webPluginDeployment?: ReturnType<typeof dependency_3.assistant_api.AssistantWebpluginDeployment.prototype.toObject>;
            apiDeployment?: ReturnType<typeof dependency_3.assistant_api.AssistantApiDeployment.prototype.toObject>;
            assistantConversations?: ReturnType<typeof dependency_2.AssistantConversation.prototype.toObject>[];
            assistantWebhooks?: ReturnType<typeof dependency_6.assistant_api.AssistantWebhook.prototype.toObject>[];
        }): Assistant {
            const message = new Assistant({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.visibility != null) {
                message.visibility = data.visibility;
            }
            if (data.source != null) {
                message.source = data.source;
            }
            if (data.sourceIdentifier != null) {
                message.sourceIdentifier = data.sourceIdentifier;
            }
            if (data.assistantTools != null) {
                message.assistantTools = data.assistantTools.map(item => dependency_4.assistant_api.AssistantTool.fromObject(item));
            }
            if (data.projectId != null) {
                message.projectId = data.projectId;
            }
            if (data.organizationId != null) {
                message.organizationId = data.organizationId;
            }
            if (data.assistantProviderModelId != null) {
                message.assistantProviderModelId = data.assistantProviderModelId;
            }
            if (data.assistantProviderModel != null) {
                message.assistantProviderModel = AssistantProviderModel.fromObject(data.assistantProviderModel);
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.assistantTag != null) {
                message.assistantTag = dependency_2.Tag.fromObject(data.assistantTag);
            }
            if (data.language != null) {
                message.language = data.language;
            }
            if (data.organization != null) {
                message.organization = dependency_2.Organization.fromObject(data.organization);
            }
            if (data.createdBy != null) {
                message.createdBy = data.createdBy;
            }
            if (data.createdUser != null) {
                message.createdUser = dependency_2.User.fromObject(data.createdUser);
            }
            if (data.updatedBy != null) {
                message.updatedBy = data.updatedBy;
            }
            if (data.updatedUser != null) {
                message.updatedUser = dependency_2.User.fromObject(data.updatedUser);
            }
            if (data.createdDate != null) {
                message.createdDate = dependency_1.google.protobuf.Timestamp.fromObject(data.createdDate);
            }
            if (data.updatedDate != null) {
                message.updatedDate = dependency_1.google.protobuf.Timestamp.fromObject(data.updatedDate);
            }
            if (data.debuggerDeployment != null) {
                message.debuggerDeployment = dependency_3.assistant_api.AssistantDebuggerDeployment.fromObject(data.debuggerDeployment);
            }
            if (data.phoneDeployment != null) {
                message.phoneDeployment = dependency_3.assistant_api.AssistantPhoneDeployment.fromObject(data.phoneDeployment);
            }
            if (data.whatsappDeployment != null) {
                message.whatsappDeployment = dependency_3.assistant_api.AssistantWhatsappDeployment.fromObject(data.whatsappDeployment);
            }
            if (data.webPluginDeployment != null) {
                message.webPluginDeployment = dependency_3.assistant_api.AssistantWebpluginDeployment.fromObject(data.webPluginDeployment);
            }
            if (data.apiDeployment != null) {
                message.apiDeployment = dependency_3.assistant_api.AssistantApiDeployment.fromObject(data.apiDeployment);
            }
            if (data.assistantConversations != null) {
                message.assistantConversations = data.assistantConversations.map(item => dependency_2.AssistantConversation.fromObject(item));
            }
            if (data.assistantWebhooks != null) {
                message.assistantWebhooks = data.assistantWebhooks.map(item => dependency_6.assistant_api.AssistantWebhook.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                status?: string;
                visibility?: string;
                source?: string;
                sourceIdentifier?: string;
                assistantTools?: ReturnType<typeof dependency_4.assistant_api.AssistantTool.prototype.toObject>[];
                projectId?: string;
                organizationId?: string;
                assistantProviderModelId?: string;
                assistantProviderModel?: ReturnType<typeof AssistantProviderModel.prototype.toObject>;
                name?: string;
                description?: string;
                assistantTag?: ReturnType<typeof dependency_2.Tag.prototype.toObject>;
                language?: string;
                organization?: ReturnType<typeof dependency_2.Organization.prototype.toObject>;
                createdBy?: string;
                createdUser?: ReturnType<typeof dependency_2.User.prototype.toObject>;
                updatedBy?: string;
                updatedUser?: ReturnType<typeof dependency_2.User.prototype.toObject>;
                createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                debuggerDeployment?: ReturnType<typeof dependency_3.assistant_api.AssistantDebuggerDeployment.prototype.toObject>;
                phoneDeployment?: ReturnType<typeof dependency_3.assistant_api.AssistantPhoneDeployment.prototype.toObject>;
                whatsappDeployment?: ReturnType<typeof dependency_3.assistant_api.AssistantWhatsappDeployment.prototype.toObject>;
                webPluginDeployment?: ReturnType<typeof dependency_3.assistant_api.AssistantWebpluginDeployment.prototype.toObject>;
                apiDeployment?: ReturnType<typeof dependency_3.assistant_api.AssistantApiDeployment.prototype.toObject>;
                assistantConversations?: ReturnType<typeof dependency_2.AssistantConversation.prototype.toObject>[];
                assistantWebhooks?: ReturnType<typeof dependency_6.assistant_api.AssistantWebhook.prototype.toObject>[];
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.visibility != null) {
                data.visibility = this.visibility;
            }
            if (this.source != null) {
                data.source = this.source;
            }
            if (this.sourceIdentifier != null) {
                data.sourceIdentifier = this.sourceIdentifier;
            }
            if (this.assistantTools != null) {
                data.assistantTools = this.assistantTools.map((item: dependency_4.assistant_api.AssistantTool) => item.toObject());
            }
            if (this.projectId != null) {
                data.projectId = this.projectId;
            }
            if (this.organizationId != null) {
                data.organizationId = this.organizationId;
            }
            if (this.assistantProviderModelId != null) {
                data.assistantProviderModelId = this.assistantProviderModelId;
            }
            if (this.assistantProviderModel != null) {
                data.assistantProviderModel = this.assistantProviderModel.toObject();
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.assistantTag != null) {
                data.assistantTag = this.assistantTag.toObject();
            }
            if (this.language != null) {
                data.language = this.language;
            }
            if (this.organization != null) {
                data.organization = this.organization.toObject();
            }
            if (this.createdBy != null) {
                data.createdBy = this.createdBy;
            }
            if (this.createdUser != null) {
                data.createdUser = this.createdUser.toObject();
            }
            if (this.updatedBy != null) {
                data.updatedBy = this.updatedBy;
            }
            if (this.updatedUser != null) {
                data.updatedUser = this.updatedUser.toObject();
            }
            if (this.createdDate != null) {
                data.createdDate = this.createdDate.toObject();
            }
            if (this.updatedDate != null) {
                data.updatedDate = this.updatedDate.toObject();
            }
            if (this.debuggerDeployment != null) {
                data.debuggerDeployment = this.debuggerDeployment.toObject();
            }
            if (this.phoneDeployment != null) {
                data.phoneDeployment = this.phoneDeployment.toObject();
            }
            if (this.whatsappDeployment != null) {
                data.whatsappDeployment = this.whatsappDeployment.toObject();
            }
            if (this.webPluginDeployment != null) {
                data.webPluginDeployment = this.webPluginDeployment.toObject();
            }
            if (this.apiDeployment != null) {
                data.apiDeployment = this.apiDeployment.toObject();
            }
            if (this.assistantConversations != null) {
                data.assistantConversations = this.assistantConversations.map((item: dependency_2.AssistantConversation) => item.toObject());
            }
            if (this.assistantWebhooks != null) {
                data.assistantWebhooks = this.assistantWebhooks.map((item: dependency_6.assistant_api.AssistantWebhook) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != "0")
                writer.writeUint64String(1, this.id);
            if (this.status.length)
                writer.writeString(2, this.status);
            if (this.visibility.length)
                writer.writeString(3, this.visibility);
            if (this.source.length)
                writer.writeString(4, this.source);
            if (this.sourceIdentifier != "0")
                writer.writeUint64String(5, this.sourceIdentifier);
            if (this.assistantTools.length)
                writer.writeRepeatedMessage(6, this.assistantTools, (item: dependency_4.assistant_api.AssistantTool) => item.serialize(writer));
            if (this.projectId != "0")
                writer.writeUint64String(7, this.projectId);
            if (this.organizationId != "0")
                writer.writeUint64String(8, this.organizationId);
            if (this.assistantProviderModelId != "0")
                writer.writeUint64String(9, this.assistantProviderModelId);
            if (this.has_assistantProviderModel)
                writer.writeMessage(10, this.assistantProviderModel, () => this.assistantProviderModel.serialize(writer));
            if (this.name.length)
                writer.writeString(11, this.name);
            if (this.description.length)
                writer.writeString(12, this.description);
            if (this.has_assistantTag)
                writer.writeMessage(14, this.assistantTag, () => this.assistantTag.serialize(writer));
            if (this.language.length)
                writer.writeString(16, this.language);
            if (this.has_organization)
                writer.writeMessage(17, this.organization, () => this.organization.serialize(writer));
            if (this.createdBy != "0")
                writer.writeUint64String(22, this.createdBy);
            if (this.has_createdUser)
                writer.writeMessage(23, this.createdUser, () => this.createdUser.serialize(writer));
            if (this.updatedBy != "0")
                writer.writeUint64String(24, this.updatedBy);
            if (this.has_updatedUser)
                writer.writeMessage(25, this.updatedUser, () => this.updatedUser.serialize(writer));
            if (this.has_createdDate)
                writer.writeMessage(26, this.createdDate, () => this.createdDate.serialize(writer));
            if (this.has_updatedDate)
                writer.writeMessage(27, this.updatedDate, () => this.updatedDate.serialize(writer));
            if (this.has_debuggerDeployment)
                writer.writeMessage(30, this.debuggerDeployment, () => this.debuggerDeployment.serialize(writer));
            if (this.has_phoneDeployment)
                writer.writeMessage(31, this.phoneDeployment, () => this.phoneDeployment.serialize(writer));
            if (this.has_whatsappDeployment)
                writer.writeMessage(32, this.whatsappDeployment, () => this.whatsappDeployment.serialize(writer));
            if (this.has_webPluginDeployment)
                writer.writeMessage(33, this.webPluginDeployment, () => this.webPluginDeployment.serialize(writer));
            if (this.has_apiDeployment)
                writer.writeMessage(34, this.apiDeployment, () => this.apiDeployment.serialize(writer));
            if (this.assistantConversations.length)
                writer.writeRepeatedMessage(35, this.assistantConversations, (item: dependency_2.AssistantConversation) => item.serialize(writer));
            if (this.assistantWebhooks.length)
                writer.writeRepeatedMessage(36, this.assistantWebhooks, (item: dependency_6.assistant_api.AssistantWebhook) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Assistant {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Assistant();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64String();
                        break;
                    case 2:
                        message.status = reader.readString();
                        break;
                    case 3:
                        message.visibility = reader.readString();
                        break;
                    case 4:
                        message.source = reader.readString();
                        break;
                    case 5:
                        message.sourceIdentifier = reader.readUint64String();
                        break;
                    case 6:
                        reader.readMessage(message.assistantTools, () => pb_1.Message.addToRepeatedWrapperField(message, 6, dependency_4.assistant_api.AssistantTool.deserialize(reader), dependency_4.assistant_api.AssistantTool));
                        break;
                    case 7:
                        message.projectId = reader.readUint64String();
                        break;
                    case 8:
                        message.organizationId = reader.readUint64String();
                        break;
                    case 9:
                        message.assistantProviderModelId = reader.readUint64String();
                        break;
                    case 10:
                        reader.readMessage(message.assistantProviderModel, () => message.assistantProviderModel = AssistantProviderModel.deserialize(reader));
                        break;
                    case 11:
                        message.name = reader.readString();
                        break;
                    case 12:
                        message.description = reader.readString();
                        break;
                    case 14:
                        reader.readMessage(message.assistantTag, () => message.assistantTag = dependency_2.Tag.deserialize(reader));
                        break;
                    case 16:
                        message.language = reader.readString();
                        break;
                    case 17:
                        reader.readMessage(message.organization, () => message.organization = dependency_2.Organization.deserialize(reader));
                        break;
                    case 22:
                        message.createdBy = reader.readUint64String();
                        break;
                    case 23:
                        reader.readMessage(message.createdUser, () => message.createdUser = dependency_2.User.deserialize(reader));
                        break;
                    case 24:
                        message.updatedBy = reader.readUint64String();
                        break;
                    case 25:
                        reader.readMessage(message.updatedUser, () => message.updatedUser = dependency_2.User.deserialize(reader));
                        break;
                    case 26:
                        reader.readMessage(message.createdDate, () => message.createdDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 27:
                        reader.readMessage(message.updatedDate, () => message.updatedDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 30:
                        reader.readMessage(message.debuggerDeployment, () => message.debuggerDeployment = dependency_3.assistant_api.AssistantDebuggerDeployment.deserialize(reader));
                        break;
                    case 31:
                        reader.readMessage(message.phoneDeployment, () => message.phoneDeployment = dependency_3.assistant_api.AssistantPhoneDeployment.deserialize(reader));
                        break;
                    case 32:
                        reader.readMessage(message.whatsappDeployment, () => message.whatsappDeployment = dependency_3.assistant_api.AssistantWhatsappDeployment.deserialize(reader));
                        break;
                    case 33:
                        reader.readMessage(message.webPluginDeployment, () => message.webPluginDeployment = dependency_3.assistant_api.AssistantWebpluginDeployment.deserialize(reader));
                        break;
                    case 34:
                        reader.readMessage(message.apiDeployment, () => message.apiDeployment = dependency_3.assistant_api.AssistantApiDeployment.deserialize(reader));
                        break;
                    case 35:
                        reader.readMessage(message.assistantConversations, () => pb_1.Message.addToRepeatedWrapperField(message, 35, dependency_2.AssistantConversation.deserialize(reader), dependency_2.AssistantConversation));
                        break;
                    case 36:
                        reader.readMessage(message.assistantWebhooks, () => pb_1.Message.addToRepeatedWrapperField(message, 36, dependency_6.assistant_api.AssistantWebhook.deserialize(reader), dependency_6.assistant_api.AssistantWebhook));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Assistant {
            return Assistant.deserialize(bytes);
        }
    }
    export class AssistantProviderModel extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            template?: dependency_2.TextChatCompletePrompt;
            description?: string;
            modelProviderId?: string;
            modelProviderName?: string;
            assistantModelOptions?: dependency_2.Metadata[];
            status?: string;
            createdBy?: string;
            createdUser?: dependency_2.User;
            updatedBy?: string;
            updatedUser?: dependency_2.User;
            createdDate?: dependency_1.google.protobuf.Timestamp;
            updatedDate?: dependency_1.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [9], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("template" in data && data.template != undefined) {
                    this.template = data.template;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("modelProviderId" in data && data.modelProviderId != undefined) {
                    this.modelProviderId = data.modelProviderId;
                }
                if ("modelProviderName" in data && data.modelProviderName != undefined) {
                    this.modelProviderName = data.modelProviderName;
                }
                if ("assistantModelOptions" in data && data.assistantModelOptions != undefined) {
                    this.assistantModelOptions = data.assistantModelOptions;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("createdBy" in data && data.createdBy != undefined) {
                    this.createdBy = data.createdBy;
                }
                if ("createdUser" in data && data.createdUser != undefined) {
                    this.createdUser = data.createdUser;
                }
                if ("updatedBy" in data && data.updatedBy != undefined) {
                    this.updatedBy = data.updatedBy;
                }
                if ("updatedUser" in data && data.updatedUser != undefined) {
                    this.updatedUser = data.updatedUser;
                }
                if ("createdDate" in data && data.createdDate != undefined) {
                    this.createdDate = data.createdDate;
                }
                if ("updatedDate" in data && data.updatedDate != undefined) {
                    this.updatedDate = data.updatedDate;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get template() {
            return pb_1.Message.getWrapperField(this, dependency_2.TextChatCompletePrompt, 2) as dependency_2.TextChatCompletePrompt;
        }
        set template(value: dependency_2.TextChatCompletePrompt) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_template() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get modelProviderId() {
            return pb_1.Message.getFieldWithDefault(this, 6, "0") as string;
        }
        set modelProviderId(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get modelProviderName() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set modelProviderName(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get assistantModelOptions() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Metadata, 9) as dependency_2.Metadata[];
        }
        set assistantModelOptions(value: dependency_2.Metadata[]) {
            pb_1.Message.setRepeatedWrapperField(this, 9, value);
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
        }
        set status(value: string) {
            pb_1.Message.setField(this, 12, value);
        }
        get createdBy() {
            return pb_1.Message.getFieldWithDefault(this, 13, "0") as string;
        }
        set createdBy(value: string) {
            pb_1.Message.setField(this, 13, value);
        }
        get createdUser() {
            return pb_1.Message.getWrapperField(this, dependency_2.User, 14) as dependency_2.User;
        }
        set createdUser(value: dependency_2.User) {
            pb_1.Message.setWrapperField(this, 14, value);
        }
        get has_createdUser() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get updatedBy() {
            return pb_1.Message.getFieldWithDefault(this, 15, "0") as string;
        }
        set updatedBy(value: string) {
            pb_1.Message.setField(this, 15, value);
        }
        get updatedUser() {
            return pb_1.Message.getWrapperField(this, dependency_2.User, 16) as dependency_2.User;
        }
        set updatedUser(value: dependency_2.User) {
            pb_1.Message.setWrapperField(this, 16, value);
        }
        get has_updatedUser() {
            return pb_1.Message.getField(this, 16) != null;
        }
        get createdDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 17) as dependency_1.google.protobuf.Timestamp;
        }
        set createdDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 17, value);
        }
        get has_createdDate() {
            return pb_1.Message.getField(this, 17) != null;
        }
        get updatedDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 18) as dependency_1.google.protobuf.Timestamp;
        }
        set updatedDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 18, value);
        }
        get has_updatedDate() {
            return pb_1.Message.getField(this, 18) != null;
        }
        static fromObject(data: {
            id?: string;
            template?: ReturnType<typeof dependency_2.TextChatCompletePrompt.prototype.toObject>;
            description?: string;
            modelProviderId?: string;
            modelProviderName?: string;
            assistantModelOptions?: ReturnType<typeof dependency_2.Metadata.prototype.toObject>[];
            status?: string;
            createdBy?: string;
            createdUser?: ReturnType<typeof dependency_2.User.prototype.toObject>;
            updatedBy?: string;
            updatedUser?: ReturnType<typeof dependency_2.User.prototype.toObject>;
            createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): AssistantProviderModel {
            const message = new AssistantProviderModel({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.template != null) {
                message.template = dependency_2.TextChatCompletePrompt.fromObject(data.template);
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.modelProviderId != null) {
                message.modelProviderId = data.modelProviderId;
            }
            if (data.modelProviderName != null) {
                message.modelProviderName = data.modelProviderName;
            }
            if (data.assistantModelOptions != null) {
                message.assistantModelOptions = data.assistantModelOptions.map(item => dependency_2.Metadata.fromObject(item));
            }
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.createdBy != null) {
                message.createdBy = data.createdBy;
            }
            if (data.createdUser != null) {
                message.createdUser = dependency_2.User.fromObject(data.createdUser);
            }
            if (data.updatedBy != null) {
                message.updatedBy = data.updatedBy;
            }
            if (data.updatedUser != null) {
                message.updatedUser = dependency_2.User.fromObject(data.updatedUser);
            }
            if (data.createdDate != null) {
                message.createdDate = dependency_1.google.protobuf.Timestamp.fromObject(data.createdDate);
            }
            if (data.updatedDate != null) {
                message.updatedDate = dependency_1.google.protobuf.Timestamp.fromObject(data.updatedDate);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                template?: ReturnType<typeof dependency_2.TextChatCompletePrompt.prototype.toObject>;
                description?: string;
                modelProviderId?: string;
                modelProviderName?: string;
                assistantModelOptions?: ReturnType<typeof dependency_2.Metadata.prototype.toObject>[];
                status?: string;
                createdBy?: string;
                createdUser?: ReturnType<typeof dependency_2.User.prototype.toObject>;
                updatedBy?: string;
                updatedUser?: ReturnType<typeof dependency_2.User.prototype.toObject>;
                createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.template != null) {
                data.template = this.template.toObject();
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.modelProviderId != null) {
                data.modelProviderId = this.modelProviderId;
            }
            if (this.modelProviderName != null) {
                data.modelProviderName = this.modelProviderName;
            }
            if (this.assistantModelOptions != null) {
                data.assistantModelOptions = this.assistantModelOptions.map((item: dependency_2.Metadata) => item.toObject());
            }
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.createdBy != null) {
                data.createdBy = this.createdBy;
            }
            if (this.createdUser != null) {
                data.createdUser = this.createdUser.toObject();
            }
            if (this.updatedBy != null) {
                data.updatedBy = this.updatedBy;
            }
            if (this.updatedUser != null) {
                data.updatedUser = this.updatedUser.toObject();
            }
            if (this.createdDate != null) {
                data.createdDate = this.createdDate.toObject();
            }
            if (this.updatedDate != null) {
                data.updatedDate = this.updatedDate.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != "0")
                writer.writeUint64String(1, this.id);
            if (this.has_template)
                writer.writeMessage(2, this.template, () => this.template.serialize(writer));
            if (this.description.length)
                writer.writeString(3, this.description);
            if (this.modelProviderId != "0")
                writer.writeUint64String(6, this.modelProviderId);
            if (this.modelProviderName.length)
                writer.writeString(7, this.modelProviderName);
            if (this.assistantModelOptions.length)
                writer.writeRepeatedMessage(9, this.assistantModelOptions, (item: dependency_2.Metadata) => item.serialize(writer));
            if (this.status.length)
                writer.writeString(12, this.status);
            if (this.createdBy != "0")
                writer.writeUint64String(13, this.createdBy);
            if (this.has_createdUser)
                writer.writeMessage(14, this.createdUser, () => this.createdUser.serialize(writer));
            if (this.updatedBy != "0")
                writer.writeUint64String(15, this.updatedBy);
            if (this.has_updatedUser)
                writer.writeMessage(16, this.updatedUser, () => this.updatedUser.serialize(writer));
            if (this.has_createdDate)
                writer.writeMessage(17, this.createdDate, () => this.createdDate.serialize(writer));
            if (this.has_updatedDate)
                writer.writeMessage(18, this.updatedDate, () => this.updatedDate.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AssistantProviderModel {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AssistantProviderModel();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64String();
                        break;
                    case 2:
                        reader.readMessage(message.template, () => message.template = dependency_2.TextChatCompletePrompt.deserialize(reader));
                        break;
                    case 3:
                        message.description = reader.readString();
                        break;
                    case 6:
                        message.modelProviderId = reader.readUint64String();
                        break;
                    case 7:
                        message.modelProviderName = reader.readString();
                        break;
                    case 9:
                        reader.readMessage(message.assistantModelOptions, () => pb_1.Message.addToRepeatedWrapperField(message, 9, dependency_2.Metadata.deserialize(reader), dependency_2.Metadata));
                        break;
                    case 12:
                        message.status = reader.readString();
                        break;
                    case 13:
                        message.createdBy = reader.readUint64String();
                        break;
                    case 14:
                        reader.readMessage(message.createdUser, () => message.createdUser = dependency_2.User.deserialize(reader));
                        break;
                    case 15:
                        message.updatedBy = reader.readUint64String();
                        break;
                    case 16:
                        reader.readMessage(message.updatedUser, () => message.updatedUser = dependency_2.User.deserialize(reader));
                        break;
                    case 17:
                        reader.readMessage(message.createdDate, () => message.createdDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 18:
                        reader.readMessage(message.updatedDate, () => message.updatedDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AssistantProviderModel {
            return AssistantProviderModel.deserialize(bytes);
        }
    }
    export class CreateAssistantRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            assistantProviderModel?: CreateAssistantProviderModelRequest;
            assistantKnowledges?: dependency_7.assistant_api.CreateAssistantKnowledgeRequest[];
            assistantTools?: dependency_4.assistant_api.CreateAssistantToolRequest[];
            description?: string;
            visibility?: string;
            language?: string;
            source?: string;
            sourceIdentifier?: string;
            tags?: string[];
            name?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2, 3, 9], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("assistantProviderModel" in data && data.assistantProviderModel != undefined) {
                    this.assistantProviderModel = data.assistantProviderModel;
                }
                if ("assistantKnowledges" in data && data.assistantKnowledges != undefined) {
                    this.assistantKnowledges = data.assistantKnowledges;
                }
                if ("assistantTools" in data && data.assistantTools != undefined) {
                    this.assistantTools = data.assistantTools;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("visibility" in data && data.visibility != undefined) {
                    this.visibility = data.visibility;
                }
                if ("language" in data && data.language != undefined) {
                    this.language = data.language;
                }
                if ("source" in data && data.source != undefined) {
                    this.source = data.source;
                }
                if ("sourceIdentifier" in data && data.sourceIdentifier != undefined) {
                    this.sourceIdentifier = data.sourceIdentifier;
                }
                if ("tags" in data && data.tags != undefined) {
                    this.tags = data.tags;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
            }
        }
        get assistantProviderModel() {
            return pb_1.Message.getWrapperField(this, CreateAssistantProviderModelRequest, 1) as CreateAssistantProviderModelRequest;
        }
        set assistantProviderModel(value: CreateAssistantProviderModelRequest) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_assistantProviderModel() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get assistantKnowledges() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_7.assistant_api.CreateAssistantKnowledgeRequest, 2) as dependency_7.assistant_api.CreateAssistantKnowledgeRequest[];
        }
        set assistantKnowledges(value: dependency_7.assistant_api.CreateAssistantKnowledgeRequest[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get assistantTools() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.assistant_api.CreateAssistantToolRequest, 3) as dependency_4.assistant_api.CreateAssistantToolRequest[];
        }
        set assistantTools(value: dependency_4.assistant_api.CreateAssistantToolRequest[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get visibility() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set visibility(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get language() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set language(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get source() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set source(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get sourceIdentifier() {
            return pb_1.Message.getFieldWithDefault(this, 8, "0") as string;
        }
        set sourceIdentifier(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        get tags() {
            return pb_1.Message.getFieldWithDefault(this, 9, []) as string[];
        }
        set tags(value: string[]) {
            pb_1.Message.setField(this, 9, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 10, value);
        }
        static fromObject(data: {
            assistantProviderModel?: ReturnType<typeof CreateAssistantProviderModelRequest.prototype.toObject>;
            assistantKnowledges?: ReturnType<typeof dependency_7.assistant_api.CreateAssistantKnowledgeRequest.prototype.toObject>[];
            assistantTools?: ReturnType<typeof dependency_4.assistant_api.CreateAssistantToolRequest.prototype.toObject>[];
            description?: string;
            visibility?: string;
            language?: string;
            source?: string;
            sourceIdentifier?: string;
            tags?: string[];
            name?: string;
        }): CreateAssistantRequest {
            const message = new CreateAssistantRequest({});
            if (data.assistantProviderModel != null) {
                message.assistantProviderModel = CreateAssistantProviderModelRequest.fromObject(data.assistantProviderModel);
            }
            if (data.assistantKnowledges != null) {
                message.assistantKnowledges = data.assistantKnowledges.map(item => dependency_7.assistant_api.CreateAssistantKnowledgeRequest.fromObject(item));
            }
            if (data.assistantTools != null) {
                message.assistantTools = data.assistantTools.map(item => dependency_4.assistant_api.CreateAssistantToolRequest.fromObject(item));
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.visibility != null) {
                message.visibility = data.visibility;
            }
            if (data.language != null) {
                message.language = data.language;
            }
            if (data.source != null) {
                message.source = data.source;
            }
            if (data.sourceIdentifier != null) {
                message.sourceIdentifier = data.sourceIdentifier;
            }
            if (data.tags != null) {
                message.tags = data.tags;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            return message;
        }
        toObject() {
            const data: {
                assistantProviderModel?: ReturnType<typeof CreateAssistantProviderModelRequest.prototype.toObject>;
                assistantKnowledges?: ReturnType<typeof dependency_7.assistant_api.CreateAssistantKnowledgeRequest.prototype.toObject>[];
                assistantTools?: ReturnType<typeof dependency_4.assistant_api.CreateAssistantToolRequest.prototype.toObject>[];
                description?: string;
                visibility?: string;
                language?: string;
                source?: string;
                sourceIdentifier?: string;
                tags?: string[];
                name?: string;
            } = {};
            if (this.assistantProviderModel != null) {
                data.assistantProviderModel = this.assistantProviderModel.toObject();
            }
            if (this.assistantKnowledges != null) {
                data.assistantKnowledges = this.assistantKnowledges.map((item: dependency_7.assistant_api.CreateAssistantKnowledgeRequest) => item.toObject());
            }
            if (this.assistantTools != null) {
                data.assistantTools = this.assistantTools.map((item: dependency_4.assistant_api.CreateAssistantToolRequest) => item.toObject());
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.visibility != null) {
                data.visibility = this.visibility;
            }
            if (this.language != null) {
                data.language = this.language;
            }
            if (this.source != null) {
                data.source = this.source;
            }
            if (this.sourceIdentifier != null) {
                data.sourceIdentifier = this.sourceIdentifier;
            }
            if (this.tags != null) {
                data.tags = this.tags;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_assistantProviderModel)
                writer.writeMessage(1, this.assistantProviderModel, () => this.assistantProviderModel.serialize(writer));
            if (this.assistantKnowledges.length)
                writer.writeRepeatedMessage(2, this.assistantKnowledges, (item: dependency_7.assistant_api.CreateAssistantKnowledgeRequest) => item.serialize(writer));
            if (this.assistantTools.length)
                writer.writeRepeatedMessage(3, this.assistantTools, (item: dependency_4.assistant_api.CreateAssistantToolRequest) => item.serialize(writer));
            if (this.description.length)
                writer.writeString(4, this.description);
            if (this.visibility.length)
                writer.writeString(5, this.visibility);
            if (this.language.length)
                writer.writeString(6, this.language);
            if (this.source.length)
                writer.writeString(7, this.source);
            if (this.sourceIdentifier != "0")
                writer.writeUint64String(8, this.sourceIdentifier);
            if (this.tags.length)
                writer.writeRepeatedString(9, this.tags);
            if (this.name.length)
                writer.writeString(10, this.name);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateAssistantRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateAssistantRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.assistantProviderModel, () => message.assistantProviderModel = CreateAssistantProviderModelRequest.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.assistantKnowledges, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_7.assistant_api.CreateAssistantKnowledgeRequest.deserialize(reader), dependency_7.assistant_api.CreateAssistantKnowledgeRequest));
                        break;
                    case 3:
                        reader.readMessage(message.assistantTools, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_4.assistant_api.CreateAssistantToolRequest.deserialize(reader), dependency_4.assistant_api.CreateAssistantToolRequest));
                        break;
                    case 4:
                        message.description = reader.readString();
                        break;
                    case 5:
                        message.visibility = reader.readString();
                        break;
                    case 6:
                        message.language = reader.readString();
                        break;
                    case 7:
                        message.source = reader.readString();
                        break;
                    case 8:
                        message.sourceIdentifier = reader.readUint64String();
                        break;
                    case 9:
                        pb_1.Message.addToRepeatedField(message, 9, reader.readString());
                        break;
                    case 10:
                        message.name = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateAssistantRequest {
            return CreateAssistantRequest.deserialize(bytes);
        }
    }
    export class CreateAssistantProviderModelRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            assistantId?: string;
            description?: string;
            template?: dependency_2.TextChatCompletePrompt;
            modelProviderId?: string;
            modelProviderName?: string;
            assistantModelOptions?: dependency_2.Metadata[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [8], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
                if ("template" in data && data.template != undefined) {
                    this.template = data.template;
                }
                if ("modelProviderId" in data && data.modelProviderId != undefined) {
                    this.modelProviderId = data.modelProviderId;
                }
                if ("modelProviderName" in data && data.modelProviderName != undefined) {
                    this.modelProviderName = data.modelProviderName;
                }
                if ("assistantModelOptions" in data && data.assistantModelOptions != undefined) {
                    this.assistantModelOptions = data.assistantModelOptions;
                }
            }
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get template() {
            return pb_1.Message.getWrapperField(this, dependency_2.TextChatCompletePrompt, 3) as dependency_2.TextChatCompletePrompt;
        }
        set template(value: dependency_2.TextChatCompletePrompt) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_template() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get modelProviderId() {
            return pb_1.Message.getFieldWithDefault(this, 6, "0") as string;
        }
        set modelProviderId(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get modelProviderName() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set modelProviderName(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get assistantModelOptions() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Metadata, 8) as dependency_2.Metadata[];
        }
        set assistantModelOptions(value: dependency_2.Metadata[]) {
            pb_1.Message.setRepeatedWrapperField(this, 8, value);
        }
        static fromObject(data: {
            assistantId?: string;
            description?: string;
            template?: ReturnType<typeof dependency_2.TextChatCompletePrompt.prototype.toObject>;
            modelProviderId?: string;
            modelProviderName?: string;
            assistantModelOptions?: ReturnType<typeof dependency_2.Metadata.prototype.toObject>[];
        }): CreateAssistantProviderModelRequest {
            const message = new CreateAssistantProviderModelRequest({});
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            if (data.template != null) {
                message.template = dependency_2.TextChatCompletePrompt.fromObject(data.template);
            }
            if (data.modelProviderId != null) {
                message.modelProviderId = data.modelProviderId;
            }
            if (data.modelProviderName != null) {
                message.modelProviderName = data.modelProviderName;
            }
            if (data.assistantModelOptions != null) {
                message.assistantModelOptions = data.assistantModelOptions.map(item => dependency_2.Metadata.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                assistantId?: string;
                description?: string;
                template?: ReturnType<typeof dependency_2.TextChatCompletePrompt.prototype.toObject>;
                modelProviderId?: string;
                modelProviderName?: string;
                assistantModelOptions?: ReturnType<typeof dependency_2.Metadata.prototype.toObject>[];
            } = {};
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            if (this.template != null) {
                data.template = this.template.toObject();
            }
            if (this.modelProviderId != null) {
                data.modelProviderId = this.modelProviderId;
            }
            if (this.modelProviderName != null) {
                data.modelProviderName = this.modelProviderName;
            }
            if (this.assistantModelOptions != null) {
                data.assistantModelOptions = this.assistantModelOptions.map((item: dependency_2.Metadata) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.assistantId != "0")
                writer.writeUint64String(1, this.assistantId);
            if (this.description.length)
                writer.writeString(2, this.description);
            if (this.has_template)
                writer.writeMessage(3, this.template, () => this.template.serialize(writer));
            if (this.modelProviderId != "0")
                writer.writeUint64String(6, this.modelProviderId);
            if (this.modelProviderName.length)
                writer.writeString(7, this.modelProviderName);
            if (this.assistantModelOptions.length)
                writer.writeRepeatedMessage(8, this.assistantModelOptions, (item: dependency_2.Metadata) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateAssistantProviderModelRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateAssistantProviderModelRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 2:
                        message.description = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.template, () => message.template = dependency_2.TextChatCompletePrompt.deserialize(reader));
                        break;
                    case 6:
                        message.modelProviderId = reader.readUint64String();
                        break;
                    case 7:
                        message.modelProviderName = reader.readString();
                        break;
                    case 8:
                        reader.readMessage(message.assistantModelOptions, () => pb_1.Message.addToRepeatedWrapperField(message, 8, dependency_2.Metadata.deserialize(reader), dependency_2.Metadata));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateAssistantProviderModelRequest {
            return CreateAssistantProviderModelRequest.deserialize(bytes);
        }
    }
    export class GetAssistantProviderModelResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: AssistantProviderModel;
            error?: dependency_2.Error;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, AssistantProviderModel, 3) as AssistantProviderModel;
        }
        set data(value: AssistantProviderModel) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof AssistantProviderModel.prototype.toObject>;
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
        }): GetAssistantProviderModelResponse {
            const message = new GetAssistantProviderModelResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = AssistantProviderModel.fromObject(data.data);
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof AssistantProviderModel.prototype.toObject>;
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.has_data)
                writer.writeMessage(3, this.data, () => this.data.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantProviderModelResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantProviderModelResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => message.data = AssistantProviderModel.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantProviderModelResponse {
            return GetAssistantProviderModelResponse.deserialize(bytes);
        }
    }
    export class CreateAssistantTagRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            assistantId?: string;
            tags?: string[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("tags" in data && data.tags != undefined) {
                    this.tags = data.tags;
                }
            }
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get tags() {
            return pb_1.Message.getFieldWithDefault(this, 2, []) as string[];
        }
        set tags(value: string[]) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            assistantId?: string;
            tags?: string[];
        }): CreateAssistantTagRequest {
            const message = new CreateAssistantTagRequest({});
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.tags != null) {
                message.tags = data.tags;
            }
            return message;
        }
        toObject() {
            const data: {
                assistantId?: string;
                tags?: string[];
            } = {};
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.tags != null) {
                data.tags = this.tags;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.assistantId != "0")
                writer.writeUint64String(1, this.assistantId);
            if (this.tags.length)
                writer.writeRepeatedString(2, this.tags);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateAssistantTagRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateAssistantTagRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readString());
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateAssistantTagRequest {
            return CreateAssistantTagRequest.deserialize(bytes);
        }
    }
    export class GetAssistantRequest extends pb_1.Message {
        #one_of_decls: number[][] = [[4]];
        constructor(data?: any[] | ({
            id?: string;
        } & (({
            assistantProviderModelId?: string;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("assistantProviderModelId" in data && data.assistantProviderModelId != undefined) {
                    this.assistantProviderModelId = data.assistantProviderModelId;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get assistantProviderModelId() {
            return pb_1.Message.getFieldWithDefault(this, 4, "0") as string;
        }
        set assistantProviderModelId(value: string) {
            pb_1.Message.setOneofField(this, 4, this.#one_of_decls[0], value);
        }
        get has_assistantProviderModelId() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get _assistantProviderModelId() {
            const cases: {
                [index: number]: "none" | "assistantProviderModelId";
            } = {
                0: "none",
                4: "assistantProviderModelId"
            };
            return cases[pb_1.Message.computeOneofCase(this, [4])];
        }
        static fromObject(data: {
            id?: string;
            assistantProviderModelId?: string;
        }): GetAssistantRequest {
            const message = new GetAssistantRequest({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.assistantProviderModelId != null) {
                message.assistantProviderModelId = data.assistantProviderModelId;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                assistantProviderModelId?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.assistantProviderModelId != null) {
                data.assistantProviderModelId = this.assistantProviderModelId;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != "0")
                writer.writeUint64String(1, this.id);
            if (this.has_assistantProviderModelId)
                writer.writeUint64String(4, this.assistantProviderModelId);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64String();
                        break;
                    case 4:
                        message.assistantProviderModelId = reader.readUint64String();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantRequest {
            return GetAssistantRequest.deserialize(bytes);
        }
    }
    export class DeleteAssistantRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            id?: string;
        }): DeleteAssistantRequest {
            const message = new DeleteAssistantRequest({});
            if (data.id != null) {
                message.id = data.id;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != "0")
                writer.writeUint64String(1, this.id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeleteAssistantRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeleteAssistantRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64String();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DeleteAssistantRequest {
            return DeleteAssistantRequest.deserialize(bytes);
        }
    }
    export class GetAssistantResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: Assistant;
            error?: dependency_2.Error;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, Assistant, 3) as Assistant;
        }
        set data(value: Assistant) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof Assistant.prototype.toObject>;
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
        }): GetAssistantResponse {
            const message = new GetAssistantResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = Assistant.fromObject(data.data);
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof Assistant.prototype.toObject>;
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.has_data)
                writer.writeMessage(3, this.data, () => this.data.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => message.data = Assistant.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantResponse {
            return GetAssistantResponse.deserialize(bytes);
        }
    }
    export class GetAllAssistantRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            paginate?: dependency_2.Paginate;
            criterias?: dependency_2.Criteria[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("paginate" in data && data.paginate != undefined) {
                    this.paginate = data.paginate;
                }
                if ("criterias" in data && data.criterias != undefined) {
                    this.criterias = data.criterias;
                }
            }
        }
        get paginate() {
            return pb_1.Message.getWrapperField(this, dependency_2.Paginate, 1) as dependency_2.Paginate;
        }
        set paginate(value: dependency_2.Paginate) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_paginate() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get criterias() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Criteria, 2) as dependency_2.Criteria[];
        }
        set criterias(value: dependency_2.Criteria[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        static fromObject(data: {
            paginate?: ReturnType<typeof dependency_2.Paginate.prototype.toObject>;
            criterias?: ReturnType<typeof dependency_2.Criteria.prototype.toObject>[];
        }): GetAllAssistantRequest {
            const message = new GetAllAssistantRequest({});
            if (data.paginate != null) {
                message.paginate = dependency_2.Paginate.fromObject(data.paginate);
            }
            if (data.criterias != null) {
                message.criterias = data.criterias.map(item => dependency_2.Criteria.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                paginate?: ReturnType<typeof dependency_2.Paginate.prototype.toObject>;
                criterias?: ReturnType<typeof dependency_2.Criteria.prototype.toObject>[];
            } = {};
            if (this.paginate != null) {
                data.paginate = this.paginate.toObject();
            }
            if (this.criterias != null) {
                data.criterias = this.criterias.map((item: dependency_2.Criteria) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_paginate)
                writer.writeMessage(1, this.paginate, () => this.paginate.serialize(writer));
            if (this.criterias.length)
                writer.writeRepeatedMessage(2, this.criterias, (item: dependency_2.Criteria) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllAssistantRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllAssistantRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.paginate, () => message.paginate = dependency_2.Paginate.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.criterias, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_2.Criteria.deserialize(reader), dependency_2.Criteria));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllAssistantRequest {
            return GetAllAssistantRequest.deserialize(bytes);
        }
    }
    export class GetAllAssistantResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: Assistant[];
            error?: dependency_2.Error;
            paginated?: dependency_2.Paginated;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
                if ("paginated" in data && data.paginated != undefined) {
                    this.paginated = data.paginated;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getRepeatedWrapperField(this, Assistant, 3) as Assistant[];
        }
        set data(value: Assistant[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get paginated() {
            return pb_1.Message.getWrapperField(this, dependency_2.Paginated, 5) as dependency_2.Paginated;
        }
        set paginated(value: dependency_2.Paginated) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_paginated() {
            return pb_1.Message.getField(this, 5) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof Assistant.prototype.toObject>[];
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            paginated?: ReturnType<typeof dependency_2.Paginated.prototype.toObject>;
        }): GetAllAssistantResponse {
            const message = new GetAllAssistantResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = data.data.map(item => Assistant.fromObject(item));
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            if (data.paginated != null) {
                message.paginated = dependency_2.Paginated.fromObject(data.paginated);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof Assistant.prototype.toObject>[];
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
                paginated?: ReturnType<typeof dependency_2.Paginated.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.map((item: Assistant) => item.toObject());
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            if (this.paginated != null) {
                data.paginated = this.paginated.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.data.length)
                writer.writeRepeatedMessage(3, this.data, (item: Assistant) => item.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (this.has_paginated)
                writer.writeMessage(5, this.paginated, () => this.paginated.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllAssistantResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllAssistantResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => pb_1.Message.addToRepeatedWrapperField(message, 3, Assistant.deserialize(reader), Assistant));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.paginated, () => message.paginated = dependency_2.Paginated.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllAssistantResponse {
            return GetAllAssistantResponse.deserialize(bytes);
        }
    }
    export class GetAllAssistantProviderModelRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            paginate?: dependency_2.Paginate;
            criterias?: dependency_2.Criteria[];
            assistantId?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("paginate" in data && data.paginate != undefined) {
                    this.paginate = data.paginate;
                }
                if ("criterias" in data && data.criterias != undefined) {
                    this.criterias = data.criterias;
                }
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
            }
        }
        get paginate() {
            return pb_1.Message.getWrapperField(this, dependency_2.Paginate, 1) as dependency_2.Paginate;
        }
        set paginate(value: dependency_2.Paginate) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_paginate() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get criterias() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Criteria, 2) as dependency_2.Criteria[];
        }
        set criterias(value: dependency_2.Criteria[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 5, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        static fromObject(data: {
            paginate?: ReturnType<typeof dependency_2.Paginate.prototype.toObject>;
            criterias?: ReturnType<typeof dependency_2.Criteria.prototype.toObject>[];
            assistantId?: string;
        }): GetAllAssistantProviderModelRequest {
            const message = new GetAllAssistantProviderModelRequest({});
            if (data.paginate != null) {
                message.paginate = dependency_2.Paginate.fromObject(data.paginate);
            }
            if (data.criterias != null) {
                message.criterias = data.criterias.map(item => dependency_2.Criteria.fromObject(item));
            }
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            return message;
        }
        toObject() {
            const data: {
                paginate?: ReturnType<typeof dependency_2.Paginate.prototype.toObject>;
                criterias?: ReturnType<typeof dependency_2.Criteria.prototype.toObject>[];
                assistantId?: string;
            } = {};
            if (this.paginate != null) {
                data.paginate = this.paginate.toObject();
            }
            if (this.criterias != null) {
                data.criterias = this.criterias.map((item: dependency_2.Criteria) => item.toObject());
            }
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_paginate)
                writer.writeMessage(1, this.paginate, () => this.paginate.serialize(writer));
            if (this.criterias.length)
                writer.writeRepeatedMessage(2, this.criterias, (item: dependency_2.Criteria) => item.serialize(writer));
            if (this.assistantId != "0")
                writer.writeUint64String(5, this.assistantId);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllAssistantProviderModelRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllAssistantProviderModelRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.paginate, () => message.paginate = dependency_2.Paginate.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.criterias, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_2.Criteria.deserialize(reader), dependency_2.Criteria));
                        break;
                    case 5:
                        message.assistantId = reader.readUint64String();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllAssistantProviderModelRequest {
            return GetAllAssistantProviderModelRequest.deserialize(bytes);
        }
    }
    export class GetAllAssistantProviderModelResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: AssistantProviderModel[];
            error?: dependency_2.Error;
            paginated?: dependency_2.Paginated;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
                if ("paginated" in data && data.paginated != undefined) {
                    this.paginated = data.paginated;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getRepeatedWrapperField(this, AssistantProviderModel, 3) as AssistantProviderModel[];
        }
        set data(value: AssistantProviderModel[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get paginated() {
            return pb_1.Message.getWrapperField(this, dependency_2.Paginated, 5) as dependency_2.Paginated;
        }
        set paginated(value: dependency_2.Paginated) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_paginated() {
            return pb_1.Message.getField(this, 5) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof AssistantProviderModel.prototype.toObject>[];
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            paginated?: ReturnType<typeof dependency_2.Paginated.prototype.toObject>;
        }): GetAllAssistantProviderModelResponse {
            const message = new GetAllAssistantProviderModelResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = data.data.map(item => AssistantProviderModel.fromObject(item));
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            if (data.paginated != null) {
                message.paginated = dependency_2.Paginated.fromObject(data.paginated);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof AssistantProviderModel.prototype.toObject>[];
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
                paginated?: ReturnType<typeof dependency_2.Paginated.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.map((item: AssistantProviderModel) => item.toObject());
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            if (this.paginated != null) {
                data.paginated = this.paginated.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.data.length)
                writer.writeRepeatedMessage(3, this.data, (item: AssistantProviderModel) => item.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (this.has_paginated)
                writer.writeMessage(5, this.paginated, () => this.paginated.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllAssistantProviderModelResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllAssistantProviderModelResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => pb_1.Message.addToRepeatedWrapperField(message, 3, AssistantProviderModel.deserialize(reader), AssistantProviderModel));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.paginated, () => message.paginated = dependency_2.Paginated.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllAssistantProviderModelResponse {
            return GetAllAssistantProviderModelResponse.deserialize(bytes);
        }
    }
    export class GetAllAssistantMessageRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            paginate?: dependency_2.Paginate;
            criterias?: dependency_2.Criteria[];
            assistantId?: string;
            order?: dependency_2.Ordering;
            selectors?: dependency_2.FieldSelector[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2, 6], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("paginate" in data && data.paginate != undefined) {
                    this.paginate = data.paginate;
                }
                if ("criterias" in data && data.criterias != undefined) {
                    this.criterias = data.criterias;
                }
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("order" in data && data.order != undefined) {
                    this.order = data.order;
                }
                if ("selectors" in data && data.selectors != undefined) {
                    this.selectors = data.selectors;
                }
            }
        }
        get paginate() {
            return pb_1.Message.getWrapperField(this, dependency_2.Paginate, 1) as dependency_2.Paginate;
        }
        set paginate(value: dependency_2.Paginate) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_paginate() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get criterias() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Criteria, 2) as dependency_2.Criteria[];
        }
        set criterias(value: dependency_2.Criteria[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 3, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get order() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ordering, 5) as dependency_2.Ordering;
        }
        set order(value: dependency_2.Ordering) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_order() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get selectors() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.FieldSelector, 6) as dependency_2.FieldSelector[];
        }
        set selectors(value: dependency_2.FieldSelector[]) {
            pb_1.Message.setRepeatedWrapperField(this, 6, value);
        }
        static fromObject(data: {
            paginate?: ReturnType<typeof dependency_2.Paginate.prototype.toObject>;
            criterias?: ReturnType<typeof dependency_2.Criteria.prototype.toObject>[];
            assistantId?: string;
            order?: ReturnType<typeof dependency_2.Ordering.prototype.toObject>;
            selectors?: ReturnType<typeof dependency_2.FieldSelector.prototype.toObject>[];
        }): GetAllAssistantMessageRequest {
            const message = new GetAllAssistantMessageRequest({});
            if (data.paginate != null) {
                message.paginate = dependency_2.Paginate.fromObject(data.paginate);
            }
            if (data.criterias != null) {
                message.criterias = data.criterias.map(item => dependency_2.Criteria.fromObject(item));
            }
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.order != null) {
                message.order = dependency_2.Ordering.fromObject(data.order);
            }
            if (data.selectors != null) {
                message.selectors = data.selectors.map(item => dependency_2.FieldSelector.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                paginate?: ReturnType<typeof dependency_2.Paginate.prototype.toObject>;
                criterias?: ReturnType<typeof dependency_2.Criteria.prototype.toObject>[];
                assistantId?: string;
                order?: ReturnType<typeof dependency_2.Ordering.prototype.toObject>;
                selectors?: ReturnType<typeof dependency_2.FieldSelector.prototype.toObject>[];
            } = {};
            if (this.paginate != null) {
                data.paginate = this.paginate.toObject();
            }
            if (this.criterias != null) {
                data.criterias = this.criterias.map((item: dependency_2.Criteria) => item.toObject());
            }
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.order != null) {
                data.order = this.order.toObject();
            }
            if (this.selectors != null) {
                data.selectors = this.selectors.map((item: dependency_2.FieldSelector) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_paginate)
                writer.writeMessage(1, this.paginate, () => this.paginate.serialize(writer));
            if (this.criterias.length)
                writer.writeRepeatedMessage(2, this.criterias, (item: dependency_2.Criteria) => item.serialize(writer));
            if (this.assistantId != "0")
                writer.writeUint64String(3, this.assistantId);
            if (this.has_order)
                writer.writeMessage(5, this.order, () => this.order.serialize(writer));
            if (this.selectors.length)
                writer.writeRepeatedMessage(6, this.selectors, (item: dependency_2.FieldSelector) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllAssistantMessageRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllAssistantMessageRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.paginate, () => message.paginate = dependency_2.Paginate.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.criterias, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_2.Criteria.deserialize(reader), dependency_2.Criteria));
                        break;
                    case 3:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 5:
                        reader.readMessage(message.order, () => message.order = dependency_2.Ordering.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.selectors, () => pb_1.Message.addToRepeatedWrapperField(message, 6, dependency_2.FieldSelector.deserialize(reader), dependency_2.FieldSelector));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllAssistantMessageRequest {
            return GetAllAssistantMessageRequest.deserialize(bytes);
        }
    }
    export class GetAllAssistantMessageResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: dependency_2.AssistantConversationMessage[];
            error?: dependency_2.Error;
            paginated?: dependency_2.Paginated;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
                if ("paginated" in data && data.paginated != undefined) {
                    this.paginated = data.paginated;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.AssistantConversationMessage, 3) as dependency_2.AssistantConversationMessage[];
        }
        set data(value: dependency_2.AssistantConversationMessage[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get paginated() {
            return pb_1.Message.getWrapperField(this, dependency_2.Paginated, 5) as dependency_2.Paginated;
        }
        set paginated(value: dependency_2.Paginated) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_paginated() {
            return pb_1.Message.getField(this, 5) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof dependency_2.AssistantConversationMessage.prototype.toObject>[];
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            paginated?: ReturnType<typeof dependency_2.Paginated.prototype.toObject>;
        }): GetAllAssistantMessageResponse {
            const message = new GetAllAssistantMessageResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = data.data.map(item => dependency_2.AssistantConversationMessage.fromObject(item));
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            if (data.paginated != null) {
                message.paginated = dependency_2.Paginated.fromObject(data.paginated);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof dependency_2.AssistantConversationMessage.prototype.toObject>[];
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
                paginated?: ReturnType<typeof dependency_2.Paginated.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.map((item: dependency_2.AssistantConversationMessage) => item.toObject());
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            if (this.paginated != null) {
                data.paginated = this.paginated.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.data.length)
                writer.writeRepeatedMessage(3, this.data, (item: dependency_2.AssistantConversationMessage) => item.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (this.has_paginated)
                writer.writeMessage(5, this.paginated, () => this.paginated.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllAssistantMessageResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllAssistantMessageResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_2.AssistantConversationMessage.deserialize(reader), dependency_2.AssistantConversationMessage));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.paginated, () => message.paginated = dependency_2.Paginated.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllAssistantMessageResponse {
            return GetAllAssistantMessageResponse.deserialize(bytes);
        }
    }
    export class GetAllMessageRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            paginate?: dependency_2.Paginate;
            criterias?: dependency_2.Criteria[];
            order?: dependency_2.Ordering;
            selectors?: dependency_2.FieldSelector[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2, 6], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("paginate" in data && data.paginate != undefined) {
                    this.paginate = data.paginate;
                }
                if ("criterias" in data && data.criterias != undefined) {
                    this.criterias = data.criterias;
                }
                if ("order" in data && data.order != undefined) {
                    this.order = data.order;
                }
                if ("selectors" in data && data.selectors != undefined) {
                    this.selectors = data.selectors;
                }
            }
        }
        get paginate() {
            return pb_1.Message.getWrapperField(this, dependency_2.Paginate, 1) as dependency_2.Paginate;
        }
        set paginate(value: dependency_2.Paginate) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_paginate() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get criterias() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Criteria, 2) as dependency_2.Criteria[];
        }
        set criterias(value: dependency_2.Criteria[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get order() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ordering, 5) as dependency_2.Ordering;
        }
        set order(value: dependency_2.Ordering) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_order() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get selectors() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.FieldSelector, 6) as dependency_2.FieldSelector[];
        }
        set selectors(value: dependency_2.FieldSelector[]) {
            pb_1.Message.setRepeatedWrapperField(this, 6, value);
        }
        static fromObject(data: {
            paginate?: ReturnType<typeof dependency_2.Paginate.prototype.toObject>;
            criterias?: ReturnType<typeof dependency_2.Criteria.prototype.toObject>[];
            order?: ReturnType<typeof dependency_2.Ordering.prototype.toObject>;
            selectors?: ReturnType<typeof dependency_2.FieldSelector.prototype.toObject>[];
        }): GetAllMessageRequest {
            const message = new GetAllMessageRequest({});
            if (data.paginate != null) {
                message.paginate = dependency_2.Paginate.fromObject(data.paginate);
            }
            if (data.criterias != null) {
                message.criterias = data.criterias.map(item => dependency_2.Criteria.fromObject(item));
            }
            if (data.order != null) {
                message.order = dependency_2.Ordering.fromObject(data.order);
            }
            if (data.selectors != null) {
                message.selectors = data.selectors.map(item => dependency_2.FieldSelector.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                paginate?: ReturnType<typeof dependency_2.Paginate.prototype.toObject>;
                criterias?: ReturnType<typeof dependency_2.Criteria.prototype.toObject>[];
                order?: ReturnType<typeof dependency_2.Ordering.prototype.toObject>;
                selectors?: ReturnType<typeof dependency_2.FieldSelector.prototype.toObject>[];
            } = {};
            if (this.paginate != null) {
                data.paginate = this.paginate.toObject();
            }
            if (this.criterias != null) {
                data.criterias = this.criterias.map((item: dependency_2.Criteria) => item.toObject());
            }
            if (this.order != null) {
                data.order = this.order.toObject();
            }
            if (this.selectors != null) {
                data.selectors = this.selectors.map((item: dependency_2.FieldSelector) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_paginate)
                writer.writeMessage(1, this.paginate, () => this.paginate.serialize(writer));
            if (this.criterias.length)
                writer.writeRepeatedMessage(2, this.criterias, (item: dependency_2.Criteria) => item.serialize(writer));
            if (this.has_order)
                writer.writeMessage(5, this.order, () => this.order.serialize(writer));
            if (this.selectors.length)
                writer.writeRepeatedMessage(6, this.selectors, (item: dependency_2.FieldSelector) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllMessageRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllMessageRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.paginate, () => message.paginate = dependency_2.Paginate.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.criterias, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_2.Criteria.deserialize(reader), dependency_2.Criteria));
                        break;
                    case 5:
                        reader.readMessage(message.order, () => message.order = dependency_2.Ordering.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.selectors, () => pb_1.Message.addToRepeatedWrapperField(message, 6, dependency_2.FieldSelector.deserialize(reader), dependency_2.FieldSelector));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllMessageRequest {
            return GetAllMessageRequest.deserialize(bytes);
        }
    }
    export class GetAllMessageResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: dependency_2.AssistantConversationMessage[];
            error?: dependency_2.Error;
            paginated?: dependency_2.Paginated;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
                if ("paginated" in data && data.paginated != undefined) {
                    this.paginated = data.paginated;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.AssistantConversationMessage, 3) as dependency_2.AssistantConversationMessage[];
        }
        set data(value: dependency_2.AssistantConversationMessage[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get paginated() {
            return pb_1.Message.getWrapperField(this, dependency_2.Paginated, 5) as dependency_2.Paginated;
        }
        set paginated(value: dependency_2.Paginated) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_paginated() {
            return pb_1.Message.getField(this, 5) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof dependency_2.AssistantConversationMessage.prototype.toObject>[];
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            paginated?: ReturnType<typeof dependency_2.Paginated.prototype.toObject>;
        }): GetAllMessageResponse {
            const message = new GetAllMessageResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = data.data.map(item => dependency_2.AssistantConversationMessage.fromObject(item));
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            if (data.paginated != null) {
                message.paginated = dependency_2.Paginated.fromObject(data.paginated);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof dependency_2.AssistantConversationMessage.prototype.toObject>[];
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
                paginated?: ReturnType<typeof dependency_2.Paginated.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.map((item: dependency_2.AssistantConversationMessage) => item.toObject());
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            if (this.paginated != null) {
                data.paginated = this.paginated.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.data.length)
                writer.writeRepeatedMessage(3, this.data, (item: dependency_2.AssistantConversationMessage) => item.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (this.has_paginated)
                writer.writeMessage(5, this.paginated, () => this.paginated.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllMessageResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllMessageResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_2.AssistantConversationMessage.deserialize(reader), dependency_2.AssistantConversationMessage));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.paginated, () => message.paginated = dependency_2.Paginated.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllMessageResponse {
            return GetAllMessageResponse.deserialize(bytes);
        }
    }
    export class UpdateAssistantVersionRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            assistantId?: string;
            assistantProviderModelId?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("assistantProviderModelId" in data && data.assistantProviderModelId != undefined) {
                    this.assistantProviderModelId = data.assistantProviderModelId;
                }
            }
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get assistantProviderModelId() {
            return pb_1.Message.getFieldWithDefault(this, 2, "0") as string;
        }
        set assistantProviderModelId(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            assistantId?: string;
            assistantProviderModelId?: string;
        }): UpdateAssistantVersionRequest {
            const message = new UpdateAssistantVersionRequest({});
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.assistantProviderModelId != null) {
                message.assistantProviderModelId = data.assistantProviderModelId;
            }
            return message;
        }
        toObject() {
            const data: {
                assistantId?: string;
                assistantProviderModelId?: string;
            } = {};
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.assistantProviderModelId != null) {
                data.assistantProviderModelId = this.assistantProviderModelId;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.assistantId != "0")
                writer.writeUint64String(1, this.assistantId);
            if (this.assistantProviderModelId != "0")
                writer.writeUint64String(2, this.assistantProviderModelId);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UpdateAssistantVersionRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpdateAssistantVersionRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 2:
                        message.assistantProviderModelId = reader.readUint64String();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UpdateAssistantVersionRequest {
            return UpdateAssistantVersionRequest.deserialize(bytes);
        }
    }
    export class UpdateAssistantDetailRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            assistantId?: string;
            name?: string;
            description?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("description" in data && data.description != undefined) {
                    this.description = data.description;
                }
            }
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get description() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set description(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            assistantId?: string;
            name?: string;
            description?: string;
        }): UpdateAssistantDetailRequest {
            const message = new UpdateAssistantDetailRequest({});
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.description != null) {
                message.description = data.description;
            }
            return message;
        }
        toObject() {
            const data: {
                assistantId?: string;
                name?: string;
                description?: string;
            } = {};
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.description != null) {
                data.description = this.description;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.assistantId != "0")
                writer.writeUint64String(1, this.assistantId);
            if (this.name.length)
                writer.writeString(2, this.name);
            if (this.description.length)
                writer.writeString(3, this.description);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UpdateAssistantDetailRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UpdateAssistantDetailRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 2:
                        message.name = reader.readString();
                        break;
                    case 3:
                        message.description = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): UpdateAssistantDetailRequest {
            return UpdateAssistantDetailRequest.deserialize(bytes);
        }
    }
    export class GetAllAssistantUserConversationRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            assistantId?: string;
            paginate?: dependency_2.Paginate;
            criterias?: dependency_2.Criteria[];
            source?: dependency_2.Source;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("paginate" in data && data.paginate != undefined) {
                    this.paginate = data.paginate;
                }
                if ("criterias" in data && data.criterias != undefined) {
                    this.criterias = data.criterias;
                }
                if ("source" in data && data.source != undefined) {
                    this.source = data.source;
                }
            }
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get paginate() {
            return pb_1.Message.getWrapperField(this, dependency_2.Paginate, 2) as dependency_2.Paginate;
        }
        set paginate(value: dependency_2.Paginate) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_paginate() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get criterias() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Criteria, 3) as dependency_2.Criteria[];
        }
        set criterias(value: dependency_2.Criteria[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get source() {
            return pb_1.Message.getFieldWithDefault(this, 7, dependency_2.Source.WEB_PLUGIN) as dependency_2.Source;
        }
        set source(value: dependency_2.Source) {
            pb_1.Message.setField(this, 7, value);
        }
        static fromObject(data: {
            assistantId?: string;
            paginate?: ReturnType<typeof dependency_2.Paginate.prototype.toObject>;
            criterias?: ReturnType<typeof dependency_2.Criteria.prototype.toObject>[];
            source?: dependency_2.Source;
        }): GetAllAssistantUserConversationRequest {
            const message = new GetAllAssistantUserConversationRequest({});
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.paginate != null) {
                message.paginate = dependency_2.Paginate.fromObject(data.paginate);
            }
            if (data.criterias != null) {
                message.criterias = data.criterias.map(item => dependency_2.Criteria.fromObject(item));
            }
            if (data.source != null) {
                message.source = data.source;
            }
            return message;
        }
        toObject() {
            const data: {
                assistantId?: string;
                paginate?: ReturnType<typeof dependency_2.Paginate.prototype.toObject>;
                criterias?: ReturnType<typeof dependency_2.Criteria.prototype.toObject>[];
                source?: dependency_2.Source;
            } = {};
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.paginate != null) {
                data.paginate = this.paginate.toObject();
            }
            if (this.criterias != null) {
                data.criterias = this.criterias.map((item: dependency_2.Criteria) => item.toObject());
            }
            if (this.source != null) {
                data.source = this.source;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.assistantId != "0")
                writer.writeUint64String(1, this.assistantId);
            if (this.has_paginate)
                writer.writeMessage(2, this.paginate, () => this.paginate.serialize(writer));
            if (this.criterias.length)
                writer.writeRepeatedMessage(3, this.criterias, (item: dependency_2.Criteria) => item.serialize(writer));
            if (this.source != dependency_2.Source.WEB_PLUGIN)
                writer.writeEnum(7, this.source);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllAssistantUserConversationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllAssistantUserConversationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 2:
                        reader.readMessage(message.paginate, () => message.paginate = dependency_2.Paginate.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.criterias, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_2.Criteria.deserialize(reader), dependency_2.Criteria));
                        break;
                    case 7:
                        message.source = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllAssistantUserConversationRequest {
            return GetAllAssistantUserConversationRequest.deserialize(bytes);
        }
    }
    export class GetAllAssistantUserConversationResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: dependency_2.AssistantConversation[];
            error?: dependency_2.Error;
            paginated?: dependency_2.Paginated;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
                if ("paginated" in data && data.paginated != undefined) {
                    this.paginated = data.paginated;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.AssistantConversation, 3) as dependency_2.AssistantConversation[];
        }
        set data(value: dependency_2.AssistantConversation[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get paginated() {
            return pb_1.Message.getWrapperField(this, dependency_2.Paginated, 5) as dependency_2.Paginated;
        }
        set paginated(value: dependency_2.Paginated) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get has_paginated() {
            return pb_1.Message.getField(this, 5) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof dependency_2.AssistantConversation.prototype.toObject>[];
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            paginated?: ReturnType<typeof dependency_2.Paginated.prototype.toObject>;
        }): GetAllAssistantUserConversationResponse {
            const message = new GetAllAssistantUserConversationResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = data.data.map(item => dependency_2.AssistantConversation.fromObject(item));
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            if (data.paginated != null) {
                message.paginated = dependency_2.Paginated.fromObject(data.paginated);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof dependency_2.AssistantConversation.prototype.toObject>[];
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
                paginated?: ReturnType<typeof dependency_2.Paginated.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.map((item: dependency_2.AssistantConversation) => item.toObject());
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            if (this.paginated != null) {
                data.paginated = this.paginated.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.data.length)
                writer.writeRepeatedMessage(3, this.data, (item: dependency_2.AssistantConversation) => item.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (this.has_paginated)
                writer.writeMessage(5, this.paginated, () => this.paginated.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAllAssistantUserConversationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAllAssistantUserConversationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_2.AssistantConversation.deserialize(reader), dependency_2.AssistantConversation));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.paginated, () => message.paginated = dependency_2.Paginated.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAllAssistantUserConversationResponse {
            return GetAllAssistantUserConversationResponse.deserialize(bytes);
        }
    }
    export class GetAssistantConversationRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            assistantId?: string;
            assistantConversationId?: string;
            selectors?: dependency_2.FieldSelector[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [5], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("assistantConversationId" in data && data.assistantConversationId != undefined) {
                    this.assistantConversationId = data.assistantConversationId;
                }
                if ("selectors" in data && data.selectors != undefined) {
                    this.selectors = data.selectors;
                }
            }
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get assistantConversationId() {
            return pb_1.Message.getFieldWithDefault(this, 2, "0") as string;
        }
        set assistantConversationId(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get selectors() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.FieldSelector, 5) as dependency_2.FieldSelector[];
        }
        set selectors(value: dependency_2.FieldSelector[]) {
            pb_1.Message.setRepeatedWrapperField(this, 5, value);
        }
        static fromObject(data: {
            assistantId?: string;
            assistantConversationId?: string;
            selectors?: ReturnType<typeof dependency_2.FieldSelector.prototype.toObject>[];
        }): GetAssistantConversationRequest {
            const message = new GetAssistantConversationRequest({});
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.assistantConversationId != null) {
                message.assistantConversationId = data.assistantConversationId;
            }
            if (data.selectors != null) {
                message.selectors = data.selectors.map(item => dependency_2.FieldSelector.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                assistantId?: string;
                assistantConversationId?: string;
                selectors?: ReturnType<typeof dependency_2.FieldSelector.prototype.toObject>[];
            } = {};
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.assistantConversationId != null) {
                data.assistantConversationId = this.assistantConversationId;
            }
            if (this.selectors != null) {
                data.selectors = this.selectors.map((item: dependency_2.FieldSelector) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.assistantId != "0")
                writer.writeUint64String(1, this.assistantId);
            if (this.assistantConversationId != "0")
                writer.writeUint64String(2, this.assistantConversationId);
            if (this.selectors.length)
                writer.writeRepeatedMessage(5, this.selectors, (item: dependency_2.FieldSelector) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantConversationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantConversationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 2:
                        message.assistantConversationId = reader.readUint64String();
                        break;
                    case 5:
                        reader.readMessage(message.selectors, () => pb_1.Message.addToRepeatedWrapperField(message, 5, dependency_2.FieldSelector.deserialize(reader), dependency_2.FieldSelector));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantConversationRequest {
            return GetAssistantConversationRequest.deserialize(bytes);
        }
    }
    export class GetAssistantConversationResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: dependency_2.AssistantConversation;
            error?: dependency_2.Error;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, dependency_2.AssistantConversation, 3) as dependency_2.AssistantConversation;
        }
        set data(value: dependency_2.AssistantConversation) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof dependency_2.AssistantConversation.prototype.toObject>;
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
        }): GetAssistantConversationResponse {
            const message = new GetAssistantConversationResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = dependency_2.AssistantConversation.fromObject(data.data);
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof dependency_2.AssistantConversation.prototype.toObject>;
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.has_data)
                writer.writeMessage(3, this.data, () => this.data.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantConversationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantConversationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => message.data = dependency_2.AssistantConversation.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantConversationResponse {
            return GetAssistantConversationResponse.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedAssistantServiceService {
        static definition = {
            GetAssistant: {
                path: "/assistant_api.AssistantService/GetAssistant",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAssistantRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAssistantRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllAssistant: {
                path: "/assistant_api.AssistantService/GetAllAssistant",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAllAssistantRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAllAssistantRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAllAssistantResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAllAssistantResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistant: {
                path: "/assistant_api.AssistantService/CreateAssistant",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: CreateAssistantRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => CreateAssistantRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteAssistant: {
                path: "/assistant_api.AssistantService/DeleteAssistant",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: DeleteAssistantRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => DeleteAssistantRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllAssistantProviderModel: {
                path: "/assistant_api.AssistantService/GetAllAssistantProviderModel",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAllAssistantProviderModelRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAllAssistantProviderModelRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAllAssistantProviderModelResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAllAssistantProviderModelResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistantProviderModel: {
                path: "/assistant_api.AssistantService/CreateAssistantProviderModel",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: CreateAssistantProviderModelRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => CreateAssistantProviderModelRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantProviderModelResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantProviderModelResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistantTag: {
                path: "/assistant_api.AssistantService/CreateAssistantTag",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: CreateAssistantTagRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => CreateAssistantTagRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateAssistantVersion: {
                path: "/assistant_api.AssistantService/UpdateAssistantVersion",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: UpdateAssistantVersionRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => UpdateAssistantVersionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateAssistantDetail: {
                path: "/assistant_api.AssistantService/UpdateAssistantDetail",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: UpdateAssistantDetailRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => UpdateAssistantDetailRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllAssistantMessage: {
                path: "/assistant_api.AssistantService/GetAllAssistantMessage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAllAssistantMessageRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAllAssistantMessageRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAllAssistantMessageResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAllAssistantMessageResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllConversationMessage: {
                path: "/assistant_api.AssistantService/GetAllConversationMessage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.GetAllConversationMessageRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.GetAllConversationMessageRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.GetAllConversationMessageResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.GetAllConversationMessageResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllMessage: {
                path: "/assistant_api.AssistantService/GetAllMessage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAllMessageRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAllMessageRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAllMessageResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAllMessageResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllAssistantConversation: {
                path: "/assistant_api.AssistantService/GetAllAssistantConversation",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.GetAllAssistantConversationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.GetAllAssistantConversationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.GetAllAssistantConversationResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.GetAllAssistantConversationResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantConversation: {
                path: "/assistant_api.AssistantService/GetAssistantConversation",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAssistantConversationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAssistantConversationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantConversationResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantConversationResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantWebhookLog: {
                path: "/assistant_api.AssistantService/GetAssistantWebhookLog",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.assistant_api.GetAssistantWebhookLogRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAssistantWebhookLogRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.assistant_api.GetAssistantWebhookLogResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAssistantWebhookLogResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllAssistantWebhookLog: {
                path: "/assistant_api.AssistantService/GetAllAssistantWebhookLog",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.assistant_api.GetAllAssistantWebhookLogRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAllAssistantWebhookLogRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.assistant_api.GetAllAssistantWebhookLogResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAllAssistantWebhookLogResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllAssistantWebhook: {
                path: "/assistant_api.AssistantService/GetAllAssistantWebhook",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.assistant_api.GetAllAssistantWebhookRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAllAssistantWebhookRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.assistant_api.GetAllAssistantWebhookResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAllAssistantWebhookResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantWebhook: {
                path: "/assistant_api.AssistantService/GetAssistantWebhook",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.assistant_api.GetAssistantWebhookRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAssistantWebhookRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.assistant_api.GetAssistantWebhookResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAssistantWebhookResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistantWebhook: {
                path: "/assistant_api.AssistantService/CreateAssistantWebhook",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.assistant_api.CreateAssistantWebhookRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.assistant_api.CreateAssistantWebhookRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.assistant_api.GetAssistantWebhookResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAssistantWebhookResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateAssistantWebhook: {
                path: "/assistant_api.AssistantService/UpdateAssistantWebhook",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.assistant_api.UpdateAssistantWebhookRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.assistant_api.UpdateAssistantWebhookRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.assistant_api.GetAssistantWebhookResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAssistantWebhookResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteAssistantWebhook: {
                path: "/assistant_api.AssistantService/DeleteAssistantWebhook",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.assistant_api.DeleteAssistantWebhookRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.assistant_api.DeleteAssistantWebhookRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.assistant_api.GetAssistantWebhookResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.assistant_api.GetAssistantWebhookResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantToolLog: {
                path: "/assistant_api.AssistantService/GetAssistantToolLog",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.assistant_api.GetAssistantToolLogRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAssistantToolLogRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.assistant_api.GetAssistantToolLogResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAssistantToolLogResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllAssistantToolLog: {
                path: "/assistant_api.AssistantService/GetAllAssistantToolLog",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.assistant_api.GetAllAssistantToolLogRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAllAssistantToolLogRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.assistant_api.GetAllAssistantToolLogResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAllAssistantToolLogResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantAnalysis: {
                path: "/assistant_api.AssistantService/GetAssistantAnalysis",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.assistant_api.GetAssistantAnalysisRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.assistant_api.GetAssistantAnalysisRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.assistant_api.GetAssistantAnalysisResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.assistant_api.GetAssistantAnalysisResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateAssistantAnalysis: {
                path: "/assistant_api.AssistantService/UpdateAssistantAnalysis",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.assistant_api.UpdateAssistantAnalysisRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.assistant_api.UpdateAssistantAnalysisRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.assistant_api.GetAssistantAnalysisResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.assistant_api.GetAssistantAnalysisResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistantAnalysis: {
                path: "/assistant_api.AssistantService/CreateAssistantAnalysis",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.assistant_api.CreateAssistantAnalysisRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.assistant_api.CreateAssistantAnalysisRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.assistant_api.GetAssistantAnalysisResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.assistant_api.GetAssistantAnalysisResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteAssistantAnalysis: {
                path: "/assistant_api.AssistantService/DeleteAssistantAnalysis",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.assistant_api.DeleteAssistantAnalysisRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.assistant_api.DeleteAssistantAnalysisRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.assistant_api.GetAssistantAnalysisResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.assistant_api.GetAssistantAnalysisResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllAssistantAnalysis: {
                path: "/assistant_api.AssistantService/GetAllAssistantAnalysis",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.assistant_api.GetAllAssistantAnalysisRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.assistant_api.GetAllAssistantAnalysisRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.assistant_api.GetAllAssistantAnalysisResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.assistant_api.GetAllAssistantAnalysisResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistantTool: {
                path: "/assistant_api.AssistantService/CreateAssistantTool",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.assistant_api.CreateAssistantToolRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.assistant_api.CreateAssistantToolRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.assistant_api.GetAssistantToolResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAssistantToolResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantTool: {
                path: "/assistant_api.AssistantService/GetAssistantTool",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.assistant_api.GetAssistantToolRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAssistantToolRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.assistant_api.GetAssistantToolResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAssistantToolResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllAssistantTool: {
                path: "/assistant_api.AssistantService/GetAllAssistantTool",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.assistant_api.GetAllAssistantToolRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAllAssistantToolRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.assistant_api.GetAllAssistantToolResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAllAssistantToolResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteAssistantTool: {
                path: "/assistant_api.AssistantService/DeleteAssistantTool",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.assistant_api.DeleteAssistantToolRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.assistant_api.DeleteAssistantToolRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.assistant_api.GetAssistantToolResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAssistantToolResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateAssistantTool: {
                path: "/assistant_api.AssistantService/UpdateAssistantTool",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.assistant_api.UpdateAssistantToolRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.assistant_api.UpdateAssistantToolRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.assistant_api.GetAssistantToolResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.assistant_api.GetAssistantToolResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistantKnowledge: {
                path: "/assistant_api.AssistantService/CreateAssistantKnowledge",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.assistant_api.CreateAssistantKnowledgeRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.assistant_api.CreateAssistantKnowledgeRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.assistant_api.GetAssistantKnowledgeResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.assistant_api.GetAssistantKnowledgeResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantKnowledge: {
                path: "/assistant_api.AssistantService/GetAssistantKnowledge",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.assistant_api.GetAssistantKnowledgeRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.assistant_api.GetAssistantKnowledgeRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.assistant_api.GetAssistantKnowledgeResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.assistant_api.GetAssistantKnowledgeResponse.deserialize(new Uint8Array(bytes))
            },
            GetAllAssistantKnowledge: {
                path: "/assistant_api.AssistantService/GetAllAssistantKnowledge",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.assistant_api.GetAllAssistantKnowledgeRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.assistant_api.GetAllAssistantKnowledgeRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.assistant_api.GetAllAssistantKnowledgeResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.assistant_api.GetAllAssistantKnowledgeResponse.deserialize(new Uint8Array(bytes))
            },
            DeleteAssistantKnowledge: {
                path: "/assistant_api.AssistantService/DeleteAssistantKnowledge",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.assistant_api.DeleteAssistantKnowledgeRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.assistant_api.DeleteAssistantKnowledgeRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.assistant_api.GetAssistantKnowledgeResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.assistant_api.GetAssistantKnowledgeResponse.deserialize(new Uint8Array(bytes))
            },
            UpdateAssistantKnowledge: {
                path: "/assistant_api.AssistantService/UpdateAssistantKnowledge",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.assistant_api.UpdateAssistantKnowledgeRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.assistant_api.UpdateAssistantKnowledgeRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.assistant_api.GetAssistantKnowledgeResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.assistant_api.GetAssistantKnowledgeResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract GetAssistant(call: grpc_1.ServerUnaryCall<GetAssistantRequest, GetAssistantResponse>, callback: grpc_1.sendUnaryData<GetAssistantResponse>): void;
        abstract GetAllAssistant(call: grpc_1.ServerUnaryCall<GetAllAssistantRequest, GetAllAssistantResponse>, callback: grpc_1.sendUnaryData<GetAllAssistantResponse>): void;
        abstract CreateAssistant(call: grpc_1.ServerUnaryCall<CreateAssistantRequest, GetAssistantResponse>, callback: grpc_1.sendUnaryData<GetAssistantResponse>): void;
        abstract DeleteAssistant(call: grpc_1.ServerUnaryCall<DeleteAssistantRequest, GetAssistantResponse>, callback: grpc_1.sendUnaryData<GetAssistantResponse>): void;
        abstract GetAllAssistantProviderModel(call: grpc_1.ServerUnaryCall<GetAllAssistantProviderModelRequest, GetAllAssistantProviderModelResponse>, callback: grpc_1.sendUnaryData<GetAllAssistantProviderModelResponse>): void;
        abstract CreateAssistantProviderModel(call: grpc_1.ServerUnaryCall<CreateAssistantProviderModelRequest, GetAssistantProviderModelResponse>, callback: grpc_1.sendUnaryData<GetAssistantProviderModelResponse>): void;
        abstract CreateAssistantTag(call: grpc_1.ServerUnaryCall<CreateAssistantTagRequest, GetAssistantResponse>, callback: grpc_1.sendUnaryData<GetAssistantResponse>): void;
        abstract UpdateAssistantVersion(call: grpc_1.ServerUnaryCall<UpdateAssistantVersionRequest, GetAssistantResponse>, callback: grpc_1.sendUnaryData<GetAssistantResponse>): void;
        abstract UpdateAssistantDetail(call: grpc_1.ServerUnaryCall<UpdateAssistantDetailRequest, GetAssistantResponse>, callback: grpc_1.sendUnaryData<GetAssistantResponse>): void;
        abstract GetAllAssistantMessage(call: grpc_1.ServerUnaryCall<GetAllAssistantMessageRequest, GetAllAssistantMessageResponse>, callback: grpc_1.sendUnaryData<GetAllAssistantMessageResponse>): void;
        abstract GetAllConversationMessage(call: grpc_1.ServerUnaryCall<dependency_2.GetAllConversationMessageRequest, dependency_2.GetAllConversationMessageResponse>, callback: grpc_1.sendUnaryData<dependency_2.GetAllConversationMessageResponse>): void;
        abstract GetAllMessage(call: grpc_1.ServerUnaryCall<GetAllMessageRequest, GetAllMessageResponse>, callback: grpc_1.sendUnaryData<GetAllMessageResponse>): void;
        abstract GetAllAssistantConversation(call: grpc_1.ServerUnaryCall<dependency_2.GetAllAssistantConversationRequest, dependency_2.GetAllAssistantConversationResponse>, callback: grpc_1.sendUnaryData<dependency_2.GetAllAssistantConversationResponse>): void;
        abstract GetAssistantConversation(call: grpc_1.ServerUnaryCall<GetAssistantConversationRequest, GetAssistantConversationResponse>, callback: grpc_1.sendUnaryData<GetAssistantConversationResponse>): void;
        abstract GetAssistantWebhookLog(call: grpc_1.ServerUnaryCall<dependency_6.assistant_api.GetAssistantWebhookLogRequest, dependency_6.assistant_api.GetAssistantWebhookLogResponse>, callback: grpc_1.sendUnaryData<dependency_6.assistant_api.GetAssistantWebhookLogResponse>): void;
        abstract GetAllAssistantWebhookLog(call: grpc_1.ServerUnaryCall<dependency_6.assistant_api.GetAllAssistantWebhookLogRequest, dependency_6.assistant_api.GetAllAssistantWebhookLogResponse>, callback: grpc_1.sendUnaryData<dependency_6.assistant_api.GetAllAssistantWebhookLogResponse>): void;
        abstract GetAllAssistantWebhook(call: grpc_1.ServerUnaryCall<dependency_6.assistant_api.GetAllAssistantWebhookRequest, dependency_6.assistant_api.GetAllAssistantWebhookResponse>, callback: grpc_1.sendUnaryData<dependency_6.assistant_api.GetAllAssistantWebhookResponse>): void;
        abstract GetAssistantWebhook(call: grpc_1.ServerUnaryCall<dependency_6.assistant_api.GetAssistantWebhookRequest, dependency_6.assistant_api.GetAssistantWebhookResponse>, callback: grpc_1.sendUnaryData<dependency_6.assistant_api.GetAssistantWebhookResponse>): void;
        abstract CreateAssistantWebhook(call: grpc_1.ServerUnaryCall<dependency_6.assistant_api.CreateAssistantWebhookRequest, dependency_6.assistant_api.GetAssistantWebhookResponse>, callback: grpc_1.sendUnaryData<dependency_6.assistant_api.GetAssistantWebhookResponse>): void;
        abstract UpdateAssistantWebhook(call: grpc_1.ServerUnaryCall<dependency_6.assistant_api.UpdateAssistantWebhookRequest, dependency_6.assistant_api.GetAssistantWebhookResponse>, callback: grpc_1.sendUnaryData<dependency_6.assistant_api.GetAssistantWebhookResponse>): void;
        abstract DeleteAssistantWebhook(call: grpc_1.ServerUnaryCall<dependency_6.assistant_api.DeleteAssistantWebhookRequest, dependency_6.assistant_api.GetAssistantWebhookResponse>, callback: grpc_1.sendUnaryData<dependency_6.assistant_api.GetAssistantWebhookResponse>): void;
        abstract GetAssistantToolLog(call: grpc_1.ServerUnaryCall<dependency_4.assistant_api.GetAssistantToolLogRequest, dependency_4.assistant_api.GetAssistantToolLogResponse>, callback: grpc_1.sendUnaryData<dependency_4.assistant_api.GetAssistantToolLogResponse>): void;
        abstract GetAllAssistantToolLog(call: grpc_1.ServerUnaryCall<dependency_4.assistant_api.GetAllAssistantToolLogRequest, dependency_4.assistant_api.GetAllAssistantToolLogResponse>, callback: grpc_1.sendUnaryData<dependency_4.assistant_api.GetAllAssistantToolLogResponse>): void;
        abstract GetAssistantAnalysis(call: grpc_1.ServerUnaryCall<dependency_5.assistant_api.GetAssistantAnalysisRequest, dependency_5.assistant_api.GetAssistantAnalysisResponse>, callback: grpc_1.sendUnaryData<dependency_5.assistant_api.GetAssistantAnalysisResponse>): void;
        abstract UpdateAssistantAnalysis(call: grpc_1.ServerUnaryCall<dependency_5.assistant_api.UpdateAssistantAnalysisRequest, dependency_5.assistant_api.GetAssistantAnalysisResponse>, callback: grpc_1.sendUnaryData<dependency_5.assistant_api.GetAssistantAnalysisResponse>): void;
        abstract CreateAssistantAnalysis(call: grpc_1.ServerUnaryCall<dependency_5.assistant_api.CreateAssistantAnalysisRequest, dependency_5.assistant_api.GetAssistantAnalysisResponse>, callback: grpc_1.sendUnaryData<dependency_5.assistant_api.GetAssistantAnalysisResponse>): void;
        abstract DeleteAssistantAnalysis(call: grpc_1.ServerUnaryCall<dependency_5.assistant_api.DeleteAssistantAnalysisRequest, dependency_5.assistant_api.GetAssistantAnalysisResponse>, callback: grpc_1.sendUnaryData<dependency_5.assistant_api.GetAssistantAnalysisResponse>): void;
        abstract GetAllAssistantAnalysis(call: grpc_1.ServerUnaryCall<dependency_5.assistant_api.GetAllAssistantAnalysisRequest, dependency_5.assistant_api.GetAllAssistantAnalysisResponse>, callback: grpc_1.sendUnaryData<dependency_5.assistant_api.GetAllAssistantAnalysisResponse>): void;
        abstract CreateAssistantTool(call: grpc_1.ServerUnaryCall<dependency_4.assistant_api.CreateAssistantToolRequest, dependency_4.assistant_api.GetAssistantToolResponse>, callback: grpc_1.sendUnaryData<dependency_4.assistant_api.GetAssistantToolResponse>): void;
        abstract GetAssistantTool(call: grpc_1.ServerUnaryCall<dependency_4.assistant_api.GetAssistantToolRequest, dependency_4.assistant_api.GetAssistantToolResponse>, callback: grpc_1.sendUnaryData<dependency_4.assistant_api.GetAssistantToolResponse>): void;
        abstract GetAllAssistantTool(call: grpc_1.ServerUnaryCall<dependency_4.assistant_api.GetAllAssistantToolRequest, dependency_4.assistant_api.GetAllAssistantToolResponse>, callback: grpc_1.sendUnaryData<dependency_4.assistant_api.GetAllAssistantToolResponse>): void;
        abstract DeleteAssistantTool(call: grpc_1.ServerUnaryCall<dependency_4.assistant_api.DeleteAssistantToolRequest, dependency_4.assistant_api.GetAssistantToolResponse>, callback: grpc_1.sendUnaryData<dependency_4.assistant_api.GetAssistantToolResponse>): void;
        abstract UpdateAssistantTool(call: grpc_1.ServerUnaryCall<dependency_4.assistant_api.UpdateAssistantToolRequest, dependency_4.assistant_api.GetAssistantToolResponse>, callback: grpc_1.sendUnaryData<dependency_4.assistant_api.GetAssistantToolResponse>): void;
        abstract CreateAssistantKnowledge(call: grpc_1.ServerUnaryCall<dependency_7.assistant_api.CreateAssistantKnowledgeRequest, dependency_7.assistant_api.GetAssistantKnowledgeResponse>, callback: grpc_1.sendUnaryData<dependency_7.assistant_api.GetAssistantKnowledgeResponse>): void;
        abstract GetAssistantKnowledge(call: grpc_1.ServerUnaryCall<dependency_7.assistant_api.GetAssistantKnowledgeRequest, dependency_7.assistant_api.GetAssistantKnowledgeResponse>, callback: grpc_1.sendUnaryData<dependency_7.assistant_api.GetAssistantKnowledgeResponse>): void;
        abstract GetAllAssistantKnowledge(call: grpc_1.ServerUnaryCall<dependency_7.assistant_api.GetAllAssistantKnowledgeRequest, dependency_7.assistant_api.GetAllAssistantKnowledgeResponse>, callback: grpc_1.sendUnaryData<dependency_7.assistant_api.GetAllAssistantKnowledgeResponse>): void;
        abstract DeleteAssistantKnowledge(call: grpc_1.ServerUnaryCall<dependency_7.assistant_api.DeleteAssistantKnowledgeRequest, dependency_7.assistant_api.GetAssistantKnowledgeResponse>, callback: grpc_1.sendUnaryData<dependency_7.assistant_api.GetAssistantKnowledgeResponse>): void;
        abstract UpdateAssistantKnowledge(call: grpc_1.ServerUnaryCall<dependency_7.assistant_api.UpdateAssistantKnowledgeRequest, dependency_7.assistant_api.GetAssistantKnowledgeResponse>, callback: grpc_1.sendUnaryData<dependency_7.assistant_api.GetAssistantKnowledgeResponse>): void;
    }
    export class AssistantServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedAssistantServiceService.definition, "AssistantService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        GetAssistant: GrpcUnaryServiceInterface<GetAssistantRequest, GetAssistantResponse> = (message: GetAssistantRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, callback?: grpc_1.requestCallback<GetAssistantResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistant(message, metadata, options, callback);
        };
        GetAllAssistant: GrpcUnaryServiceInterface<GetAllAssistantRequest, GetAllAssistantResponse> = (message: GetAllAssistantRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAllAssistantResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAllAssistantResponse>, callback?: grpc_1.requestCallback<GetAllAssistantResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllAssistant(message, metadata, options, callback);
        };
        CreateAssistant: GrpcUnaryServiceInterface<CreateAssistantRequest, GetAssistantResponse> = (message: CreateAssistantRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, callback?: grpc_1.requestCallback<GetAssistantResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistant(message, metadata, options, callback);
        };
        DeleteAssistant: GrpcUnaryServiceInterface<DeleteAssistantRequest, GetAssistantResponse> = (message: DeleteAssistantRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, callback?: grpc_1.requestCallback<GetAssistantResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteAssistant(message, metadata, options, callback);
        };
        GetAllAssistantProviderModel: GrpcUnaryServiceInterface<GetAllAssistantProviderModelRequest, GetAllAssistantProviderModelResponse> = (message: GetAllAssistantProviderModelRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAllAssistantProviderModelResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAllAssistantProviderModelResponse>, callback?: grpc_1.requestCallback<GetAllAssistantProviderModelResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllAssistantProviderModel(message, metadata, options, callback);
        };
        CreateAssistantProviderModel: GrpcUnaryServiceInterface<CreateAssistantProviderModelRequest, GetAssistantProviderModelResponse> = (message: CreateAssistantProviderModelRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantProviderModelResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantProviderModelResponse>, callback?: grpc_1.requestCallback<GetAssistantProviderModelResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantProviderModel(message, metadata, options, callback);
        };
        CreateAssistantTag: GrpcUnaryServiceInterface<CreateAssistantTagRequest, GetAssistantResponse> = (message: CreateAssistantTagRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, callback?: grpc_1.requestCallback<GetAssistantResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantTag(message, metadata, options, callback);
        };
        UpdateAssistantVersion: GrpcUnaryServiceInterface<UpdateAssistantVersionRequest, GetAssistantResponse> = (message: UpdateAssistantVersionRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, callback?: grpc_1.requestCallback<GetAssistantResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateAssistantVersion(message, metadata, options, callback);
        };
        UpdateAssistantDetail: GrpcUnaryServiceInterface<UpdateAssistantDetailRequest, GetAssistantResponse> = (message: UpdateAssistantDetailRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantResponse>, callback?: grpc_1.requestCallback<GetAssistantResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateAssistantDetail(message, metadata, options, callback);
        };
        GetAllAssistantMessage: GrpcUnaryServiceInterface<GetAllAssistantMessageRequest, GetAllAssistantMessageResponse> = (message: GetAllAssistantMessageRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAllAssistantMessageResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAllAssistantMessageResponse>, callback?: grpc_1.requestCallback<GetAllAssistantMessageResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllAssistantMessage(message, metadata, options, callback);
        };
        GetAllConversationMessage: GrpcUnaryServiceInterface<dependency_2.GetAllConversationMessageRequest, dependency_2.GetAllConversationMessageResponse> = (message: dependency_2.GetAllConversationMessageRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_2.GetAllConversationMessageResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_2.GetAllConversationMessageResponse>, callback?: grpc_1.requestCallback<dependency_2.GetAllConversationMessageResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllConversationMessage(message, metadata, options, callback);
        };
        GetAllMessage: GrpcUnaryServiceInterface<GetAllMessageRequest, GetAllMessageResponse> = (message: GetAllMessageRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAllMessageResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAllMessageResponse>, callback?: grpc_1.requestCallback<GetAllMessageResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllMessage(message, metadata, options, callback);
        };
        GetAllAssistantConversation: GrpcUnaryServiceInterface<dependency_2.GetAllAssistantConversationRequest, dependency_2.GetAllAssistantConversationResponse> = (message: dependency_2.GetAllAssistantConversationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_2.GetAllAssistantConversationResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_2.GetAllAssistantConversationResponse>, callback?: grpc_1.requestCallback<dependency_2.GetAllAssistantConversationResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllAssistantConversation(message, metadata, options, callback);
        };
        GetAssistantConversation: GrpcUnaryServiceInterface<GetAssistantConversationRequest, GetAssistantConversationResponse> = (message: GetAssistantConversationRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantConversationResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantConversationResponse>, callback?: grpc_1.requestCallback<GetAssistantConversationResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantConversation(message, metadata, options, callback);
        };
        GetAssistantWebhookLog: GrpcUnaryServiceInterface<dependency_6.assistant_api.GetAssistantWebhookLogRequest, dependency_6.assistant_api.GetAssistantWebhookLogResponse> = (message: dependency_6.assistant_api.GetAssistantWebhookLogRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookLogResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookLogResponse>, callback?: grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookLogResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantWebhookLog(message, metadata, options, callback);
        };
        GetAllAssistantWebhookLog: GrpcUnaryServiceInterface<dependency_6.assistant_api.GetAllAssistantWebhookLogRequest, dependency_6.assistant_api.GetAllAssistantWebhookLogResponse> = (message: dependency_6.assistant_api.GetAllAssistantWebhookLogRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAllAssistantWebhookLogResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAllAssistantWebhookLogResponse>, callback?: grpc_1.requestCallback<dependency_6.assistant_api.GetAllAssistantWebhookLogResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllAssistantWebhookLog(message, metadata, options, callback);
        };
        GetAllAssistantWebhook: GrpcUnaryServiceInterface<dependency_6.assistant_api.GetAllAssistantWebhookRequest, dependency_6.assistant_api.GetAllAssistantWebhookResponse> = (message: dependency_6.assistant_api.GetAllAssistantWebhookRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAllAssistantWebhookResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAllAssistantWebhookResponse>, callback?: grpc_1.requestCallback<dependency_6.assistant_api.GetAllAssistantWebhookResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllAssistantWebhook(message, metadata, options, callback);
        };
        GetAssistantWebhook: GrpcUnaryServiceInterface<dependency_6.assistant_api.GetAssistantWebhookRequest, dependency_6.assistant_api.GetAssistantWebhookResponse> = (message: dependency_6.assistant_api.GetAssistantWebhookRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>, callback?: grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantWebhook(message, metadata, options, callback);
        };
        CreateAssistantWebhook: GrpcUnaryServiceInterface<dependency_6.assistant_api.CreateAssistantWebhookRequest, dependency_6.assistant_api.GetAssistantWebhookResponse> = (message: dependency_6.assistant_api.CreateAssistantWebhookRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>, callback?: grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantWebhook(message, metadata, options, callback);
        };
        UpdateAssistantWebhook: GrpcUnaryServiceInterface<dependency_6.assistant_api.UpdateAssistantWebhookRequest, dependency_6.assistant_api.GetAssistantWebhookResponse> = (message: dependency_6.assistant_api.UpdateAssistantWebhookRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>, callback?: grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateAssistantWebhook(message, metadata, options, callback);
        };
        DeleteAssistantWebhook: GrpcUnaryServiceInterface<dependency_6.assistant_api.DeleteAssistantWebhookRequest, dependency_6.assistant_api.GetAssistantWebhookResponse> = (message: dependency_6.assistant_api.DeleteAssistantWebhookRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>, callback?: grpc_1.requestCallback<dependency_6.assistant_api.GetAssistantWebhookResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteAssistantWebhook(message, metadata, options, callback);
        };
        GetAssistantToolLog: GrpcUnaryServiceInterface<dependency_4.assistant_api.GetAssistantToolLogRequest, dependency_4.assistant_api.GetAssistantToolLogResponse> = (message: dependency_4.assistant_api.GetAssistantToolLogRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolLogResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolLogResponse>, callback?: grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolLogResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantToolLog(message, metadata, options, callback);
        };
        GetAllAssistantToolLog: GrpcUnaryServiceInterface<dependency_4.assistant_api.GetAllAssistantToolLogRequest, dependency_4.assistant_api.GetAllAssistantToolLogResponse> = (message: dependency_4.assistant_api.GetAllAssistantToolLogRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAllAssistantToolLogResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAllAssistantToolLogResponse>, callback?: grpc_1.requestCallback<dependency_4.assistant_api.GetAllAssistantToolLogResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllAssistantToolLog(message, metadata, options, callback);
        };
        GetAssistantAnalysis: GrpcUnaryServiceInterface<dependency_5.assistant_api.GetAssistantAnalysisRequest, dependency_5.assistant_api.GetAssistantAnalysisResponse> = (message: dependency_5.assistant_api.GetAssistantAnalysisRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>, callback?: grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantAnalysis(message, metadata, options, callback);
        };
        UpdateAssistantAnalysis: GrpcUnaryServiceInterface<dependency_5.assistant_api.UpdateAssistantAnalysisRequest, dependency_5.assistant_api.GetAssistantAnalysisResponse> = (message: dependency_5.assistant_api.UpdateAssistantAnalysisRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>, callback?: grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateAssistantAnalysis(message, metadata, options, callback);
        };
        CreateAssistantAnalysis: GrpcUnaryServiceInterface<dependency_5.assistant_api.CreateAssistantAnalysisRequest, dependency_5.assistant_api.GetAssistantAnalysisResponse> = (message: dependency_5.assistant_api.CreateAssistantAnalysisRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>, callback?: grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantAnalysis(message, metadata, options, callback);
        };
        DeleteAssistantAnalysis: GrpcUnaryServiceInterface<dependency_5.assistant_api.DeleteAssistantAnalysisRequest, dependency_5.assistant_api.GetAssistantAnalysisResponse> = (message: dependency_5.assistant_api.DeleteAssistantAnalysisRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>, callback?: grpc_1.requestCallback<dependency_5.assistant_api.GetAssistantAnalysisResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteAssistantAnalysis(message, metadata, options, callback);
        };
        GetAllAssistantAnalysis: GrpcUnaryServiceInterface<dependency_5.assistant_api.GetAllAssistantAnalysisRequest, dependency_5.assistant_api.GetAllAssistantAnalysisResponse> = (message: dependency_5.assistant_api.GetAllAssistantAnalysisRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.assistant_api.GetAllAssistantAnalysisResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.assistant_api.GetAllAssistantAnalysisResponse>, callback?: grpc_1.requestCallback<dependency_5.assistant_api.GetAllAssistantAnalysisResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllAssistantAnalysis(message, metadata, options, callback);
        };
        CreateAssistantTool: GrpcUnaryServiceInterface<dependency_4.assistant_api.CreateAssistantToolRequest, dependency_4.assistant_api.GetAssistantToolResponse> = (message: dependency_4.assistant_api.CreateAssistantToolRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>, callback?: grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantTool(message, metadata, options, callback);
        };
        GetAssistantTool: GrpcUnaryServiceInterface<dependency_4.assistant_api.GetAssistantToolRequest, dependency_4.assistant_api.GetAssistantToolResponse> = (message: dependency_4.assistant_api.GetAssistantToolRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>, callback?: grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantTool(message, metadata, options, callback);
        };
        GetAllAssistantTool: GrpcUnaryServiceInterface<dependency_4.assistant_api.GetAllAssistantToolRequest, dependency_4.assistant_api.GetAllAssistantToolResponse> = (message: dependency_4.assistant_api.GetAllAssistantToolRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAllAssistantToolResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAllAssistantToolResponse>, callback?: grpc_1.requestCallback<dependency_4.assistant_api.GetAllAssistantToolResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllAssistantTool(message, metadata, options, callback);
        };
        DeleteAssistantTool: GrpcUnaryServiceInterface<dependency_4.assistant_api.DeleteAssistantToolRequest, dependency_4.assistant_api.GetAssistantToolResponse> = (message: dependency_4.assistant_api.DeleteAssistantToolRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>, callback?: grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteAssistantTool(message, metadata, options, callback);
        };
        UpdateAssistantTool: GrpcUnaryServiceInterface<dependency_4.assistant_api.UpdateAssistantToolRequest, dependency_4.assistant_api.GetAssistantToolResponse> = (message: dependency_4.assistant_api.UpdateAssistantToolRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>, callback?: grpc_1.requestCallback<dependency_4.assistant_api.GetAssistantToolResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateAssistantTool(message, metadata, options, callback);
        };
        CreateAssistantKnowledge: GrpcUnaryServiceInterface<dependency_7.assistant_api.CreateAssistantKnowledgeRequest, dependency_7.assistant_api.GetAssistantKnowledgeResponse> = (message: dependency_7.assistant_api.CreateAssistantKnowledgeRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>, callback?: grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantKnowledge(message, metadata, options, callback);
        };
        GetAssistantKnowledge: GrpcUnaryServiceInterface<dependency_7.assistant_api.GetAssistantKnowledgeRequest, dependency_7.assistant_api.GetAssistantKnowledgeResponse> = (message: dependency_7.assistant_api.GetAssistantKnowledgeRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>, callback?: grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantKnowledge(message, metadata, options, callback);
        };
        GetAllAssistantKnowledge: GrpcUnaryServiceInterface<dependency_7.assistant_api.GetAllAssistantKnowledgeRequest, dependency_7.assistant_api.GetAllAssistantKnowledgeResponse> = (message: dependency_7.assistant_api.GetAllAssistantKnowledgeRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.assistant_api.GetAllAssistantKnowledgeResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.assistant_api.GetAllAssistantKnowledgeResponse>, callback?: grpc_1.requestCallback<dependency_7.assistant_api.GetAllAssistantKnowledgeResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAllAssistantKnowledge(message, metadata, options, callback);
        };
        DeleteAssistantKnowledge: GrpcUnaryServiceInterface<dependency_7.assistant_api.DeleteAssistantKnowledgeRequest, dependency_7.assistant_api.GetAssistantKnowledgeResponse> = (message: dependency_7.assistant_api.DeleteAssistantKnowledgeRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>, callback?: grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>): grpc_1.ClientUnaryCall => {
            return super.DeleteAssistantKnowledge(message, metadata, options, callback);
        };
        UpdateAssistantKnowledge: GrpcUnaryServiceInterface<dependency_7.assistant_api.UpdateAssistantKnowledgeRequest, dependency_7.assistant_api.GetAssistantKnowledgeResponse> = (message: dependency_7.assistant_api.UpdateAssistantKnowledgeRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>, callback?: grpc_1.requestCallback<dependency_7.assistant_api.GetAssistantKnowledgeResponse>): grpc_1.ClientUnaryCall => {
            return super.UpdateAssistantKnowledge(message, metadata, options, callback);
        };
    }
}
