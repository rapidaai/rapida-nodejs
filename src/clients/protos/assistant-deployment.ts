/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: assistant-deployment.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./google/protobuf/timestamp";
import * as dependency_2 from "./common";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace assistant_api {
    export class DeploymentAudioProvider extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            audioProvider?: string;
            audioOptions?: dependency_2.Metadata[];
            audioProviderId?: string;
            status?: string;
            audioType?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("audioProvider" in data && data.audioProvider != undefined) {
                    this.audioProvider = data.audioProvider;
                }
                if ("audioOptions" in data && data.audioOptions != undefined) {
                    this.audioOptions = data.audioOptions;
                }
                if ("audioProviderId" in data && data.audioProviderId != undefined) {
                    this.audioProviderId = data.audioProviderId;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("audioType" in data && data.audioType != undefined) {
                    this.audioType = data.audioType;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get audioProvider() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set audioProvider(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get audioOptions() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Metadata, 3) as dependency_2.Metadata[];
        }
        set audioOptions(value: dependency_2.Metadata[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get audioProviderId() {
            return pb_1.Message.getFieldWithDefault(this, 4, "0") as string;
        }
        set audioProviderId(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set status(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get audioType() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set audioType(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        static fromObject(data: {
            id?: string;
            audioProvider?: string;
            audioOptions?: ReturnType<typeof dependency_2.Metadata.prototype.toObject>[];
            audioProviderId?: string;
            status?: string;
            audioType?: string;
        }): DeploymentAudioProvider {
            const message = new DeploymentAudioProvider({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.audioProvider != null) {
                message.audioProvider = data.audioProvider;
            }
            if (data.audioOptions != null) {
                message.audioOptions = data.audioOptions.map(item => dependency_2.Metadata.fromObject(item));
            }
            if (data.audioProviderId != null) {
                message.audioProviderId = data.audioProviderId;
            }
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.audioType != null) {
                message.audioType = data.audioType;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                audioProvider?: string;
                audioOptions?: ReturnType<typeof dependency_2.Metadata.prototype.toObject>[];
                audioProviderId?: string;
                status?: string;
                audioType?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.audioProvider != null) {
                data.audioProvider = this.audioProvider;
            }
            if (this.audioOptions != null) {
                data.audioOptions = this.audioOptions.map((item: dependency_2.Metadata) => item.toObject());
            }
            if (this.audioProviderId != null) {
                data.audioProviderId = this.audioProviderId;
            }
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.audioType != null) {
                data.audioType = this.audioType;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != "0")
                writer.writeUint64String(1, this.id);
            if (this.audioProvider.length)
                writer.writeString(2, this.audioProvider);
            if (this.audioOptions.length)
                writer.writeRepeatedMessage(3, this.audioOptions, (item: dependency_2.Metadata) => item.serialize(writer));
            if (this.audioProviderId != "0")
                writer.writeUint64String(4, this.audioProviderId);
            if (this.status.length)
                writer.writeString(5, this.status);
            if (this.audioType.length)
                writer.writeString(6, this.audioType);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeploymentAudioProvider {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeploymentAudioProvider();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64String();
                        break;
                    case 2:
                        message.audioProvider = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.audioOptions, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_2.Metadata.deserialize(reader), dependency_2.Metadata));
                        break;
                    case 4:
                        message.audioProviderId = reader.readUint64String();
                        break;
                    case 5:
                        message.status = reader.readString();
                        break;
                    case 6:
                        message.audioType = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DeploymentAudioProvider {
            return DeploymentAudioProvider.deserialize(bytes);
        }
    }
    export class AssistantWebpluginDeployment extends pb_1.Message {
        #one_of_decls: number[][] = [[15, 16], [10], [11], [12]];
        constructor(data?: any[] | ({
            id?: string;
            assistantId?: string;
            name?: string;
            inputAudio?: DeploymentAudioProvider;
            outputAudio?: DeploymentAudioProvider;
            suggestion?: string[];
            helpCenterEnabled?: boolean;
            productCatalogEnabled?: boolean;
            articleCatalogEnabled?: boolean;
            uploadFileEnabled?: boolean;
            createdDate?: dependency_1.google.protobuf.Timestamp;
            updatedDate?: dependency_1.google.protobuf.Timestamp;
            status?: string;
        } & (({
            url?: string;
            raw?: never;
        } | {
            url?: never;
            raw?: dependency_2.Content;
        }) | ({
            greeting?: string;
        }) | ({
            mistake?: string;
        }) | ({
            ending?: string;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [20], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("greeting" in data && data.greeting != undefined) {
                    this.greeting = data.greeting;
                }
                if ("mistake" in data && data.mistake != undefined) {
                    this.mistake = data.mistake;
                }
                if ("ending" in data && data.ending != undefined) {
                    this.ending = data.ending;
                }
                if ("inputAudio" in data && data.inputAudio != undefined) {
                    this.inputAudio = data.inputAudio;
                }
                if ("outputAudio" in data && data.outputAudio != undefined) {
                    this.outputAudio = data.outputAudio;
                }
                if ("url" in data && data.url != undefined) {
                    this.url = data.url;
                }
                if ("raw" in data && data.raw != undefined) {
                    this.raw = data.raw;
                }
                if ("suggestion" in data && data.suggestion != undefined) {
                    this.suggestion = data.suggestion;
                }
                if ("helpCenterEnabled" in data && data.helpCenterEnabled != undefined) {
                    this.helpCenterEnabled = data.helpCenterEnabled;
                }
                if ("productCatalogEnabled" in data && data.productCatalogEnabled != undefined) {
                    this.productCatalogEnabled = data.productCatalogEnabled;
                }
                if ("articleCatalogEnabled" in data && data.articleCatalogEnabled != undefined) {
                    this.articleCatalogEnabled = data.articleCatalogEnabled;
                }
                if ("uploadFileEnabled" in data && data.uploadFileEnabled != undefined) {
                    this.uploadFileEnabled = data.uploadFileEnabled;
                }
                if ("createdDate" in data && data.createdDate != undefined) {
                    this.createdDate = data.createdDate;
                }
                if ("updatedDate" in data && data.updatedDate != undefined) {
                    this.updatedDate = data.updatedDate;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 5, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get greeting() {
            return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
        }
        set greeting(value: string) {
            pb_1.Message.setOneofField(this, 10, this.#one_of_decls[1], value);
        }
        get has_greeting() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get mistake() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set mistake(value: string) {
            pb_1.Message.setOneofField(this, 11, this.#one_of_decls[2], value);
        }
        get has_mistake() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get ending() {
            return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
        }
        set ending(value: string) {
            pb_1.Message.setOneofField(this, 12, this.#one_of_decls[3], value);
        }
        get has_ending() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get inputAudio() {
            return pb_1.Message.getWrapperField(this, DeploymentAudioProvider, 13) as DeploymentAudioProvider;
        }
        set inputAudio(value: DeploymentAudioProvider) {
            pb_1.Message.setWrapperField(this, 13, value);
        }
        get has_inputAudio() {
            return pb_1.Message.getField(this, 13) != null;
        }
        get outputAudio() {
            return pb_1.Message.getWrapperField(this, DeploymentAudioProvider, 14) as DeploymentAudioProvider;
        }
        set outputAudio(value: DeploymentAudioProvider) {
            pb_1.Message.setWrapperField(this, 14, value);
        }
        get has_outputAudio() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get url() {
            return pb_1.Message.getFieldWithDefault(this, 15, "") as string;
        }
        set url(value: string) {
            pb_1.Message.setOneofField(this, 15, this.#one_of_decls[0], value);
        }
        get has_url() {
            return pb_1.Message.getField(this, 15) != null;
        }
        get raw() {
            return pb_1.Message.getWrapperField(this, dependency_2.Content, 16) as dependency_2.Content;
        }
        set raw(value: dependency_2.Content) {
            pb_1.Message.setOneofWrapperField(this, 16, this.#one_of_decls[0], value);
        }
        get has_raw() {
            return pb_1.Message.getField(this, 16) != null;
        }
        get suggestion() {
            return pb_1.Message.getFieldWithDefault(this, 20, []) as string[];
        }
        set suggestion(value: string[]) {
            pb_1.Message.setField(this, 20, value);
        }
        get helpCenterEnabled() {
            return pb_1.Message.getFieldWithDefault(this, 21, false) as boolean;
        }
        set helpCenterEnabled(value: boolean) {
            pb_1.Message.setField(this, 21, value);
        }
        get productCatalogEnabled() {
            return pb_1.Message.getFieldWithDefault(this, 22, false) as boolean;
        }
        set productCatalogEnabled(value: boolean) {
            pb_1.Message.setField(this, 22, value);
        }
        get articleCatalogEnabled() {
            return pb_1.Message.getFieldWithDefault(this, 23, false) as boolean;
        }
        set articleCatalogEnabled(value: boolean) {
            pb_1.Message.setField(this, 23, value);
        }
        get uploadFileEnabled() {
            return pb_1.Message.getFieldWithDefault(this, 24, false) as boolean;
        }
        set uploadFileEnabled(value: boolean) {
            pb_1.Message.setField(this, 24, value);
        }
        get createdDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 26) as dependency_1.google.protobuf.Timestamp;
        }
        set createdDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 26, value);
        }
        get has_createdDate() {
            return pb_1.Message.getField(this, 26) != null;
        }
        get updatedDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 27) as dependency_1.google.protobuf.Timestamp;
        }
        set updatedDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 27, value);
        }
        get has_updatedDate() {
            return pb_1.Message.getField(this, 27) != null;
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 28, "") as string;
        }
        set status(value: string) {
            pb_1.Message.setField(this, 28, value);
        }
        get icon() {
            const cases: {
                [index: number]: "none" | "url" | "raw";
            } = {
                0: "none",
                15: "url",
                16: "raw"
            };
            return cases[pb_1.Message.computeOneofCase(this, [15, 16])];
        }
        get _greeting() {
            const cases: {
                [index: number]: "none" | "greeting";
            } = {
                0: "none",
                10: "greeting"
            };
            return cases[pb_1.Message.computeOneofCase(this, [10])];
        }
        get _mistake() {
            const cases: {
                [index: number]: "none" | "mistake";
            } = {
                0: "none",
                11: "mistake"
            };
            return cases[pb_1.Message.computeOneofCase(this, [11])];
        }
        get _ending() {
            const cases: {
                [index: number]: "none" | "ending";
            } = {
                0: "none",
                12: "ending"
            };
            return cases[pb_1.Message.computeOneofCase(this, [12])];
        }
        static fromObject(data: {
            id?: string;
            assistantId?: string;
            name?: string;
            greeting?: string;
            mistake?: string;
            ending?: string;
            inputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
            outputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
            url?: string;
            raw?: ReturnType<typeof dependency_2.Content.prototype.toObject>;
            suggestion?: string[];
            helpCenterEnabled?: boolean;
            productCatalogEnabled?: boolean;
            articleCatalogEnabled?: boolean;
            uploadFileEnabled?: boolean;
            createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            status?: string;
        }): AssistantWebpluginDeployment {
            const message = new AssistantWebpluginDeployment({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.greeting != null) {
                message.greeting = data.greeting;
            }
            if (data.mistake != null) {
                message.mistake = data.mistake;
            }
            if (data.ending != null) {
                message.ending = data.ending;
            }
            if (data.inputAudio != null) {
                message.inputAudio = DeploymentAudioProvider.fromObject(data.inputAudio);
            }
            if (data.outputAudio != null) {
                message.outputAudio = DeploymentAudioProvider.fromObject(data.outputAudio);
            }
            if (data.url != null) {
                message.url = data.url;
            }
            if (data.raw != null) {
                message.raw = dependency_2.Content.fromObject(data.raw);
            }
            if (data.suggestion != null) {
                message.suggestion = data.suggestion;
            }
            if (data.helpCenterEnabled != null) {
                message.helpCenterEnabled = data.helpCenterEnabled;
            }
            if (data.productCatalogEnabled != null) {
                message.productCatalogEnabled = data.productCatalogEnabled;
            }
            if (data.articleCatalogEnabled != null) {
                message.articleCatalogEnabled = data.articleCatalogEnabled;
            }
            if (data.uploadFileEnabled != null) {
                message.uploadFileEnabled = data.uploadFileEnabled;
            }
            if (data.createdDate != null) {
                message.createdDate = dependency_1.google.protobuf.Timestamp.fromObject(data.createdDate);
            }
            if (data.updatedDate != null) {
                message.updatedDate = dependency_1.google.protobuf.Timestamp.fromObject(data.updatedDate);
            }
            if (data.status != null) {
                message.status = data.status;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                assistantId?: string;
                name?: string;
                greeting?: string;
                mistake?: string;
                ending?: string;
                inputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
                outputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
                url?: string;
                raw?: ReturnType<typeof dependency_2.Content.prototype.toObject>;
                suggestion?: string[];
                helpCenterEnabled?: boolean;
                productCatalogEnabled?: boolean;
                articleCatalogEnabled?: boolean;
                uploadFileEnabled?: boolean;
                createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                status?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.greeting != null) {
                data.greeting = this.greeting;
            }
            if (this.mistake != null) {
                data.mistake = this.mistake;
            }
            if (this.ending != null) {
                data.ending = this.ending;
            }
            if (this.inputAudio != null) {
                data.inputAudio = this.inputAudio.toObject();
            }
            if (this.outputAudio != null) {
                data.outputAudio = this.outputAudio.toObject();
            }
            if (this.url != null) {
                data.url = this.url;
            }
            if (this.raw != null) {
                data.raw = this.raw.toObject();
            }
            if (this.suggestion != null) {
                data.suggestion = this.suggestion;
            }
            if (this.helpCenterEnabled != null) {
                data.helpCenterEnabled = this.helpCenterEnabled;
            }
            if (this.productCatalogEnabled != null) {
                data.productCatalogEnabled = this.productCatalogEnabled;
            }
            if (this.articleCatalogEnabled != null) {
                data.articleCatalogEnabled = this.articleCatalogEnabled;
            }
            if (this.uploadFileEnabled != null) {
                data.uploadFileEnabled = this.uploadFileEnabled;
            }
            if (this.createdDate != null) {
                data.createdDate = this.createdDate.toObject();
            }
            if (this.updatedDate != null) {
                data.updatedDate = this.updatedDate.toObject();
            }
            if (this.status != null) {
                data.status = this.status;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != "0")
                writer.writeUint64String(1, this.id);
            if (this.assistantId != "0")
                writer.writeUint64String(5, this.assistantId);
            if (this.name.length)
                writer.writeString(6, this.name);
            if (this.has_greeting)
                writer.writeString(10, this.greeting);
            if (this.has_mistake)
                writer.writeString(11, this.mistake);
            if (this.has_ending)
                writer.writeString(12, this.ending);
            if (this.has_inputAudio)
                writer.writeMessage(13, this.inputAudio, () => this.inputAudio.serialize(writer));
            if (this.has_outputAudio)
                writer.writeMessage(14, this.outputAudio, () => this.outputAudio.serialize(writer));
            if (this.has_url)
                writer.writeString(15, this.url);
            if (this.has_raw)
                writer.writeMessage(16, this.raw, () => this.raw.serialize(writer));
            if (this.suggestion.length)
                writer.writeRepeatedString(20, this.suggestion);
            if (this.helpCenterEnabled != false)
                writer.writeBool(21, this.helpCenterEnabled);
            if (this.productCatalogEnabled != false)
                writer.writeBool(22, this.productCatalogEnabled);
            if (this.articleCatalogEnabled != false)
                writer.writeBool(23, this.articleCatalogEnabled);
            if (this.uploadFileEnabled != false)
                writer.writeBool(24, this.uploadFileEnabled);
            if (this.has_createdDate)
                writer.writeMessage(26, this.createdDate, () => this.createdDate.serialize(writer));
            if (this.has_updatedDate)
                writer.writeMessage(27, this.updatedDate, () => this.updatedDate.serialize(writer));
            if (this.status.length)
                writer.writeString(28, this.status);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AssistantWebpluginDeployment {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AssistantWebpluginDeployment();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64String();
                        break;
                    case 5:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 6:
                        message.name = reader.readString();
                        break;
                    case 10:
                        message.greeting = reader.readString();
                        break;
                    case 11:
                        message.mistake = reader.readString();
                        break;
                    case 12:
                        message.ending = reader.readString();
                        break;
                    case 13:
                        reader.readMessage(message.inputAudio, () => message.inputAudio = DeploymentAudioProvider.deserialize(reader));
                        break;
                    case 14:
                        reader.readMessage(message.outputAudio, () => message.outputAudio = DeploymentAudioProvider.deserialize(reader));
                        break;
                    case 15:
                        message.url = reader.readString();
                        break;
                    case 16:
                        reader.readMessage(message.raw, () => message.raw = dependency_2.Content.deserialize(reader));
                        break;
                    case 20:
                        pb_1.Message.addToRepeatedField(message, 20, reader.readString());
                        break;
                    case 21:
                        message.helpCenterEnabled = reader.readBool();
                        break;
                    case 22:
                        message.productCatalogEnabled = reader.readBool();
                        break;
                    case 23:
                        message.articleCatalogEnabled = reader.readBool();
                        break;
                    case 24:
                        message.uploadFileEnabled = reader.readBool();
                        break;
                    case 26:
                        reader.readMessage(message.createdDate, () => message.createdDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 27:
                        reader.readMessage(message.updatedDate, () => message.updatedDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 28:
                        message.status = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AssistantWebpluginDeployment {
            return AssistantWebpluginDeployment.deserialize(bytes);
        }
    }
    export class AssistantPhoneDeployment extends pb_1.Message {
        #one_of_decls: number[][] = [[10], [11], [12]];
        constructor(data?: any[] | ({
            id?: string;
            assistantId?: string;
            inputAudio?: DeploymentAudioProvider;
            outputAudio?: DeploymentAudioProvider;
            phoneProviderName?: string;
            phoneProviderId?: string;
            phoneOptions?: dependency_2.Metadata[];
            createdDate?: dependency_1.google.protobuf.Timestamp;
            updatedDate?: dependency_1.google.protobuf.Timestamp;
            status?: string;
        } & (({
            greeting?: string;
        }) | ({
            mistake?: string;
        }) | ({
            ending?: string;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [17], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("greeting" in data && data.greeting != undefined) {
                    this.greeting = data.greeting;
                }
                if ("mistake" in data && data.mistake != undefined) {
                    this.mistake = data.mistake;
                }
                if ("ending" in data && data.ending != undefined) {
                    this.ending = data.ending;
                }
                if ("inputAudio" in data && data.inputAudio != undefined) {
                    this.inputAudio = data.inputAudio;
                }
                if ("outputAudio" in data && data.outputAudio != undefined) {
                    this.outputAudio = data.outputAudio;
                }
                if ("phoneProviderName" in data && data.phoneProviderName != undefined) {
                    this.phoneProviderName = data.phoneProviderName;
                }
                if ("phoneProviderId" in data && data.phoneProviderId != undefined) {
                    this.phoneProviderId = data.phoneProviderId;
                }
                if ("phoneOptions" in data && data.phoneOptions != undefined) {
                    this.phoneOptions = data.phoneOptions;
                }
                if ("createdDate" in data && data.createdDate != undefined) {
                    this.createdDate = data.createdDate;
                }
                if ("updatedDate" in data && data.updatedDate != undefined) {
                    this.updatedDate = data.updatedDate;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 5, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get greeting() {
            return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
        }
        set greeting(value: string) {
            pb_1.Message.setOneofField(this, 10, this.#one_of_decls[0], value);
        }
        get has_greeting() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get mistake() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set mistake(value: string) {
            pb_1.Message.setOneofField(this, 11, this.#one_of_decls[1], value);
        }
        get has_mistake() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get ending() {
            return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
        }
        set ending(value: string) {
            pb_1.Message.setOneofField(this, 12, this.#one_of_decls[2], value);
        }
        get has_ending() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get inputAudio() {
            return pb_1.Message.getWrapperField(this, DeploymentAudioProvider, 13) as DeploymentAudioProvider;
        }
        set inputAudio(value: DeploymentAudioProvider) {
            pb_1.Message.setWrapperField(this, 13, value);
        }
        get has_inputAudio() {
            return pb_1.Message.getField(this, 13) != null;
        }
        get outputAudio() {
            return pb_1.Message.getWrapperField(this, DeploymentAudioProvider, 14) as DeploymentAudioProvider;
        }
        set outputAudio(value: DeploymentAudioProvider) {
            pb_1.Message.setWrapperField(this, 14, value);
        }
        get has_outputAudio() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get phoneProviderName() {
            return pb_1.Message.getFieldWithDefault(this, 15, "") as string;
        }
        set phoneProviderName(value: string) {
            pb_1.Message.setField(this, 15, value);
        }
        get phoneProviderId() {
            return pb_1.Message.getFieldWithDefault(this, 16, "0") as string;
        }
        set phoneProviderId(value: string) {
            pb_1.Message.setField(this, 16, value);
        }
        get phoneOptions() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Metadata, 17) as dependency_2.Metadata[];
        }
        set phoneOptions(value: dependency_2.Metadata[]) {
            pb_1.Message.setRepeatedWrapperField(this, 17, value);
        }
        get createdDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 26) as dependency_1.google.protobuf.Timestamp;
        }
        set createdDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 26, value);
        }
        get has_createdDate() {
            return pb_1.Message.getField(this, 26) != null;
        }
        get updatedDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 27) as dependency_1.google.protobuf.Timestamp;
        }
        set updatedDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 27, value);
        }
        get has_updatedDate() {
            return pb_1.Message.getField(this, 27) != null;
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 28, "") as string;
        }
        set status(value: string) {
            pb_1.Message.setField(this, 28, value);
        }
        get _greeting() {
            const cases: {
                [index: number]: "none" | "greeting";
            } = {
                0: "none",
                10: "greeting"
            };
            return cases[pb_1.Message.computeOneofCase(this, [10])];
        }
        get _mistake() {
            const cases: {
                [index: number]: "none" | "mistake";
            } = {
                0: "none",
                11: "mistake"
            };
            return cases[pb_1.Message.computeOneofCase(this, [11])];
        }
        get _ending() {
            const cases: {
                [index: number]: "none" | "ending";
            } = {
                0: "none",
                12: "ending"
            };
            return cases[pb_1.Message.computeOneofCase(this, [12])];
        }
        static fromObject(data: {
            id?: string;
            assistantId?: string;
            greeting?: string;
            mistake?: string;
            ending?: string;
            inputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
            outputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
            phoneProviderName?: string;
            phoneProviderId?: string;
            phoneOptions?: ReturnType<typeof dependency_2.Metadata.prototype.toObject>[];
            createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            status?: string;
        }): AssistantPhoneDeployment {
            const message = new AssistantPhoneDeployment({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.greeting != null) {
                message.greeting = data.greeting;
            }
            if (data.mistake != null) {
                message.mistake = data.mistake;
            }
            if (data.ending != null) {
                message.ending = data.ending;
            }
            if (data.inputAudio != null) {
                message.inputAudio = DeploymentAudioProvider.fromObject(data.inputAudio);
            }
            if (data.outputAudio != null) {
                message.outputAudio = DeploymentAudioProvider.fromObject(data.outputAudio);
            }
            if (data.phoneProviderName != null) {
                message.phoneProviderName = data.phoneProviderName;
            }
            if (data.phoneProviderId != null) {
                message.phoneProviderId = data.phoneProviderId;
            }
            if (data.phoneOptions != null) {
                message.phoneOptions = data.phoneOptions.map(item => dependency_2.Metadata.fromObject(item));
            }
            if (data.createdDate != null) {
                message.createdDate = dependency_1.google.protobuf.Timestamp.fromObject(data.createdDate);
            }
            if (data.updatedDate != null) {
                message.updatedDate = dependency_1.google.protobuf.Timestamp.fromObject(data.updatedDate);
            }
            if (data.status != null) {
                message.status = data.status;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                assistantId?: string;
                greeting?: string;
                mistake?: string;
                ending?: string;
                inputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
                outputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
                phoneProviderName?: string;
                phoneProviderId?: string;
                phoneOptions?: ReturnType<typeof dependency_2.Metadata.prototype.toObject>[];
                createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                status?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.greeting != null) {
                data.greeting = this.greeting;
            }
            if (this.mistake != null) {
                data.mistake = this.mistake;
            }
            if (this.ending != null) {
                data.ending = this.ending;
            }
            if (this.inputAudio != null) {
                data.inputAudio = this.inputAudio.toObject();
            }
            if (this.outputAudio != null) {
                data.outputAudio = this.outputAudio.toObject();
            }
            if (this.phoneProviderName != null) {
                data.phoneProviderName = this.phoneProviderName;
            }
            if (this.phoneProviderId != null) {
                data.phoneProviderId = this.phoneProviderId;
            }
            if (this.phoneOptions != null) {
                data.phoneOptions = this.phoneOptions.map((item: dependency_2.Metadata) => item.toObject());
            }
            if (this.createdDate != null) {
                data.createdDate = this.createdDate.toObject();
            }
            if (this.updatedDate != null) {
                data.updatedDate = this.updatedDate.toObject();
            }
            if (this.status != null) {
                data.status = this.status;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != "0")
                writer.writeUint64String(1, this.id);
            if (this.assistantId != "0")
                writer.writeUint64String(5, this.assistantId);
            if (this.has_greeting)
                writer.writeString(10, this.greeting);
            if (this.has_mistake)
                writer.writeString(11, this.mistake);
            if (this.has_ending)
                writer.writeString(12, this.ending);
            if (this.has_inputAudio)
                writer.writeMessage(13, this.inputAudio, () => this.inputAudio.serialize(writer));
            if (this.has_outputAudio)
                writer.writeMessage(14, this.outputAudio, () => this.outputAudio.serialize(writer));
            if (this.phoneProviderName.length)
                writer.writeString(15, this.phoneProviderName);
            if (this.phoneProviderId != "0")
                writer.writeUint64String(16, this.phoneProviderId);
            if (this.phoneOptions.length)
                writer.writeRepeatedMessage(17, this.phoneOptions, (item: dependency_2.Metadata) => item.serialize(writer));
            if (this.has_createdDate)
                writer.writeMessage(26, this.createdDate, () => this.createdDate.serialize(writer));
            if (this.has_updatedDate)
                writer.writeMessage(27, this.updatedDate, () => this.updatedDate.serialize(writer));
            if (this.status.length)
                writer.writeString(28, this.status);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AssistantPhoneDeployment {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AssistantPhoneDeployment();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64String();
                        break;
                    case 5:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 10:
                        message.greeting = reader.readString();
                        break;
                    case 11:
                        message.mistake = reader.readString();
                        break;
                    case 12:
                        message.ending = reader.readString();
                        break;
                    case 13:
                        reader.readMessage(message.inputAudio, () => message.inputAudio = DeploymentAudioProvider.deserialize(reader));
                        break;
                    case 14:
                        reader.readMessage(message.outputAudio, () => message.outputAudio = DeploymentAudioProvider.deserialize(reader));
                        break;
                    case 15:
                        message.phoneProviderName = reader.readString();
                        break;
                    case 16:
                        message.phoneProviderId = reader.readUint64String();
                        break;
                    case 17:
                        reader.readMessage(message.phoneOptions, () => pb_1.Message.addToRepeatedWrapperField(message, 17, dependency_2.Metadata.deserialize(reader), dependency_2.Metadata));
                        break;
                    case 26:
                        reader.readMessage(message.createdDate, () => message.createdDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 27:
                        reader.readMessage(message.updatedDate, () => message.updatedDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 28:
                        message.status = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AssistantPhoneDeployment {
            return AssistantPhoneDeployment.deserialize(bytes);
        }
    }
    export class AssistantWhatsappDeployment extends pb_1.Message {
        #one_of_decls: number[][] = [[10], [11], [12]];
        constructor(data?: any[] | ({
            id?: string;
            assistantId?: string;
            name?: string;
            whatsappProviderName?: string;
            whatsappProviderId?: string;
            whatsappOptions?: dependency_2.Metadata[];
            createdDate?: dependency_1.google.protobuf.Timestamp;
            updatedDate?: dependency_1.google.protobuf.Timestamp;
            status?: string;
        } & (({
            greeting?: string;
        }) | ({
            mistake?: string;
        }) | ({
            ending?: string;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [17], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("greeting" in data && data.greeting != undefined) {
                    this.greeting = data.greeting;
                }
                if ("mistake" in data && data.mistake != undefined) {
                    this.mistake = data.mistake;
                }
                if ("ending" in data && data.ending != undefined) {
                    this.ending = data.ending;
                }
                if ("whatsappProviderName" in data && data.whatsappProviderName != undefined) {
                    this.whatsappProviderName = data.whatsappProviderName;
                }
                if ("whatsappProviderId" in data && data.whatsappProviderId != undefined) {
                    this.whatsappProviderId = data.whatsappProviderId;
                }
                if ("whatsappOptions" in data && data.whatsappOptions != undefined) {
                    this.whatsappOptions = data.whatsappOptions;
                }
                if ("createdDate" in data && data.createdDate != undefined) {
                    this.createdDate = data.createdDate;
                }
                if ("updatedDate" in data && data.updatedDate != undefined) {
                    this.updatedDate = data.updatedDate;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 5, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get greeting() {
            return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
        }
        set greeting(value: string) {
            pb_1.Message.setOneofField(this, 10, this.#one_of_decls[0], value);
        }
        get has_greeting() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get mistake() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set mistake(value: string) {
            pb_1.Message.setOneofField(this, 11, this.#one_of_decls[1], value);
        }
        get has_mistake() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get ending() {
            return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
        }
        set ending(value: string) {
            pb_1.Message.setOneofField(this, 12, this.#one_of_decls[2], value);
        }
        get has_ending() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get whatsappProviderName() {
            return pb_1.Message.getFieldWithDefault(this, 15, "") as string;
        }
        set whatsappProviderName(value: string) {
            pb_1.Message.setField(this, 15, value);
        }
        get whatsappProviderId() {
            return pb_1.Message.getFieldWithDefault(this, 16, "0") as string;
        }
        set whatsappProviderId(value: string) {
            pb_1.Message.setField(this, 16, value);
        }
        get whatsappOptions() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Metadata, 17) as dependency_2.Metadata[];
        }
        set whatsappOptions(value: dependency_2.Metadata[]) {
            pb_1.Message.setRepeatedWrapperField(this, 17, value);
        }
        get createdDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 26) as dependency_1.google.protobuf.Timestamp;
        }
        set createdDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 26, value);
        }
        get has_createdDate() {
            return pb_1.Message.getField(this, 26) != null;
        }
        get updatedDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 27) as dependency_1.google.protobuf.Timestamp;
        }
        set updatedDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 27, value);
        }
        get has_updatedDate() {
            return pb_1.Message.getField(this, 27) != null;
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 28, "") as string;
        }
        set status(value: string) {
            pb_1.Message.setField(this, 28, value);
        }
        get _greeting() {
            const cases: {
                [index: number]: "none" | "greeting";
            } = {
                0: "none",
                10: "greeting"
            };
            return cases[pb_1.Message.computeOneofCase(this, [10])];
        }
        get _mistake() {
            const cases: {
                [index: number]: "none" | "mistake";
            } = {
                0: "none",
                11: "mistake"
            };
            return cases[pb_1.Message.computeOneofCase(this, [11])];
        }
        get _ending() {
            const cases: {
                [index: number]: "none" | "ending";
            } = {
                0: "none",
                12: "ending"
            };
            return cases[pb_1.Message.computeOneofCase(this, [12])];
        }
        static fromObject(data: {
            id?: string;
            assistantId?: string;
            name?: string;
            greeting?: string;
            mistake?: string;
            ending?: string;
            whatsappProviderName?: string;
            whatsappProviderId?: string;
            whatsappOptions?: ReturnType<typeof dependency_2.Metadata.prototype.toObject>[];
            createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            status?: string;
        }): AssistantWhatsappDeployment {
            const message = new AssistantWhatsappDeployment({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.greeting != null) {
                message.greeting = data.greeting;
            }
            if (data.mistake != null) {
                message.mistake = data.mistake;
            }
            if (data.ending != null) {
                message.ending = data.ending;
            }
            if (data.whatsappProviderName != null) {
                message.whatsappProviderName = data.whatsappProviderName;
            }
            if (data.whatsappProviderId != null) {
                message.whatsappProviderId = data.whatsappProviderId;
            }
            if (data.whatsappOptions != null) {
                message.whatsappOptions = data.whatsappOptions.map(item => dependency_2.Metadata.fromObject(item));
            }
            if (data.createdDate != null) {
                message.createdDate = dependency_1.google.protobuf.Timestamp.fromObject(data.createdDate);
            }
            if (data.updatedDate != null) {
                message.updatedDate = dependency_1.google.protobuf.Timestamp.fromObject(data.updatedDate);
            }
            if (data.status != null) {
                message.status = data.status;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                assistantId?: string;
                name?: string;
                greeting?: string;
                mistake?: string;
                ending?: string;
                whatsappProviderName?: string;
                whatsappProviderId?: string;
                whatsappOptions?: ReturnType<typeof dependency_2.Metadata.prototype.toObject>[];
                createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                status?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.greeting != null) {
                data.greeting = this.greeting;
            }
            if (this.mistake != null) {
                data.mistake = this.mistake;
            }
            if (this.ending != null) {
                data.ending = this.ending;
            }
            if (this.whatsappProviderName != null) {
                data.whatsappProviderName = this.whatsappProviderName;
            }
            if (this.whatsappProviderId != null) {
                data.whatsappProviderId = this.whatsappProviderId;
            }
            if (this.whatsappOptions != null) {
                data.whatsappOptions = this.whatsappOptions.map((item: dependency_2.Metadata) => item.toObject());
            }
            if (this.createdDate != null) {
                data.createdDate = this.createdDate.toObject();
            }
            if (this.updatedDate != null) {
                data.updatedDate = this.updatedDate.toObject();
            }
            if (this.status != null) {
                data.status = this.status;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != "0")
                writer.writeUint64String(1, this.id);
            if (this.assistantId != "0")
                writer.writeUint64String(5, this.assistantId);
            if (this.name.length)
                writer.writeString(6, this.name);
            if (this.has_greeting)
                writer.writeString(10, this.greeting);
            if (this.has_mistake)
                writer.writeString(11, this.mistake);
            if (this.has_ending)
                writer.writeString(12, this.ending);
            if (this.whatsappProviderName.length)
                writer.writeString(15, this.whatsappProviderName);
            if (this.whatsappProviderId != "0")
                writer.writeUint64String(16, this.whatsappProviderId);
            if (this.whatsappOptions.length)
                writer.writeRepeatedMessage(17, this.whatsappOptions, (item: dependency_2.Metadata) => item.serialize(writer));
            if (this.has_createdDate)
                writer.writeMessage(26, this.createdDate, () => this.createdDate.serialize(writer));
            if (this.has_updatedDate)
                writer.writeMessage(27, this.updatedDate, () => this.updatedDate.serialize(writer));
            if (this.status.length)
                writer.writeString(28, this.status);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AssistantWhatsappDeployment {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AssistantWhatsappDeployment();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64String();
                        break;
                    case 5:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 6:
                        message.name = reader.readString();
                        break;
                    case 10:
                        message.greeting = reader.readString();
                        break;
                    case 11:
                        message.mistake = reader.readString();
                        break;
                    case 12:
                        message.ending = reader.readString();
                        break;
                    case 15:
                        message.whatsappProviderName = reader.readString();
                        break;
                    case 16:
                        message.whatsappProviderId = reader.readUint64String();
                        break;
                    case 17:
                        reader.readMessage(message.whatsappOptions, () => pb_1.Message.addToRepeatedWrapperField(message, 17, dependency_2.Metadata.deserialize(reader), dependency_2.Metadata));
                        break;
                    case 26:
                        reader.readMessage(message.createdDate, () => message.createdDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 27:
                        reader.readMessage(message.updatedDate, () => message.updatedDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 28:
                        message.status = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AssistantWhatsappDeployment {
            return AssistantWhatsappDeployment.deserialize(bytes);
        }
    }
    export class AssistantDebuggerDeployment extends pb_1.Message {
        #one_of_decls: number[][] = [[15, 16], [10], [11], [12]];
        constructor(data?: any[] | ({
            id?: string;
            assistantId?: string;
            name?: string;
            inputAudio?: DeploymentAudioProvider;
            outputAudio?: DeploymentAudioProvider;
            suggestion?: string[];
            createdDate?: dependency_1.google.protobuf.Timestamp;
            updatedDate?: dependency_1.google.protobuf.Timestamp;
            status?: string;
        } & (({
            url?: string;
            raw?: never;
        } | {
            url?: never;
            raw?: dependency_2.Content;
        }) | ({
            greeting?: string;
        }) | ({
            mistake?: string;
        }) | ({
            ending?: string;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [20], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("greeting" in data && data.greeting != undefined) {
                    this.greeting = data.greeting;
                }
                if ("mistake" in data && data.mistake != undefined) {
                    this.mistake = data.mistake;
                }
                if ("ending" in data && data.ending != undefined) {
                    this.ending = data.ending;
                }
                if ("inputAudio" in data && data.inputAudio != undefined) {
                    this.inputAudio = data.inputAudio;
                }
                if ("outputAudio" in data && data.outputAudio != undefined) {
                    this.outputAudio = data.outputAudio;
                }
                if ("url" in data && data.url != undefined) {
                    this.url = data.url;
                }
                if ("raw" in data && data.raw != undefined) {
                    this.raw = data.raw;
                }
                if ("suggestion" in data && data.suggestion != undefined) {
                    this.suggestion = data.suggestion;
                }
                if ("createdDate" in data && data.createdDate != undefined) {
                    this.createdDate = data.createdDate;
                }
                if ("updatedDate" in data && data.updatedDate != undefined) {
                    this.updatedDate = data.updatedDate;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 5, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get greeting() {
            return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
        }
        set greeting(value: string) {
            pb_1.Message.setOneofField(this, 10, this.#one_of_decls[1], value);
        }
        get has_greeting() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get mistake() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set mistake(value: string) {
            pb_1.Message.setOneofField(this, 11, this.#one_of_decls[2], value);
        }
        get has_mistake() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get ending() {
            return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
        }
        set ending(value: string) {
            pb_1.Message.setOneofField(this, 12, this.#one_of_decls[3], value);
        }
        get has_ending() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get inputAudio() {
            return pb_1.Message.getWrapperField(this, DeploymentAudioProvider, 13) as DeploymentAudioProvider;
        }
        set inputAudio(value: DeploymentAudioProvider) {
            pb_1.Message.setWrapperField(this, 13, value);
        }
        get has_inputAudio() {
            return pb_1.Message.getField(this, 13) != null;
        }
        get outputAudio() {
            return pb_1.Message.getWrapperField(this, DeploymentAudioProvider, 14) as DeploymentAudioProvider;
        }
        set outputAudio(value: DeploymentAudioProvider) {
            pb_1.Message.setWrapperField(this, 14, value);
        }
        get has_outputAudio() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get url() {
            return pb_1.Message.getFieldWithDefault(this, 15, "") as string;
        }
        set url(value: string) {
            pb_1.Message.setOneofField(this, 15, this.#one_of_decls[0], value);
        }
        get has_url() {
            return pb_1.Message.getField(this, 15) != null;
        }
        get raw() {
            return pb_1.Message.getWrapperField(this, dependency_2.Content, 16) as dependency_2.Content;
        }
        set raw(value: dependency_2.Content) {
            pb_1.Message.setOneofWrapperField(this, 16, this.#one_of_decls[0], value);
        }
        get has_raw() {
            return pb_1.Message.getField(this, 16) != null;
        }
        get suggestion() {
            return pb_1.Message.getFieldWithDefault(this, 20, []) as string[];
        }
        set suggestion(value: string[]) {
            pb_1.Message.setField(this, 20, value);
        }
        get createdDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 26) as dependency_1.google.protobuf.Timestamp;
        }
        set createdDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 26, value);
        }
        get has_createdDate() {
            return pb_1.Message.getField(this, 26) != null;
        }
        get updatedDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 27) as dependency_1.google.protobuf.Timestamp;
        }
        set updatedDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 27, value);
        }
        get has_updatedDate() {
            return pb_1.Message.getField(this, 27) != null;
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 28, "") as string;
        }
        set status(value: string) {
            pb_1.Message.setField(this, 28, value);
        }
        get icon() {
            const cases: {
                [index: number]: "none" | "url" | "raw";
            } = {
                0: "none",
                15: "url",
                16: "raw"
            };
            return cases[pb_1.Message.computeOneofCase(this, [15, 16])];
        }
        get _greeting() {
            const cases: {
                [index: number]: "none" | "greeting";
            } = {
                0: "none",
                10: "greeting"
            };
            return cases[pb_1.Message.computeOneofCase(this, [10])];
        }
        get _mistake() {
            const cases: {
                [index: number]: "none" | "mistake";
            } = {
                0: "none",
                11: "mistake"
            };
            return cases[pb_1.Message.computeOneofCase(this, [11])];
        }
        get _ending() {
            const cases: {
                [index: number]: "none" | "ending";
            } = {
                0: "none",
                12: "ending"
            };
            return cases[pb_1.Message.computeOneofCase(this, [12])];
        }
        static fromObject(data: {
            id?: string;
            assistantId?: string;
            name?: string;
            greeting?: string;
            mistake?: string;
            ending?: string;
            inputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
            outputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
            url?: string;
            raw?: ReturnType<typeof dependency_2.Content.prototype.toObject>;
            suggestion?: string[];
            createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            status?: string;
        }): AssistantDebuggerDeployment {
            const message = new AssistantDebuggerDeployment({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.greeting != null) {
                message.greeting = data.greeting;
            }
            if (data.mistake != null) {
                message.mistake = data.mistake;
            }
            if (data.ending != null) {
                message.ending = data.ending;
            }
            if (data.inputAudio != null) {
                message.inputAudio = DeploymentAudioProvider.fromObject(data.inputAudio);
            }
            if (data.outputAudio != null) {
                message.outputAudio = DeploymentAudioProvider.fromObject(data.outputAudio);
            }
            if (data.url != null) {
                message.url = data.url;
            }
            if (data.raw != null) {
                message.raw = dependency_2.Content.fromObject(data.raw);
            }
            if (data.suggestion != null) {
                message.suggestion = data.suggestion;
            }
            if (data.createdDate != null) {
                message.createdDate = dependency_1.google.protobuf.Timestamp.fromObject(data.createdDate);
            }
            if (data.updatedDate != null) {
                message.updatedDate = dependency_1.google.protobuf.Timestamp.fromObject(data.updatedDate);
            }
            if (data.status != null) {
                message.status = data.status;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                assistantId?: string;
                name?: string;
                greeting?: string;
                mistake?: string;
                ending?: string;
                inputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
                outputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
                url?: string;
                raw?: ReturnType<typeof dependency_2.Content.prototype.toObject>;
                suggestion?: string[];
                createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                status?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.greeting != null) {
                data.greeting = this.greeting;
            }
            if (this.mistake != null) {
                data.mistake = this.mistake;
            }
            if (this.ending != null) {
                data.ending = this.ending;
            }
            if (this.inputAudio != null) {
                data.inputAudio = this.inputAudio.toObject();
            }
            if (this.outputAudio != null) {
                data.outputAudio = this.outputAudio.toObject();
            }
            if (this.url != null) {
                data.url = this.url;
            }
            if (this.raw != null) {
                data.raw = this.raw.toObject();
            }
            if (this.suggestion != null) {
                data.suggestion = this.suggestion;
            }
            if (this.createdDate != null) {
                data.createdDate = this.createdDate.toObject();
            }
            if (this.updatedDate != null) {
                data.updatedDate = this.updatedDate.toObject();
            }
            if (this.status != null) {
                data.status = this.status;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != "0")
                writer.writeUint64String(1, this.id);
            if (this.assistantId != "0")
                writer.writeUint64String(5, this.assistantId);
            if (this.name.length)
                writer.writeString(6, this.name);
            if (this.has_greeting)
                writer.writeString(10, this.greeting);
            if (this.has_mistake)
                writer.writeString(11, this.mistake);
            if (this.has_ending)
                writer.writeString(12, this.ending);
            if (this.has_inputAudio)
                writer.writeMessage(13, this.inputAudio, () => this.inputAudio.serialize(writer));
            if (this.has_outputAudio)
                writer.writeMessage(14, this.outputAudio, () => this.outputAudio.serialize(writer));
            if (this.has_url)
                writer.writeString(15, this.url);
            if (this.has_raw)
                writer.writeMessage(16, this.raw, () => this.raw.serialize(writer));
            if (this.suggestion.length)
                writer.writeRepeatedString(20, this.suggestion);
            if (this.has_createdDate)
                writer.writeMessage(26, this.createdDate, () => this.createdDate.serialize(writer));
            if (this.has_updatedDate)
                writer.writeMessage(27, this.updatedDate, () => this.updatedDate.serialize(writer));
            if (this.status.length)
                writer.writeString(28, this.status);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AssistantDebuggerDeployment {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AssistantDebuggerDeployment();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64String();
                        break;
                    case 5:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 6:
                        message.name = reader.readString();
                        break;
                    case 10:
                        message.greeting = reader.readString();
                        break;
                    case 11:
                        message.mistake = reader.readString();
                        break;
                    case 12:
                        message.ending = reader.readString();
                        break;
                    case 13:
                        reader.readMessage(message.inputAudio, () => message.inputAudio = DeploymentAudioProvider.deserialize(reader));
                        break;
                    case 14:
                        reader.readMessage(message.outputAudio, () => message.outputAudio = DeploymentAudioProvider.deserialize(reader));
                        break;
                    case 15:
                        message.url = reader.readString();
                        break;
                    case 16:
                        reader.readMessage(message.raw, () => message.raw = dependency_2.Content.deserialize(reader));
                        break;
                    case 20:
                        pb_1.Message.addToRepeatedField(message, 20, reader.readString());
                        break;
                    case 26:
                        reader.readMessage(message.createdDate, () => message.createdDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 27:
                        reader.readMessage(message.updatedDate, () => message.updatedDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 28:
                        message.status = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AssistantDebuggerDeployment {
            return AssistantDebuggerDeployment.deserialize(bytes);
        }
    }
    export class AssistantApiDeployment extends pb_1.Message {
        #one_of_decls: number[][] = [[10], [11], [12]];
        constructor(data?: any[] | ({
            id?: string;
            assistantId?: string;
            inputAudio?: DeploymentAudioProvider;
            outputAudio?: DeploymentAudioProvider;
            createdDate?: dependency_1.google.protobuf.Timestamp;
            updatedDate?: dependency_1.google.protobuf.Timestamp;
            status?: string;
        } & (({
            greeting?: string;
        }) | ({
            mistake?: string;
        }) | ({
            ending?: string;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
                if ("greeting" in data && data.greeting != undefined) {
                    this.greeting = data.greeting;
                }
                if ("mistake" in data && data.mistake != undefined) {
                    this.mistake = data.mistake;
                }
                if ("ending" in data && data.ending != undefined) {
                    this.ending = data.ending;
                }
                if ("inputAudio" in data && data.inputAudio != undefined) {
                    this.inputAudio = data.inputAudio;
                }
                if ("outputAudio" in data && data.outputAudio != undefined) {
                    this.outputAudio = data.outputAudio;
                }
                if ("createdDate" in data && data.createdDate != undefined) {
                    this.createdDate = data.createdDate;
                }
                if ("updatedDate" in data && data.updatedDate != undefined) {
                    this.updatedDate = data.updatedDate;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 5, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get greeting() {
            return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
        }
        set greeting(value: string) {
            pb_1.Message.setOneofField(this, 10, this.#one_of_decls[0], value);
        }
        get has_greeting() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get mistake() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set mistake(value: string) {
            pb_1.Message.setOneofField(this, 11, this.#one_of_decls[1], value);
        }
        get has_mistake() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get ending() {
            return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
        }
        set ending(value: string) {
            pb_1.Message.setOneofField(this, 12, this.#one_of_decls[2], value);
        }
        get has_ending() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get inputAudio() {
            return pb_1.Message.getWrapperField(this, DeploymentAudioProvider, 13) as DeploymentAudioProvider;
        }
        set inputAudio(value: DeploymentAudioProvider) {
            pb_1.Message.setWrapperField(this, 13, value);
        }
        get has_inputAudio() {
            return pb_1.Message.getField(this, 13) != null;
        }
        get outputAudio() {
            return pb_1.Message.getWrapperField(this, DeploymentAudioProvider, 14) as DeploymentAudioProvider;
        }
        set outputAudio(value: DeploymentAudioProvider) {
            pb_1.Message.setWrapperField(this, 14, value);
        }
        get has_outputAudio() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get createdDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 26) as dependency_1.google.protobuf.Timestamp;
        }
        set createdDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 26, value);
        }
        get has_createdDate() {
            return pb_1.Message.getField(this, 26) != null;
        }
        get updatedDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 27) as dependency_1.google.protobuf.Timestamp;
        }
        set updatedDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 27, value);
        }
        get has_updatedDate() {
            return pb_1.Message.getField(this, 27) != null;
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 28, "") as string;
        }
        set status(value: string) {
            pb_1.Message.setField(this, 28, value);
        }
        get _greeting() {
            const cases: {
                [index: number]: "none" | "greeting";
            } = {
                0: "none",
                10: "greeting"
            };
            return cases[pb_1.Message.computeOneofCase(this, [10])];
        }
        get _mistake() {
            const cases: {
                [index: number]: "none" | "mistake";
            } = {
                0: "none",
                11: "mistake"
            };
            return cases[pb_1.Message.computeOneofCase(this, [11])];
        }
        get _ending() {
            const cases: {
                [index: number]: "none" | "ending";
            } = {
                0: "none",
                12: "ending"
            };
            return cases[pb_1.Message.computeOneofCase(this, [12])];
        }
        static fromObject(data: {
            id?: string;
            assistantId?: string;
            greeting?: string;
            mistake?: string;
            ending?: string;
            inputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
            outputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
            createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            status?: string;
        }): AssistantApiDeployment {
            const message = new AssistantApiDeployment({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            if (data.greeting != null) {
                message.greeting = data.greeting;
            }
            if (data.mistake != null) {
                message.mistake = data.mistake;
            }
            if (data.ending != null) {
                message.ending = data.ending;
            }
            if (data.inputAudio != null) {
                message.inputAudio = DeploymentAudioProvider.fromObject(data.inputAudio);
            }
            if (data.outputAudio != null) {
                message.outputAudio = DeploymentAudioProvider.fromObject(data.outputAudio);
            }
            if (data.createdDate != null) {
                message.createdDate = dependency_1.google.protobuf.Timestamp.fromObject(data.createdDate);
            }
            if (data.updatedDate != null) {
                message.updatedDate = dependency_1.google.protobuf.Timestamp.fromObject(data.updatedDate);
            }
            if (data.status != null) {
                message.status = data.status;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                assistantId?: string;
                greeting?: string;
                mistake?: string;
                ending?: string;
                inputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
                outputAudio?: ReturnType<typeof DeploymentAudioProvider.prototype.toObject>;
                createdDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updatedDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                status?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            if (this.greeting != null) {
                data.greeting = this.greeting;
            }
            if (this.mistake != null) {
                data.mistake = this.mistake;
            }
            if (this.ending != null) {
                data.ending = this.ending;
            }
            if (this.inputAudio != null) {
                data.inputAudio = this.inputAudio.toObject();
            }
            if (this.outputAudio != null) {
                data.outputAudio = this.outputAudio.toObject();
            }
            if (this.createdDate != null) {
                data.createdDate = this.createdDate.toObject();
            }
            if (this.updatedDate != null) {
                data.updatedDate = this.updatedDate.toObject();
            }
            if (this.status != null) {
                data.status = this.status;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id != "0")
                writer.writeUint64String(1, this.id);
            if (this.assistantId != "0")
                writer.writeUint64String(5, this.assistantId);
            if (this.has_greeting)
                writer.writeString(10, this.greeting);
            if (this.has_mistake)
                writer.writeString(11, this.mistake);
            if (this.has_ending)
                writer.writeString(12, this.ending);
            if (this.has_inputAudio)
                writer.writeMessage(13, this.inputAudio, () => this.inputAudio.serialize(writer));
            if (this.has_outputAudio)
                writer.writeMessage(14, this.outputAudio, () => this.outputAudio.serialize(writer));
            if (this.has_createdDate)
                writer.writeMessage(26, this.createdDate, () => this.createdDate.serialize(writer));
            if (this.has_updatedDate)
                writer.writeMessage(27, this.updatedDate, () => this.updatedDate.serialize(writer));
            if (this.status.length)
                writer.writeString(28, this.status);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AssistantApiDeployment {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AssistantApiDeployment();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readUint64String();
                        break;
                    case 5:
                        message.assistantId = reader.readUint64String();
                        break;
                    case 10:
                        message.greeting = reader.readString();
                        break;
                    case 11:
                        message.mistake = reader.readString();
                        break;
                    case 12:
                        message.ending = reader.readString();
                        break;
                    case 13:
                        reader.readMessage(message.inputAudio, () => message.inputAudio = DeploymentAudioProvider.deserialize(reader));
                        break;
                    case 14:
                        reader.readMessage(message.outputAudio, () => message.outputAudio = DeploymentAudioProvider.deserialize(reader));
                        break;
                    case 26:
                        reader.readMessage(message.createdDate, () => message.createdDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 27:
                        reader.readMessage(message.updatedDate, () => message.updatedDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 28:
                        message.status = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AssistantApiDeployment {
            return AssistantApiDeployment.deserialize(bytes);
        }
    }
    export class CreateAssistantDeploymentRequest extends pb_1.Message {
        #one_of_decls: number[][] = [[1, 2, 3, 4, 5]];
        constructor(data?: any[] | ({} & (({
            api?: AssistantApiDeployment;
            debugger?: never;
            whatsapp?: never;
            phone?: never;
            plugin?: never;
        } | {
            api?: never;
            debugger?: AssistantDebuggerDeployment;
            whatsapp?: never;
            phone?: never;
            plugin?: never;
        } | {
            api?: never;
            debugger?: never;
            whatsapp?: AssistantWhatsappDeployment;
            phone?: never;
            plugin?: never;
        } | {
            api?: never;
            debugger?: never;
            whatsapp?: never;
            phone?: AssistantPhoneDeployment;
            plugin?: never;
        } | {
            api?: never;
            debugger?: never;
            whatsapp?: never;
            phone?: never;
            plugin?: AssistantWebpluginDeployment;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("api" in data && data.api != undefined) {
                    this.api = data.api;
                }
                if ("debugger" in data && data.debugger != undefined) {
                    this.debugger = data.debugger;
                }
                if ("whatsapp" in data && data.whatsapp != undefined) {
                    this.whatsapp = data.whatsapp;
                }
                if ("phone" in data && data.phone != undefined) {
                    this.phone = data.phone;
                }
                if ("plugin" in data && data.plugin != undefined) {
                    this.plugin = data.plugin;
                }
            }
        }
        get api() {
            return pb_1.Message.getWrapperField(this, AssistantApiDeployment, 1) as AssistantApiDeployment;
        }
        set api(value: AssistantApiDeployment) {
            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);
        }
        get has_api() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get debugger() {
            return pb_1.Message.getWrapperField(this, AssistantDebuggerDeployment, 2) as AssistantDebuggerDeployment;
        }
        set debugger(value: AssistantDebuggerDeployment) {
            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[0], value);
        }
        get has_debugger() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get whatsapp() {
            return pb_1.Message.getWrapperField(this, AssistantWhatsappDeployment, 3) as AssistantWhatsappDeployment;
        }
        set whatsapp(value: AssistantWhatsappDeployment) {
            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[0], value);
        }
        get has_whatsapp() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get phone() {
            return pb_1.Message.getWrapperField(this, AssistantPhoneDeployment, 4) as AssistantPhoneDeployment;
        }
        set phone(value: AssistantPhoneDeployment) {
            pb_1.Message.setOneofWrapperField(this, 4, this.#one_of_decls[0], value);
        }
        get has_phone() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get plugin() {
            return pb_1.Message.getWrapperField(this, AssistantWebpluginDeployment, 5) as AssistantWebpluginDeployment;
        }
        set plugin(value: AssistantWebpluginDeployment) {
            pb_1.Message.setOneofWrapperField(this, 5, this.#one_of_decls[0], value);
        }
        get has_plugin() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get deployment() {
            const cases: {
                [index: number]: "none" | "api" | "debugger" | "whatsapp" | "phone" | "plugin";
            } = {
                0: "none",
                1: "api",
                2: "debugger",
                3: "whatsapp",
                4: "phone",
                5: "plugin"
            };
            return cases[pb_1.Message.computeOneofCase(this, [1, 2, 3, 4, 5])];
        }
        static fromObject(data: {
            api?: ReturnType<typeof AssistantApiDeployment.prototype.toObject>;
            debugger?: ReturnType<typeof AssistantDebuggerDeployment.prototype.toObject>;
            whatsapp?: ReturnType<typeof AssistantWhatsappDeployment.prototype.toObject>;
            phone?: ReturnType<typeof AssistantPhoneDeployment.prototype.toObject>;
            plugin?: ReturnType<typeof AssistantWebpluginDeployment.prototype.toObject>;
        }): CreateAssistantDeploymentRequest {
            const message = new CreateAssistantDeploymentRequest({});
            if (data.api != null) {
                message.api = AssistantApiDeployment.fromObject(data.api);
            }
            if (data.debugger != null) {
                message.debugger = AssistantDebuggerDeployment.fromObject(data.debugger);
            }
            if (data.whatsapp != null) {
                message.whatsapp = AssistantWhatsappDeployment.fromObject(data.whatsapp);
            }
            if (data.phone != null) {
                message.phone = AssistantPhoneDeployment.fromObject(data.phone);
            }
            if (data.plugin != null) {
                message.plugin = AssistantWebpluginDeployment.fromObject(data.plugin);
            }
            return message;
        }
        toObject() {
            const data: {
                api?: ReturnType<typeof AssistantApiDeployment.prototype.toObject>;
                debugger?: ReturnType<typeof AssistantDebuggerDeployment.prototype.toObject>;
                whatsapp?: ReturnType<typeof AssistantWhatsappDeployment.prototype.toObject>;
                phone?: ReturnType<typeof AssistantPhoneDeployment.prototype.toObject>;
                plugin?: ReturnType<typeof AssistantWebpluginDeployment.prototype.toObject>;
            } = {};
            if (this.api != null) {
                data.api = this.api.toObject();
            }
            if (this.debugger != null) {
                data.debugger = this.debugger.toObject();
            }
            if (this.whatsapp != null) {
                data.whatsapp = this.whatsapp.toObject();
            }
            if (this.phone != null) {
                data.phone = this.phone.toObject();
            }
            if (this.plugin != null) {
                data.plugin = this.plugin.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_api)
                writer.writeMessage(1, this.api, () => this.api.serialize(writer));
            if (this.has_debugger)
                writer.writeMessage(2, this.debugger, () => this.debugger.serialize(writer));
            if (this.has_whatsapp)
                writer.writeMessage(3, this.whatsapp, () => this.whatsapp.serialize(writer));
            if (this.has_phone)
                writer.writeMessage(4, this.phone, () => this.phone.serialize(writer));
            if (this.has_plugin)
                writer.writeMessage(5, this.plugin, () => this.plugin.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateAssistantDeploymentRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateAssistantDeploymentRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.api, () => message.api = AssistantApiDeployment.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.debugger, () => message.debugger = AssistantDebuggerDeployment.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.whatsapp, () => message.whatsapp = AssistantWhatsappDeployment.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.phone, () => message.phone = AssistantPhoneDeployment.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.plugin, () => message.plugin = AssistantWebpluginDeployment.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateAssistantDeploymentRequest {
            return CreateAssistantDeploymentRequest.deserialize(bytes);
        }
    }
    export class GetAssistantApiDeploymentResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: AssistantApiDeployment;
            error?: dependency_2.Error;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, AssistantApiDeployment, 3) as AssistantApiDeployment;
        }
        set data(value: AssistantApiDeployment) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof AssistantApiDeployment.prototype.toObject>;
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
        }): GetAssistantApiDeploymentResponse {
            const message = new GetAssistantApiDeploymentResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = AssistantApiDeployment.fromObject(data.data);
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof AssistantApiDeployment.prototype.toObject>;
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.has_data)
                writer.writeMessage(3, this.data, () => this.data.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantApiDeploymentResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantApiDeploymentResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => message.data = AssistantApiDeployment.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantApiDeploymentResponse {
            return GetAssistantApiDeploymentResponse.deserialize(bytes);
        }
    }
    export class GetAssistantPhoneDeploymentResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: AssistantPhoneDeployment;
            error?: dependency_2.Error;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, AssistantPhoneDeployment, 3) as AssistantPhoneDeployment;
        }
        set data(value: AssistantPhoneDeployment) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof AssistantPhoneDeployment.prototype.toObject>;
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
        }): GetAssistantPhoneDeploymentResponse {
            const message = new GetAssistantPhoneDeploymentResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = AssistantPhoneDeployment.fromObject(data.data);
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof AssistantPhoneDeployment.prototype.toObject>;
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.has_data)
                writer.writeMessage(3, this.data, () => this.data.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantPhoneDeploymentResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantPhoneDeploymentResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => message.data = AssistantPhoneDeployment.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantPhoneDeploymentResponse {
            return GetAssistantPhoneDeploymentResponse.deserialize(bytes);
        }
    }
    export class GetAssistantWhatsappDeploymentResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: AssistantWhatsappDeployment;
            error?: dependency_2.Error;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, AssistantWhatsappDeployment, 3) as AssistantWhatsappDeployment;
        }
        set data(value: AssistantWhatsappDeployment) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof AssistantWhatsappDeployment.prototype.toObject>;
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
        }): GetAssistantWhatsappDeploymentResponse {
            const message = new GetAssistantWhatsappDeploymentResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = AssistantWhatsappDeployment.fromObject(data.data);
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof AssistantWhatsappDeployment.prototype.toObject>;
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.has_data)
                writer.writeMessage(3, this.data, () => this.data.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantWhatsappDeploymentResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantWhatsappDeploymentResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => message.data = AssistantWhatsappDeployment.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantWhatsappDeploymentResponse {
            return GetAssistantWhatsappDeploymentResponse.deserialize(bytes);
        }
    }
    export class GetAssistantDebuggerDeploymentResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: AssistantDebuggerDeployment;
            error?: dependency_2.Error;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, AssistantDebuggerDeployment, 3) as AssistantDebuggerDeployment;
        }
        set data(value: AssistantDebuggerDeployment) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof AssistantDebuggerDeployment.prototype.toObject>;
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
        }): GetAssistantDebuggerDeploymentResponse {
            const message = new GetAssistantDebuggerDeploymentResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = AssistantDebuggerDeployment.fromObject(data.data);
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof AssistantDebuggerDeployment.prototype.toObject>;
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.has_data)
                writer.writeMessage(3, this.data, () => this.data.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantDebuggerDeploymentResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantDebuggerDeploymentResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => message.data = AssistantDebuggerDeployment.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantDebuggerDeploymentResponse {
            return GetAssistantDebuggerDeploymentResponse.deserialize(bytes);
        }
    }
    export class GetAssistantWebpluginDeploymentResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            code?: number;
            success?: boolean;
            data?: AssistantWebpluginDeployment;
            error?: dependency_2.Error;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("code" in data && data.code != undefined) {
                    this.code = data.code;
                }
                if ("success" in data && data.success != undefined) {
                    this.success = data.success;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("error" in data && data.error != undefined) {
                    this.error = data.error;
                }
            }
        }
        get code() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set code(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get success() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set success(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, AssistantWebpluginDeployment, 3) as AssistantWebpluginDeployment;
        }
        set data(value: AssistantWebpluginDeployment) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get error() {
            return pb_1.Message.getWrapperField(this, dependency_2.Error, 4) as dependency_2.Error;
        }
        set error(value: dependency_2.Error) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get has_error() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            code?: number;
            success?: boolean;
            data?: ReturnType<typeof AssistantWebpluginDeployment.prototype.toObject>;
            error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
        }): GetAssistantWebpluginDeploymentResponse {
            const message = new GetAssistantWebpluginDeploymentResponse({});
            if (data.code != null) {
                message.code = data.code;
            }
            if (data.success != null) {
                message.success = data.success;
            }
            if (data.data != null) {
                message.data = AssistantWebpluginDeployment.fromObject(data.data);
            }
            if (data.error != null) {
                message.error = dependency_2.Error.fromObject(data.error);
            }
            return message;
        }
        toObject() {
            const data: {
                code?: number;
                success?: boolean;
                data?: ReturnType<typeof AssistantWebpluginDeployment.prototype.toObject>;
                error?: ReturnType<typeof dependency_2.Error.prototype.toObject>;
            } = {};
            if (this.code != null) {
                data.code = this.code;
            }
            if (this.success != null) {
                data.success = this.success;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            if (this.error != null) {
                data.error = this.error.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.code != 0)
                writer.writeInt32(1, this.code);
            if (this.success != false)
                writer.writeBool(2, this.success);
            if (this.has_data)
                writer.writeMessage(3, this.data, () => this.data.serialize(writer));
            if (this.has_error)
                writer.writeMessage(4, this.error, () => this.error.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantWebpluginDeploymentResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantWebpluginDeploymentResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.code = reader.readInt32();
                        break;
                    case 2:
                        message.success = reader.readBool();
                        break;
                    case 3:
                        reader.readMessage(message.data, () => message.data = AssistantWebpluginDeployment.deserialize(reader));
                        break;
                    case 4:
                        reader.readMessage(message.error, () => message.error = dependency_2.Error.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantWebpluginDeploymentResponse {
            return GetAssistantWebpluginDeploymentResponse.deserialize(bytes);
        }
    }
    export class GetAssistantDeploymentRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            assistantId?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("assistantId" in data && data.assistantId != undefined) {
                    this.assistantId = data.assistantId;
                }
            }
        }
        get assistantId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "0") as string;
        }
        set assistantId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            assistantId?: string;
        }): GetAssistantDeploymentRequest {
            const message = new GetAssistantDeploymentRequest({});
            if (data.assistantId != null) {
                message.assistantId = data.assistantId;
            }
            return message;
        }
        toObject() {
            const data: {
                assistantId?: string;
            } = {};
            if (this.assistantId != null) {
                data.assistantId = this.assistantId;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.assistantId != "0")
                writer.writeUint64String(1, this.assistantId);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetAssistantDeploymentRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetAssistantDeploymentRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.assistantId = reader.readUint64String();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetAssistantDeploymentRequest {
            return GetAssistantDeploymentRequest.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedAssistantDeploymentServiceService {
        static definition = {
            CreateAssistantApiDeployment: {
                path: "/assistant_api.AssistantDeploymentService/CreateAssistantApiDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: CreateAssistantDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => CreateAssistantDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantApiDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantApiDeploymentResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantApiDeployment: {
                path: "/assistant_api.AssistantDeploymentService/GetAssistantApiDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAssistantDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAssistantDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantApiDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantApiDeploymentResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistantWebpluginDeployment: {
                path: "/assistant_api.AssistantDeploymentService/CreateAssistantWebpluginDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: CreateAssistantDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => CreateAssistantDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantWebpluginDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantWebpluginDeploymentResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantWebpluginDeployment: {
                path: "/assistant_api.AssistantDeploymentService/GetAssistantWebpluginDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAssistantDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAssistantDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantWebpluginDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantWebpluginDeploymentResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistantDebuggerDeployment: {
                path: "/assistant_api.AssistantDeploymentService/CreateAssistantDebuggerDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: CreateAssistantDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => CreateAssistantDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantDebuggerDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantDebuggerDeploymentResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantDebuggerDeployment: {
                path: "/assistant_api.AssistantDeploymentService/GetAssistantDebuggerDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAssistantDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAssistantDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantDebuggerDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantDebuggerDeploymentResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistantWhatsappDeployment: {
                path: "/assistant_api.AssistantDeploymentService/CreateAssistantWhatsappDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: CreateAssistantDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => CreateAssistantDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantWhatsappDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantWhatsappDeploymentResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantWhatsappDeployment: {
                path: "/assistant_api.AssistantDeploymentService/GetAssistantWhatsappDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAssistantDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAssistantDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantWhatsappDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantWhatsappDeploymentResponse.deserialize(new Uint8Array(bytes))
            },
            CreateAssistantPhoneDeployment: {
                path: "/assistant_api.AssistantDeploymentService/CreateAssistantPhoneDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: CreateAssistantDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => CreateAssistantDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantPhoneDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantPhoneDeploymentResponse.deserialize(new Uint8Array(bytes))
            },
            GetAssistantPhoneDeployment: {
                path: "/assistant_api.AssistantDeploymentService/GetAssistantPhoneDeployment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: GetAssistantDeploymentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => GetAssistantDeploymentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: GetAssistantPhoneDeploymentResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => GetAssistantPhoneDeploymentResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract CreateAssistantApiDeployment(call: grpc_1.ServerUnaryCall<CreateAssistantDeploymentRequest, GetAssistantApiDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAssistantApiDeploymentResponse>): void;
        abstract GetAssistantApiDeployment(call: grpc_1.ServerUnaryCall<GetAssistantDeploymentRequest, GetAssistantApiDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAssistantApiDeploymentResponse>): void;
        abstract CreateAssistantWebpluginDeployment(call: grpc_1.ServerUnaryCall<CreateAssistantDeploymentRequest, GetAssistantWebpluginDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAssistantWebpluginDeploymentResponse>): void;
        abstract GetAssistantWebpluginDeployment(call: grpc_1.ServerUnaryCall<GetAssistantDeploymentRequest, GetAssistantWebpluginDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAssistantWebpluginDeploymentResponse>): void;
        abstract CreateAssistantDebuggerDeployment(call: grpc_1.ServerUnaryCall<CreateAssistantDeploymentRequest, GetAssistantDebuggerDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAssistantDebuggerDeploymentResponse>): void;
        abstract GetAssistantDebuggerDeployment(call: grpc_1.ServerUnaryCall<GetAssistantDeploymentRequest, GetAssistantDebuggerDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAssistantDebuggerDeploymentResponse>): void;
        abstract CreateAssistantWhatsappDeployment(call: grpc_1.ServerUnaryCall<CreateAssistantDeploymentRequest, GetAssistantWhatsappDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAssistantWhatsappDeploymentResponse>): void;
        abstract GetAssistantWhatsappDeployment(call: grpc_1.ServerUnaryCall<GetAssistantDeploymentRequest, GetAssistantWhatsappDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAssistantWhatsappDeploymentResponse>): void;
        abstract CreateAssistantPhoneDeployment(call: grpc_1.ServerUnaryCall<CreateAssistantDeploymentRequest, GetAssistantPhoneDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAssistantPhoneDeploymentResponse>): void;
        abstract GetAssistantPhoneDeployment(call: grpc_1.ServerUnaryCall<GetAssistantDeploymentRequest, GetAssistantPhoneDeploymentResponse>, callback: grpc_1.sendUnaryData<GetAssistantPhoneDeploymentResponse>): void;
    }
    export class AssistantDeploymentServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedAssistantDeploymentServiceService.definition, "AssistantDeploymentService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        CreateAssistantApiDeployment: GrpcUnaryServiceInterface<CreateAssistantDeploymentRequest, GetAssistantApiDeploymentResponse> = (message: CreateAssistantDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantApiDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantApiDeploymentResponse>, callback?: grpc_1.requestCallback<GetAssistantApiDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantApiDeployment(message, metadata, options, callback);
        };
        GetAssistantApiDeployment: GrpcUnaryServiceInterface<GetAssistantDeploymentRequest, GetAssistantApiDeploymentResponse> = (message: GetAssistantDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantApiDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantApiDeploymentResponse>, callback?: grpc_1.requestCallback<GetAssistantApiDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantApiDeployment(message, metadata, options, callback);
        };
        CreateAssistantWebpluginDeployment: GrpcUnaryServiceInterface<CreateAssistantDeploymentRequest, GetAssistantWebpluginDeploymentResponse> = (message: CreateAssistantDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantWebpluginDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantWebpluginDeploymentResponse>, callback?: grpc_1.requestCallback<GetAssistantWebpluginDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantWebpluginDeployment(message, metadata, options, callback);
        };
        GetAssistantWebpluginDeployment: GrpcUnaryServiceInterface<GetAssistantDeploymentRequest, GetAssistantWebpluginDeploymentResponse> = (message: GetAssistantDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantWebpluginDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantWebpluginDeploymentResponse>, callback?: grpc_1.requestCallback<GetAssistantWebpluginDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantWebpluginDeployment(message, metadata, options, callback);
        };
        CreateAssistantDebuggerDeployment: GrpcUnaryServiceInterface<CreateAssistantDeploymentRequest, GetAssistantDebuggerDeploymentResponse> = (message: CreateAssistantDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantDebuggerDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantDebuggerDeploymentResponse>, callback?: grpc_1.requestCallback<GetAssistantDebuggerDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantDebuggerDeployment(message, metadata, options, callback);
        };
        GetAssistantDebuggerDeployment: GrpcUnaryServiceInterface<GetAssistantDeploymentRequest, GetAssistantDebuggerDeploymentResponse> = (message: GetAssistantDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantDebuggerDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantDebuggerDeploymentResponse>, callback?: grpc_1.requestCallback<GetAssistantDebuggerDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantDebuggerDeployment(message, metadata, options, callback);
        };
        CreateAssistantWhatsappDeployment: GrpcUnaryServiceInterface<CreateAssistantDeploymentRequest, GetAssistantWhatsappDeploymentResponse> = (message: CreateAssistantDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantWhatsappDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantWhatsappDeploymentResponse>, callback?: grpc_1.requestCallback<GetAssistantWhatsappDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantWhatsappDeployment(message, metadata, options, callback);
        };
        GetAssistantWhatsappDeployment: GrpcUnaryServiceInterface<GetAssistantDeploymentRequest, GetAssistantWhatsappDeploymentResponse> = (message: GetAssistantDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantWhatsappDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantWhatsappDeploymentResponse>, callback?: grpc_1.requestCallback<GetAssistantWhatsappDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantWhatsappDeployment(message, metadata, options, callback);
        };
        CreateAssistantPhoneDeployment: GrpcUnaryServiceInterface<CreateAssistantDeploymentRequest, GetAssistantPhoneDeploymentResponse> = (message: CreateAssistantDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantPhoneDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantPhoneDeploymentResponse>, callback?: grpc_1.requestCallback<GetAssistantPhoneDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateAssistantPhoneDeployment(message, metadata, options, callback);
        };
        GetAssistantPhoneDeployment: GrpcUnaryServiceInterface<GetAssistantDeploymentRequest, GetAssistantPhoneDeploymentResponse> = (message: GetAssistantDeploymentRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantPhoneDeploymentResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<GetAssistantPhoneDeploymentResponse>, callback?: grpc_1.requestCallback<GetAssistantPhoneDeploymentResponse>): grpc_1.ClientUnaryCall => {
            return super.GetAssistantPhoneDeployment(message, metadata, options, callback);
        };
    }
}
